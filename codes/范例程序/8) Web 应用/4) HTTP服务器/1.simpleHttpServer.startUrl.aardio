//最简多线程服务端
import win.ui;
/*DSG{{*/
var winform = win.form(text="aardio form";right=759;bottom=469)
winform.add()
/*}}*/

import wsock.tcp.simpleHttpServer;  
/*
wsock.tcp.simpleHttpServer 用于创建多线程 HTTP 服务器。
默认的服务器线程是阻塞的，所以不要在窗口界面线程启动服务器线程。

wsock.tcp.simpleHttpServer.mainThread 则用于界面线程创建后台线程启动服务器，
好处是不会阻塞界面。

wsock.tcp.simpleHttpServer.startUrl() 函数
实际上就是调用 wsock.tcp.simpleHttpServer.mainThread
这个函数在界面线程内启动线程并返回访问地址，自动分配空闲端口，自动创建服务器线程，
并在界面线程退出前自动退出服务器线程，最适合用于创建软件内嵌的 HTTP 服务端。 
*/

var url = wsock.tcp.simpleHttpServer.startUrl("/.www/main.aardio");//参数支持 aardio 工程嵌入资源目录路径
//上面的函数可以重复调用，不会重复创建新的 HTTP 服务器端。

import web.form;
var wb = web.form(winform);

//用浏览器组件打开网页试试
wb.go(url);

winform.show();
win.loopMessage();