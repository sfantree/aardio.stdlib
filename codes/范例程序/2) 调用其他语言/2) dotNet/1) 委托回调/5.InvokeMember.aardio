//InvokeMember
import dotNet; 
var compiler = dotNet.createCompiler("C#"); 
compiler.Parameters.CompilerOptions = "/optimize";

compiler.Source = /****** 
using System;
using System.Reflection;
using System.Collections;

namespace CSharpLibrary
{
    public class DynObject : IEnumerable
    {
        private object target;
        private Type type;
        public DynObject(object aardioObject) { target = aardioObject; type = target.GetType(); }
        IEnumerator IEnumerable.GetEnumerator() {return (target as IEnumerable).GetEnumerator(); }
        
        public object InvokeMember(string method, params object[] args) { return type.InvokeMember(method, BindingFlags.InvokeMethod, null, target, args); }
        public object InvokeMember(int dispId, params object[] args){ return type.InvokeMember("[DispId=" + dispId + "]", BindingFlags.InvokeMethod, null, target, args); }
        public object Invoke(params object[] args) {return type.InvokeMember("", BindingFlags.InvokeMethod, null, target, args); }
    	
    	public object this[string index]
        {
            get { return type.InvokeMember(index, BindingFlags.GetProperty, null, target, null); }
            set { type.InvokeMember(index, BindingFlags.SetProperty, null, target, new object[] { value }); }
        }
    }

    public class Object
    {
        public object Hello(object aardioObject)
        {

           //转换 aardio 对象
            DynObject tab = new DynObject(aardioObject);

            //调用成员函数
            tab.InvokeMember("执行aardio", " console.log('在C#中执行aardio代码') ");
            
             //调用 对象自身（如果对象不是函数而是表，调用表对象的 _call 元方法）
            tab.Invoke(12, 3);

            //遍历 aardio 对象
            foreach (object item in tab)
            {
                Console.WriteLine("C#中遍历aardio对象键名：" + item);
            }

            //修改属性
            tab["属性名"] = 456;

            //读取属性
            return tab["属性名"];
        }
    }
}
******/

compiler.import("CSharpLibrary");  

//使用 C# 编写的类构造对象实例
var cSharpObject = CSharpLibrary.Object();

import console;
var aardioObject =  {  
    属性名 = 123; 
    执行aardio = function( code ){ 
        loadcode(code)(); 
        return 123;
    }; 
    @{
    	_call = function(a,b){
    		console.log("aardio 对象被 C# 调用了，参数:",a,b)
			return a + b; 
    	} 
    }
}

//调用实时编译的 C# 函数
var ret = cSharpObject.Hello( aardioObject ); 

console.dump(ret);
console.dumpJson(aardioObject);
console.pause();