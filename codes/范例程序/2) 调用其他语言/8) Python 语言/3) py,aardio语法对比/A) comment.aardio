//A)注释与字符串
import console;
console.open();

str = 'aardio在单引号中支持转义符，例如\n表示换行,区别是：
单引号中可以包含字面的换行,但在解析为字符串时忽略字面换
行，利用此特性可以方便的在源码中整齐的格式化长文本,但不
会影响实际的数据.'

str = "aardio中以在双引号中表示原始字符串，也就类似python中的raw string,区别是不需要在双引号前面加个r"

str = /***
aardio可以用段注释表示大段分行文本，类似python中三个引号中的表示方法，
但区别是，首尾星号的数目可以改变，只要配对就可以。

这种表示字符串的方面，字面上的换行被解释为'\r\n',
详见: http://bbs.aardio.com/doc/reference/the%20language/datatype/line.html
***/

import py3; 
pyCode = /***
str = 'python与aardio一样,字符串可以放在单引中并支持转义符,例如\n，区别是python中你不能在这里面换行书写字符串,而aardio中单引号内可以直接使用字面上的换行并在解析字符串时忽略换行符。\n'
print( str ) 

str = r"python双引号与单引号的作用没有区别,在前面加上一个r（大写R也可以）才类似aardio的双引号不支持转义表示原始字符串(raw string)，但杯具的是：python中你仍然不可以在这里面直接换行，而在aardio中双引号内同样可以包含换行，并统一解析为'\n'。" "\n"
print( str )  

wstr = u"ptyhon3里字符串默认为unicode，所以这个u前缀就没有意义了，在aardio里u需要写到单引号后面" "\n" 
print(  wstr.encode("gb2312")   ); #转换为指定编码字节数组，注意单引号前面的b前缀表示这是字节数组，aardio里字符串就是字节数组。

str = "python如果需要换行写的话，在行尾加一个反斜杠续行,\
这前面的换行是被忽略的，至于aardio则没有续行的概念，因为在aardio里字符串或是代码本身基本都可以自由换行，\
如果你希望象这样换行的写字符串，但是又在解析时忽略换行，那么在aardio里只要把字符串放到单引号里就可以了，\
在aardio里，字符串放到单引号里字面上的换行都是被忽略的，只能用\n表示换行，或者\r\n表示回车换行。\
试试去掉这后面的反斜杠,\
运行就会报语法错误了。" 

str  = "python里相邻的字符串可以自动连接" "这里自动连接前面的字符串"  
"不过不能象C语言一样来个换行或缩进,python对缩进的要求非常严格，多写一个空格也是不行的"
"至于换行后的字符串就被直接忽略了。"
print( str )

"python可以将字符串或者表达式等等写成一个单独的语句,在aardio里这种语句则是无意义的语法错误。"
 
str = """
python可以用三个引号写大段分行的字符串
也可以用三个引号来表示段注释，这与aardio的段注释表示法类似也可以用来表示一个字符串。
不同的是,aardio中的段注释可以通过增加星号的数目来匹配首尾标记，这是为了方便的嵌套其他已经包含注释的源代码。
"""
print( str )

def func():
    """这里的函数注释写到可以通过函数对象的__doc__属性获取"""
    pass
    
print( func.__doc__ ) #python里很多这种首尾各两个下划线的内建属性
 
#python使用井号开始行注释,类似aardio中的 //注释

***/

py3.exec( pyCode ) //运行python代码
console.pause();
