//系统模块
import py3; //一定要先导入 py3 扩展库，再导入 py3.lib.systemSitePackages
import py3.lib.systemSitePackages; //引入系统 Python 安装的所有第三方模块

if(!py3.lib.systemSitePackages.path){
	error("系统未安装 Python",2)
}

//打开 pip 安装第三方 Python 模块目录（ Python 安装目录下的 \Lib\site-packages 目录 )
import process; 
process.exploreSelect(py3.lib.systemSitePackages.path);

//查看系统 Python 版本
import console;
console.log(py3.lib.systemSitePackages.version);
 
//如下查看 py3 扩展库使用的 Python 运行时版本信息，注意是 32 位！是 32 位！
console.log( py3.sysObject("version"),'\n' );
console.pause();

/*
系统 Python 用 pip 安装的模块只能在你自己电脑上用，
而 aardio 安装的模块可以随自带的 Python 运行时分发到其他电脑，用户不用再安装，也不会出现版本冲突。
请理解 Python 模块安装比 aardio 装扩展库要复杂，如果安装 Python 模块遇到点问题就那个啥 …… 这样你很难继续前进。

系统安装的 Python 与你在 aardio 加载的 Python 请使用完全相同的版本(Python v3.8 32位)。
然后用 pip 安装模块，要注意看 pip 的提示安装了哪些依赖模块，把所有安装的模块复制到 aardio 里。

aardio 内默认的 Python 搜索模块的路径为:
"~\lib\py3\.res\Lib.zip" //为避免升级时被替换,不建议在这里添加模块，而且有些模块放到 zip 文件加载里会出错。
"~\lib\py3\.res\DLLs" //在这个目录下添加的文件会在发布时复制到发布目录，建议用 py3.lib.numpy 这种扩展库可以做到按需发布。
"\"
"\py"

可以参考 py3.lib.numpy 源码建立新的扩展库 —— 按需引用、扫需发布 Python 模块。
*/