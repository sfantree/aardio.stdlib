//安装模块
import console;
import py3;

//如下查看 py3 扩展库使用的 Python 运行时版本信息，注意是 32 位！是 32 位！
console.log( py3.sysObject("version"),'\n' );

var moduleName = "numpy";
var pyModule = py3.import(moduleName); //请用这段代码仔细测试第三方模块的依赖关系
if(pyModule){
	console.log(moduleName + "已安装，版本：", pyModule.__version__);
}
else { 
	console.printf("安装模块 ‘%s’ 失败",moduleName);
	console.log(py3.lasterr()); //查看导入模块失败的错误原因。
	/*
	1、低级错误，模块放错了位置。。
	2、模块的版本与 Python 版本不兼容。
	3、可能缺少了其他依赖模块和依赖文件，而依赖模块又可能重复出现这几个问题。
	*/
}

/*
系统 Python 用 pip 安装的模块只能在你自己电脑上用，
而 aardio 安装的模块可以随自带的 Python 运行时分发到其他电脑，用户不用再安装，也不会出现版本冲突。
请理解 Python 模块安装比 aardio 装扩展库要复杂，如果安装 Python 模块遇到点问题就那个啥 …… 这样你很难继续前进。

系统安装的 Python 与你在 aardio 加载的 Python 请使用完全相同的版本(Python v3.8 32位)。
然后用 pip 安装模块，要注意看 pip 的提示安装了哪些依赖模块，把所有安装的模块复制到 aardio 里。
pip 安装的模块在 Python 安装目录下的 \Lib\site-packages 目录。 
*/

/*
aardio 内默认的 Python 搜索模块的路径为:
"~\lib\py3\.res\Lib.zip" //为避免升级时被替换,不建议在这里添加模块，而且有些模块放到 zip 文件加载里会出错。
"~\lib\py3\.res\DLLs" //在这个目录下添加的文件会在发布时复制到发布目录。
"\"
"\py"

aardio 规定文件路径开始为波浪线表示 EXE 所在的目录（开发时为 aardio.exe 所在目录），
文件路径开始为斜杠（或反斜杠）表示应用程序根目录，应用程序根目录在开发时指工程根目录（工程外单独启动代码则为文件所在目录），
发布后应用程序根目录就是指 EXE 所在的目录。
*/
 
console.pause();
