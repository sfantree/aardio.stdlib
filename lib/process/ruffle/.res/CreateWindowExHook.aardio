code = /** 
	#include <windows.h>
 
	typedef BOOL WINAPI (*SetWindowPosPtr)( HWND hWnd, HWND hWndInsertAfter, int  X, int  Y,  int  cx, int  cy,  UINT uFlags);
	typedef HWND WINAPI (*CreateWindowExPtr)(
			DWORD     dwExStyle,
			LPCWSTR   lpClassName,
			LPCWSTR   lpWindowName,
			DWORD     dwStyle,
			int       x,
			int       y,
			int       nWidth,
			int       nHeight,
			HWND      hWndParent,
			HMENU     hMenu,
			HINSTANCE hInstance,
			LPVOID    lpParam
	);
	
	static CreateWindowExPtr pCreateWindowEx;
	static SetWindowPosPtr pSetWindowPos;
	static HWND hwndHost;
	static UINT msgId; 
	
	__declspec(dllexport) void hookSet( CreateWindowExPtr pc,SetWindowPosPtr ps,HWND hwnd){
		pCreateWindowEx = pc;
		pSetWindowPos = ps;
		hwndHost = hwnd;
	}  

	__declspec(dllexport) BOOL WINAPI hookSetWindowPos(HWND hWnd, HWND hWndInsertAfter,int  X,int  Y,int  cx,int  cy,UINT uFlags){   
	    LONG style = GetWindowLong(hWnd,GWL_STYLE);
	    style = style &~(WS_BORDER | WS_CAPTION | WS_DLGFRAME | WS_THICKFRAME);
	  	SetWindowLong(hWnd,GWL_STYLE,style); 
	  	
	  	style = GetWindowLong(hWnd,GWL_EXSTYLE);
	    style = style &~(WS_EX_APPWINDOW);
	  	SetWindowLong(hWnd,GWL_EXSTYLE,style); 
	  
	  	RECT rc;
		GetWindowRect(hwndHost,&rc);  
	    return pSetWindowPos( hWnd, 0,  rc.left,rc.top,   rc.right-rc.left, rc.bottom-rc.top,  SWP_NOZORDER|SWP_NOACTIVATE|SWP_NOREDRAW); 
	}
	
	__declspec(dllexport) HWND WINAPI CreateWindowExHook(
			DWORD     dwExStyle,
			LPCWSTR   lpClassName,
			LPCWSTR   lpWindowName,
			DWORD     dwStyle,
			int       x,
			int       y,
			int       nWidth,
			int       nHeight,
			HWND      hWndParent,
			HMENU     hMenu,
			HINSTANCE hInstance,
			LPVOID    lpParam
	){
		dwStyle = dwStyle &~(WS_BORDER | WS_CAPTION | WS_DLGFRAME | WS_THICKFRAME);
		return pCreateWindowEx(WS_EX_ACCEPTFILES,lpClassName,lpWindowName,dwStyle ,x,y,1,1,hWndParent,hMenu,hInstance,lpParam); 
	}
**/
 
import tcc; 
var vm = tcc();//创建TCC编译器 

/*
加载需要用到的动态库,或静态库
在"~\lib\tcc\.res\lib" 目录下查找 "动态库名.def" "静态库名.a"
也可以使用 vm.addLibPath() 函数添加搜索库的目录
*/
vm.addLib( 
	"user32",
	"kernel32",
	"gdi32"
) 

vm.addFile("\CreateWindowExHook.def")
vm.output( "~\lib\process\ruffle\.res\CreateWindowExHook.dll", code ) //编译C源码,生成DLL
vm.close(); //收工
 
import win;
win.msgbox("CreateWindowExHook 编译成功")
