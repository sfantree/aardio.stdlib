//md5 编码

var function str2blks(str) { 
	var nblk = ((#str + 8) >> 6) + 1; 
	var blks = {}
	
	for(i=0;nblk * 16 - 1;1){
		blks[i]=0;
	}
	
	var j; 
	for(i = 0; #str - 1 ) { 
		blks[i >> 2]  = blks[i >> 2] | ( ( str[i+1]  ) << ((i % 4) * 8) ); 
		j=i;  
	}
	
	j++;
	blks[j >> 2]  = blks[j >> 2] | (  0x80 << ((j % 4) * 8) );  
	blks[nblk * 16 - 2] = #str * 8; 
	return blks; 
} 
  
/*
 * Add integers, wrapping at 2^32. This uses 16-bit operations internally
 *  将32位数拆成高16位和低16位分别进行相加，从而实现 MOD 2^32 的加法
 */
var function safe_add(x, y){
	var lsw = (x & 0xFFFF) + (y & 0xFFFF);
	var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
	return (msw << 16) | (lsw & 0xFFFF);
}

/*
 * These functions implement the four basic operations the algorithm uses.
 */
var function md5_cmn(q, a, b, x, s, t){
	return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s),b);
}
var function md5_ff(a, b, c, d, x, s, t){
	return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);
}
var function md5_gg(a, b, c, d, x, s, t){
	return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);
}
var function md5_hh(a, b, c, d, x, s, t){
	return md5_cmn(b ^ c ^ d, a, b, x, s, t);
}
var function md5_ii(a, b, c, d, x, s, t){
	return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);
}

/*
 * Bitwise rotate a 32-bit number to the left.
 * 32位二进制数循环左移
 */
function bit_rol(num, cnt){ 
	return (num << cnt) | ( ( num  ) >>> (32 - cnt));
}

namespace string 

class md5{  
	ctor(str,low) {
		if(!str || (#str == 0) ) {
			if(low) return "d41d8cd98f00b204e9800998ecf8427e","8f00b204e9800998";
			else return "D41D8CD98F00B204E9800998ECF8427E","8F00B204E9800998";
		}
		var x = str2blks(str); 
		var a =  1732584193;
		var b = -271733879;
		var c = -1732584194;
		var d =  271733878; 
 		
		for(i = 0; #x ; 16)  begin
		var olda = a;
		var oldb = b;
		var oldc = c;
		var oldd = d;
		
		a = md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);
		d = md5_ff(d, a, b, c, x[i+ 1], 12, -389564586); 
		c = md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);
		b = md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);
		a = md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);
		d = md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);
		c = md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);
		b = md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);
		a = md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);
		d = md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);
		c = md5_ff(c, d, a, b, x[i+10], 17, -42063);
		b = md5_ff(b, c, d, a, x[i+11], 22, -1990404162);
		a = md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);
		d = md5_ff(d, a, b, c, x[i+13], 12, -40341101);
		c = md5_ff(c, d, a, b, x[i+14], 17, -1502002290);
		b = md5_ff(b, c, d, a, x[i+15], 22,  1236535329);
		
		a = md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);
		d = md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);
		c = md5_gg(c, d, a, b, x[i+11], 14,  643717713);
		b = md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);
		a = md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);
		d = md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);
		c = md5_gg(c, d, a, b, x[i+15], 14, -660478335);
		b = md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);
		a = md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);
		d = md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);
		c = md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);
		b = md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);
		a = md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);
		d = md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);
		c = md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);
		b = md5_gg(b, c, d, a, x[i+12], 20, -1926607734);
		
		a = md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);
		d = md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);
		c = md5_hh(c, d, a, b, x[i+11], 16,  1839030562);
		b = md5_hh(b, c, d, a, x[i+14], 23, -35309556);
		a = md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);
		d = md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);
		c = md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);
		b = md5_hh(b, c, d, a, x[i+10], 23, -1094730640);
		a = md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);
		d = md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);
		c = md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);
		b = md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);
		a = md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);
		d = md5_hh(d, a, b, c, x[i+12], 11, -421815835);
		c = md5_hh(c, d, a, b, x[i+15], 16,  530742520);
		b = md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);
		
		a = md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);
		d = md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);
		c = md5_ii(c, d, a, b, x[i+14], 15, -1416354905);
		b = md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);
		a = md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);
		d = md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);
		c = md5_ii(c, d, a, b, x[i+10], 15, -1051523);
		b = md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);
		a = md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);
		d = md5_ii(d, a, b, c, x[i+15], 10, -30611744);
		c = md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);
		b = md5_ii(b, c, d, a, x[i+13], 21,  1309151649);
		a = md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);
		d = md5_ii(d, a, b, c, x[i+11], 10, -1120210379);
		c = md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);
		b = md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);
		
		a = safe_add(a, olda);
		b = safe_add(b, oldb);
		c = safe_add(c, oldc);
		d = safe_add(d, oldd);
		end;
 		
		var data =  ..raw.convert( {int a = a;int b = b;int c = c;int d = d;}  , {byte arr[16];  } ).arr
		var fm = low?"%02x":"%02X";
		
		var result32 = {};
		for(i=1;16;1){
			result32[i] = ..string.format(fm,data[i] & 0xff );
		}
		
		var result16 ={}
		for(i=1;8;1){
			result16[i] = result32[i+4]
		}

		return ..string.join( result32  ) ,..string.join( result16 ),data
	} 

}
 
/*intellisense()
string.md5 = md5算法支持库
string.md5(.(字符串,是否小写) = md5加密算法\n返回三个值: 32位MD5值,16位MD5值,原始MD5字节值
end intellisense*/
