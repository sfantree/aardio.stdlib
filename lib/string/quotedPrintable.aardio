//quotedPrintable 编码
namespace string.quotedPrintable;
 
var push = ..table.push;
var sub = ..string.sub;
var format = ..string.format;

decode = function(s,utf8){
	var c;
    var out = {};
    if(!s) error("参数不能为字值",2);
    
	for( i=1;#s ){
		c = s[i];
		if( c == '='# ){
			if( ! ( s[i+1]=='\r'# && s[i+2] == '\n'# ) ){
				c = tonumber( sub(s,i+1,i+2),16)
				if( c === null ) return null,"格式错误" + sub(s,i);
				push( out,c ); 
			} 
			i+=2;
		}
		else if( c >= 0x20 && c <= 0x7f || c='\t' || c ='\r' || c = '\n'){
			push( out,c );
		}
		else {
			return null,"格式错误" + sub(s,i);
		}
	} 
	s = ..string.pack(out);
	if( (!utf8) && (utf8!==null) )  s = ..string.fromto(s,0,65001);
	return s;
}

encode = function(s,utf8){
	var c; 
	var len = 0;
    var out = {};
    if(!s) error("参数不能为字值",2)
    
    if( (!utf8) && (utf8!==null) ) s = ..string.fromto(s,65001,0);
    for(i=1;#s;1){ 
    	if( len >= 70 ){ 
    		push( out,'=\r\n');  
    		len = 0;
    	}
    	c = s[i];
    	if( c >= 33 && c <= 126 && c!='='# ){
    		push( out,s[[i]] )
    		len++;
    	}
    	else{
    		push( out,format("=%02X", c )  ) 
    		len+=3;
    	}
    }
    return ..string.join(out)
}  

/**intellisense(string.quotedPrintable)
encode( = 编码
encode(.("字符串",输入UTF8编码) = 参数@2可选,用于指定源字符串是否UTF8编码,默认为true,\n返回字符串
decode( = 解码
decode(.("字符串",输出UTF8编码) = 参数@2可选,指定输出编码为UTF8,默认为true,\n如果指定为false，在解码后转换为UTF8,\n成功返回字符串,失败返回null,错误信息
end intellisense**/
