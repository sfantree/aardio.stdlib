// @Author  : popy32
// @Contact : 74o5o27o8#qq.com
// @File    : windowsfollow.aardio
// @Comment : 窗口吸附跟随

import win.ui;
/*DSG{{*/
var winform = win.form(text="窗口吸附跟随";right=215;bottom=469;bgcolor=15780518;border="none")
winform.add(
edit={cls="edit";left=0;top=0;right=216;bottom=112;edge=1;multiline=1;z=1}
)
/*}}*/

import win;
import console;
import ide;
import win.cur;

// 窗口吸附 窗口跟随
// 参考 https://bbs.125.la/forum.php?mod=viewthread&tid=14533747

SetWinEventHook = ::User32.api("SetWinEventHook",
"INT(INT eventMin, INT eventMax, pointer hmodWinEventProc, 
pointer lpfnWinEventProc, INT idProcess, INT idThread, INT dwflags)")

class CURSORINFO{
     INT cbSize = 20;  
     INT flags;  
     pointer hCursor;  
     struct ptScreenPos = {int x;int y}; 
}

// https://stackoverflow.com/questions/10100769/capturing-mouse-pointer-shape-change-event-in-mfc
// https://stackoverflow.com/a/24471915
// 13757
getMouseCursorPointerState = function(){
	var info = CURSORINFO();
	::User32.GetCursorInfo(info);
	return info.hCursor
}

// 判断鼠标是否为输入状态 鼠标状态
hCursorIbeam = win.cur.load(32513 /*_IDC_IBEAM*/);
isMouseCursorInput = function(){
	var handle = getMouseCursorPointerState();
	return (handle == hCursorIbeam);
}

var g_count = 0;
// 光标的各种形状
// https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-loadcursora
hCursorWait = win.cur.load(0x7F02 /*_IDC_WAIT*/);

var winEventProc = function(hWinEventHook, event, hwnd, idObject, idChild, dwEventThread, dwmsEventTime){
    if( event == 0x800B /*EVENT_OBJECT_LOCATIONCHANGE*/ ){
        var hwnd = ide.getMainHwnd();
        var x, y, w, h = win.getPos(hwnd);
        win.setPos(winform.hwnd, x + w, y, winform.width, h);
    }
    
    // https://stackoverflow.com/a/36134005
    if( event == 0x800C /**EVENT_OBJECT_NAMECHANGE**/) {
        // #define OBJID_CURSOR ((LONG)0xFFFFFFF7)
        if (idObject == 0xFFFFFFF7 /* OBJID_CURSOR */ )
  		{
    		winform.edit.print(tostring(g_count) ++ " EVENT_OBJECT_NAMECHANGE");
    		winform.edit.print(isMouseCursorInput());
            g_count = g_count + 1;
  		}
        
    }
}

var proc = raw.tocdecl( winEventProc, "void( INT, WORD, INT, INT, INT, WORD, WORD )" )
var hWinEventHook = SetWinEventHook( 0x800B, 0x800C, null, proc,0 ,0 , 0  )  

// https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-unhookwinevent
winform.onClose = function(hwnd,message,wParam,lParam){
	if(hWinEventHook) {
	    ::User32.UnhookWinEvent(hWinEventHook);
	    hWinEventHook = null;
	}
}

winform.show();
win.loopMessage();