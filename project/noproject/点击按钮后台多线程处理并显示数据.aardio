// @Author  : popy32
// @Contact : 74o5o27o8#qq.com
// @File    : btnclickbgthread.aardio
// @Comment : 点击按钮后台多线程处理并显示数据

import debug;
import console;
import win.ui;
/*DSG{{*/
var winform = win.form(text="aardio form";right=759;bottom=469)
winform.add(
button={cls="button";text="日志测试1";left=0;top=0;right=128;bottom=32;z=2};
button2={cls="button";text="Attach";left=0;top=32;right=128;bottom=64;z=3};
button3={cls="button";text="tcp";left=0;top=64;right=128;bottom=96;z=4};
edit={cls="edit";left=0;top=256;right=760;bottom=472;autohscroll=false;bgcolor=0;color=16777215;edge=1;multiline=1;z=1};
listview={cls="listview";left=128;top=0;right=760;bottom=256;edge=1;z=5}
)
/*}}*/

winform.listview.insertColumn("类型",100) 
winform.listview.insertColumn("服务器",160) 
winform.listview.insertColumn("端口",70) 
winform.listview.insertColumn("加密",90) 
winform.listview.insertColumn("协议",50) 
winform.listview.insertColumn("备注",190) 
winform.listview.insertColumn("响应速度",95) 
winform.listview.insertColumn("状态",-1);
winform.listview.setExtended(0x10000/*_LVS_EX_DOUBLEBUFFER*/);

// 日志输出
Logd = function(...){
    import time;
    var args = {...};
    var tm = time.now();
    tm.format = "[%Y/%m/%d %H:%M:%S] ";
    //
    var debugInfo = debug.queryinfo(2, "select source,function,upvars,name,currentline,activelines") ;
    winform.edit.log(tostring(tm), "line: ", debugInfo[['currentline']], " ", ..string.join(args,' '),'\r\n');
    // 滚动条随光标滚动
    winform.edit.scrollCaret();
}

// 测试当前目录
winform.button.oncommand = function(id,event){
    import fsys;
    import fsys.path;
    Logd("winform.button.oncommand", "fsys.getCurDir()", fsys.getCurDir());
    Logd("winform.button.oncommand", "io._exepath", io._exepath);
    Logd("winform.button.oncommand", 'io.fullpath("/")', io.fullpath("/") );
    Logd("winform.button.oncommand", 'io.fullpath("~")', io.fullpath("~") );
}

// 数据呈现
winform.onTcpingReturn = function(outboundIndex,address,succeeded,speedText){
	if(address!=winform.listview.getItemText(outboundIndex,2)){
		return; 
	} 
	winform.listview.setItemText(speedText,outboundIndex,7);
	
	if(succeeded){
		winform.listview.setItemText(speedText,outboundIndex,7);
		winform.validOutbounds = {}
		winform.onTcpingReturn = function(outboundIndex,address,succeeded,speedText){
			if(address!=winform.listview.getItemText(outboundIndex,2)){
				return; 
			} 
			
			winform.listview.setItemText(speedText,outboundIndex,7);
			if(succeeded) { 
				table.push(winform.validOutbounds,{outboundIndex;address});
			}
			else{
				failedCount++;
				if(failedCount==#items) {
					//winform.onTcpingFailed();
				}
			}
		}
		//activeOutbound(outboundIndex,address,#items>1);	
	}
	else{
		failedCount++;
		if(failedCount==#items) {
			//winform.onTcpingFailed(); 
		}
	}
}

var tcping = function(winform,outboundIndex,outbound){ 
	import wsock.tcp.client;
	import win; 
	var timeout = 0; 
	var failed = 0;
	for(i=1;8;1){ 
		win.delay(500);
		var client = wsock.tcp.client(); 	
		var tickBegin = time.tick(); 
		if(client.connectTimeout(outbound.address,tonumber(outbound.port),3)){
			var ret = client.send("."); 
			client.close();
			
			if( ret != 1){  
				winform.onTcpingReturn(outboundIndex,outbound.address,false,"不可用");
				return;
			}
			timeout =  timeout + (time.tick() - tickBegin);
		}
		else {
			client.close();
			
			failed++;
			if(failed>1){ 
				winform.onTcpingReturn(outboundIndex,outbound.address,false,"不可用");
				return;	
			} 
		} 
	}
	
	frmXray.onTcpingReturn(outboundIndex,outbound.address,true,math.round(timeout / (8-failed) / 1000,2)+"秒"); 
};

winform.button3.oncommand = function(id,event){
	// 加载中的按钮
	winform.button3.disabledText = {" | ";" / ";" - ";" \ "};
	
	// 创建多线程
	var handles = {};
	var outbounds = {
	    {"address"="www.qq.com"; "port"="443"};
	    
	};
	var listview = winform.listview;
	
	thread.createSuspended(true);
	
	for(i=1;#outbounds;1){
		var h = thread.create(tcping,winform,i,outbounds[i]);
	    table.push(handles,h); 
	}
	thread.createSuspended(false);
	
	for(i=1;#handles;1){
		var h = handles[i];	 
		thread.resume(h);
		raw.closehandle(h);
	} 
		
	if(#handles) {
	    ..thread.waitOne(handles); 
	}
	
}

winform.show();
win.loopMessage();