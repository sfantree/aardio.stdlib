//halcon机器视觉库
namespace halconc;

dll = ..raw.loadDll("\res\halconc.dll","AArHalconC","cdecl");

T_union_cotangential_contours_xld= dll.api("T_union_cotangential_contours_xld","int(ADDR Contours, ADDR& UnionContours, struct FitClippingLength, struct FitLength, struct MaxTangAngle, struct MaxDist, struct MaxDistPerp, struct MaxOverlap, struct Mode)");
union_cotangential_contours_xld= dll.api("union_cotangential_contours_xld","int(ADDR Contours, ADDR& UnionContours, double FitClippingLength, double FitLength, double MaxTangAngle, double MaxDist, double MaxDistPerp, double MaxOverlap, string Mode)");
T_polar_trans_contour_xld_inv= dll.api("T_polar_trans_contour_xld_inv","int(ADDR PolarContour, ADDR& XYTransContour, struct Row, struct Column, struct AngleStart, struct AngleEnd, struct RadiusStart, struct RadiusEnd, struct WidthIn, struct HeightIn, struct Width, struct Height)");
polar_trans_contour_xld_inv= dll.api("polar_trans_contour_xld_inv","int(ADDR PolarContour, ADDR& XYTransContour, double Row, double Column, double AngleStart, double AngleEnd, double RadiusStart, double RadiusEnd, int WidthIn, int HeightIn, int Width, int Height)");
T_polar_trans_contour_xld= dll.api("T_polar_trans_contour_xld","int(ADDR Contour, ADDR& PolarTransContour, struct Row, struct Column, struct AngleStart, struct AngleEnd, struct RadiusStart, struct RadiusEnd, struct Width, struct Height)");
polar_trans_contour_xld= dll.api("polar_trans_contour_xld","int(ADDR Contour, ADDR& PolarTransContour, double Row, double Column, double AngleStart, double AngleEnd, double RadiusStart, double RadiusEnd, int Width, int Height)");
T_gen_nurbs_interp= dll.api("T_gen_nurbs_interp","int(struct Rows, struct Cols, struct Tangents, struct Degree, struct& CtrlRows, struct& CtrlCols, struct& Knots)");
T_gen_contour_nurbs_xld= dll.api("T_gen_contour_nurbs_xld","int(ADDR& Contour, struct Rows, struct Cols, struct Knots, struct Weights, struct Degree, struct MaxError, struct MaxDistance)");
T_union2_closed_polygons_xld= dll.api("T_union2_closed_polygons_xld","int(ADDR Polygons1, ADDR Polygons2, ADDR& PolygonsUnion)");
union2_closed_polygons_xld= dll.api("union2_closed_polygons_xld","int(ADDR Polygons1, ADDR Polygons2, ADDR& PolygonsUnion)");
T_union2_closed_contours_xld= dll.api("T_union2_closed_contours_xld","int(ADDR Contours1, ADDR Contours2, ADDR& ContoursUnion)");
union2_closed_contours_xld= dll.api("union2_closed_contours_xld","int(ADDR Contours1, ADDR Contours2, ADDR& ContoursUnion)");
T_symm_difference_closed_polygons_xld= dll.api("T_symm_difference_closed_polygons_xld","int(ADDR Polygons1, ADDR Polygons2, ADDR& PolygonsDifference)");
symm_difference_closed_polygons_xld= dll.api("symm_difference_closed_polygons_xld","int(ADDR Polygons1, ADDR Polygons2, ADDR& PolygonsDifference)");
T_symm_difference_closed_contours_xld= dll.api("T_symm_difference_closed_contours_xld","int(ADDR Contours1, ADDR Contours2, ADDR& ContoursDifference)");
symm_difference_closed_contours_xld= dll.api("symm_difference_closed_contours_xld","int(ADDR Contours1, ADDR Contours2, ADDR& ContoursDifference)");
T_difference_closed_polygons_xld= dll.api("T_difference_closed_polygons_xld","int(ADDR Polygons, ADDR Sub, ADDR& PolygonsDifference)");
difference_closed_polygons_xld= dll.api("difference_closed_polygons_xld","int(ADDR Polygons, ADDR Sub, ADDR& PolygonsDifference)");
T_difference_closed_contours_xld= dll.api("T_difference_closed_contours_xld","int(ADDR Contours, ADDR Sub, ADDR& ContoursDifference)");
difference_closed_contours_xld= dll.api("difference_closed_contours_xld","int(ADDR Contours, ADDR Sub, ADDR& ContoursDifference)");
T_intersection_closed_polygons_xld= dll.api("T_intersection_closed_polygons_xld","int(ADDR Polygons1, ADDR Polygons2, ADDR& PolygonsIntersection)");
intersection_closed_polygons_xld= dll.api("intersection_closed_polygons_xld","int(ADDR Polygons1, ADDR Polygons2, ADDR& PolygonsIntersection)");
T_intersection_closed_contours_xld= dll.api("T_intersection_closed_contours_xld","int(ADDR Contours1, ADDR Contours2, ADDR& ContoursIntersection)");
intersection_closed_contours_xld= dll.api("intersection_closed_contours_xld","int(ADDR Contours1, ADDR Contours2, ADDR& ContoursIntersection)");
T_union_cocircular_contours_xld= dll.api("T_union_cocircular_contours_xld","int(ADDR Contours, ADDR& UnionContours, struct MaxArcAngleDiff, struct MaxArcOverlap, struct MaxTangentAngle, struct MaxDist, struct MaxRadiusDiff, struct MaxCenterDist, struct MergeSmallContours, struct Iterations)");
union_cocircular_contours_xld= dll.api("union_cocircular_contours_xld","int(ADDR Contours, ADDR& UnionContours, double MaxArcAngleDiff, double MaxArcOverlap, double MaxTangentAngle, double MaxDist, double MaxRadiusDiff, double MaxCenterDist, string MergeSmallContours, int Iterations)");
T_crop_contours_xld= dll.api("T_crop_contours_xld","int(ADDR Contours, ADDR& CroppedContours, struct Row1, struct Col1, struct Row2, struct Col2, struct CloseContours)");
crop_contours_xld= dll.api("crop_contours_xld","int(ADDR Contours, ADDR& CroppedContours, double Row1, double Col1, double Row2, double Col2, string CloseContours)");
T_gen_cross_contour_xld= dll.api("T_gen_cross_contour_xld","int(ADDR& Cross, struct Row, struct Col, struct Size, struct Angle)");
gen_cross_contour_xld= dll.api("gen_cross_contour_xld","int(ADDR& Cross, double Row, double Col, double Size, double Angle)");
T_sort_contours_xld= dll.api("T_sort_contours_xld","int(ADDR Contours, ADDR& SortedContours, struct SortMode, struct Order, struct RowOrCol)");
sort_contours_xld= dll.api("sort_contours_xld","int(ADDR Contours, ADDR& SortedContours, string SortMode, string Order, string RowOrCol)");
T_merge_cont_line_scan_xld= dll.api("T_merge_cont_line_scan_xld","int(ADDR CurrConts, ADDR PrevConts, ADDR& CurrMergedConts, ADDR& PrevMergedConts, struct ImageHeight, struct Margin, struct MergeBorder, struct MaxImagesCont)");
merge_cont_line_scan_xld= dll.api("merge_cont_line_scan_xld","int(ADDR CurrConts, ADDR PrevConts, ADDR& CurrMergedConts, ADDR& PrevMergedConts, int ImageHeight, double Margin, string MergeBorder, int MaxImagesCont)");
T_read_polygon_xld_arc_info= dll.api("T_read_polygon_xld_arc_info","int(ADDR& Polygons, struct FileName)");
read_polygon_xld_arc_info= dll.api("read_polygon_xld_arc_info","int(ADDR& Polygons, string FileName)");
T_write_polygon_xld_arc_info= dll.api("T_write_polygon_xld_arc_info","int(ADDR Polygons, struct FileName)");
write_polygon_xld_arc_info= dll.api("write_polygon_xld_arc_info","int(ADDR Polygons, string FileName)");
T_read_contour_xld_arc_info= dll.api("T_read_contour_xld_arc_info","int(ADDR& Contours, struct FileName)");
read_contour_xld_arc_info= dll.api("read_contour_xld_arc_info","int(ADDR& Contours, string FileName)");
T_write_contour_xld_arc_info= dll.api("T_write_contour_xld_arc_info","int(ADDR Contours, struct FileName)");
write_contour_xld_arc_info= dll.api("write_contour_xld_arc_info","int(ADDR Contours, string FileName)");
T_read_world_file= dll.api("T_read_world_file","int(struct FileName, struct& WorldTransformation)");
T_gen_parallel_contour_xld= dll.api("T_gen_parallel_contour_xld","int(ADDR Contours, ADDR& ParallelContours, struct Mode, struct Distance)");
gen_parallel_contour_xld= dll.api("gen_parallel_contour_xld","int(ADDR Contours, ADDR& ParallelContours, string Mode, double Distance)");
T_gen_rectangle2_contour_xld= dll.api("T_gen_rectangle2_contour_xld","int(ADDR& Rectangle, struct Row, struct Column, struct Phi, struct Length1, struct Length2)");
gen_rectangle2_contour_xld= dll.api("gen_rectangle2_contour_xld","int(ADDR& Rectangle, double Row, double Column, double Phi, double Length1, double Length2)");
T_dist_rectangle2_contour_points_xld= dll.api("T_dist_rectangle2_contour_points_xld","int(ADDR Contour, struct ClippingEndPoints, struct Row, struct Column, struct Phi, struct Length1, struct Length2, struct& Distances)");
T_fit_rectangle2_contour_xld= dll.api("T_fit_rectangle2_contour_xld","int(ADDR Contours, struct Algorithm, struct MaxNumPoints, struct MaxClosureDist, struct ClippingEndPoints, struct Iterations, struct ClippingFactor, struct& Row, struct& Column, struct& Phi, struct& Length1, struct& Length2, struct& PointOrder)");
fit_rectangle2_contour_xld= dll.api("fit_rectangle2_contour_xld","int(ADDR Contours, string Algorithm, int MaxNumPoints, double MaxClosureDist, int ClippingEndPoints, int Iterations, double ClippingFactor, double& Row, double& Column, double& Phi, double& Length1, double& Length2, string& PointOrder)");
T_segment_contour_attrib_xld= dll.api("T_segment_contour_attrib_xld","int(ADDR Contour, ADDR& ContourPart, struct Attribute, struct Operation, struct Min, struct Max)");
segment_contour_attrib_xld= dll.api("segment_contour_attrib_xld","int(ADDR Contour, ADDR& ContourPart, string Attribute, string Operation, double Min, double Max)");
T_segment_contours_xld= dll.api("T_segment_contours_xld","int(ADDR Contours, ADDR& ContoursSplit, struct Mode, struct SmoothCont, struct MaxLineDist1, struct MaxLineDist2)");
segment_contours_xld= dll.api("segment_contours_xld","int(ADDR Contours, ADDR& ContoursSplit, string Mode, int SmoothCont, double MaxLineDist1, double MaxLineDist2)");
T_fit_circle_contour_xld= dll.api("T_fit_circle_contour_xld","int(ADDR Contours, struct Algorithm, struct MaxNumPoints, struct MaxClosureDist, struct ClippingEndPoints, struct Iterations, struct ClippingFactor, struct& Row, struct& Column, struct& Radius, struct& StartPhi, struct& EndPhi, struct& PointOrder)");
fit_circle_contour_xld= dll.api("fit_circle_contour_xld","int(ADDR Contours, string Algorithm, int MaxNumPoints, double MaxClosureDist, int ClippingEndPoints, int Iterations, double ClippingFactor, double& Row, double& Column, double& Radius, double& StartPhi, double& EndPhi, string& PointOrder)");
T_fit_line_contour_xld= dll.api("T_fit_line_contour_xld","int(ADDR Contours, struct Algorithm, struct MaxNumPoints, struct ClippingEndPoints, struct Iterations, struct ClippingFactor, struct& RowBegin, struct& ColBegin, struct& RowEnd, struct& ColEnd, struct& Nr, struct& Nc, struct& Dist)");
fit_line_contour_xld= dll.api("fit_line_contour_xld","int(ADDR Contours, string Algorithm, int MaxNumPoints, int ClippingEndPoints, int Iterations, double ClippingFactor, double& RowBegin, double& ColBegin, double& RowEnd, double& ColEnd, double& Nr, double& Nc, double& Dist)");
T_dist_ellipse_contour_points_xld= dll.api("T_dist_ellipse_contour_points_xld","int(ADDR Contour, struct DistanceMode, struct ClippingEndPoints, struct Row, struct Column, struct Phi, struct Radius1, struct Radius2, struct& Distances)");
T_dist_ellipse_contour_xld= dll.api("T_dist_ellipse_contour_xld","int(ADDR Contours, struct Mode, struct MaxNumPoints, struct ClippingEndPoints, struct Row, struct Column, struct Phi, struct Radius1, struct Radius2, struct& MinDist, struct& MaxDist, struct& AvgDist, struct& SigmaDist)");
dist_ellipse_contour_xld= dll.api("dist_ellipse_contour_xld","int(ADDR Contours, string Mode, int MaxNumPoints, int ClippingEndPoints, double Row, double Column, double Phi, double Radius1, double Radius2, double& MinDist, double& MaxDist, double& AvgDist, double& SigmaDist)");
T_fit_ellipse_contour_xld= dll.api("T_fit_ellipse_contour_xld","int(ADDR Contours, struct Algorithm, struct MaxNumPoints, struct MaxClosureDist, struct ClippingEndPoints, struct VossTabSize, struct Iterations, struct ClippingFactor, struct& Row, struct& Column, struct& Phi, struct& Radius1, struct& Radius2, struct& StartPhi, struct& EndPhi, struct& PointOrder)");
fit_ellipse_contour_xld= dll.api("fit_ellipse_contour_xld","int(ADDR Contours, string Algorithm, int MaxNumPoints, double MaxClosureDist, int ClippingEndPoints, int VossTabSize, int Iterations, double ClippingFactor, double& Row, double& Column, double& Phi, double& Radius1, double& Radius2, double& StartPhi, double& EndPhi, string& PointOrder)");
T_gen_circle_contour_xld= dll.api("T_gen_circle_contour_xld","int(ADDR& ContCircle, struct Row, struct Column, struct Radius, struct StartPhi, struct EndPhi, struct PointOrder, struct Resolution)");
gen_circle_contour_xld= dll.api("gen_circle_contour_xld","int(ADDR& ContCircle, double Row, double Column, double Radius, double StartPhi, double EndPhi, string PointOrder, double Resolution)");
T_gen_ellipse_contour_xld= dll.api("T_gen_ellipse_contour_xld","int(ADDR& ContEllipse, struct Row, struct Column, struct Phi, struct Radius1, struct Radius2, struct StartPhi, struct EndPhi, struct PointOrder, struct Resolution)");
gen_ellipse_contour_xld= dll.api("gen_ellipse_contour_xld","int(ADDR& ContEllipse, double Row, double Column, double Phi, double Radius1, double Radius2, double StartPhi, double EndPhi, string PointOrder, double Resolution)");
T_add_noise_white_contour_xld= dll.api("T_add_noise_white_contour_xld","int(ADDR Contours, ADDR& NoisyContours, struct NumRegrPoints, struct Amp)");
add_noise_white_contour_xld= dll.api("add_noise_white_contour_xld","int(ADDR Contours, ADDR& NoisyContours, int NumRegrPoints, double Amp)");
T_combine_roads_xld= dll.api("T_combine_roads_xld","int(ADDR EdgePolygons, ADDR ModParallels, ADDR ExtParallels, ADDR CenterLines, ADDR& RoadSides, struct MaxAngleParallel, struct MaxAngleColinear, struct MaxDistanceParallel, struct MaxDistanceColinear)");
combine_roads_xld= dll.api("combine_roads_xld","int(ADDR EdgePolygons, ADDR ModParallels, ADDR ExtParallels, ADDR CenterLines, ADDR& RoadSides, double MaxAngleParallel, double MaxAngleColinear, double MaxDistanceParallel, double MaxDistanceColinear)");
T_max_parallels_xld= dll.api("T_max_parallels_xld","int(ADDR ExtParallels, ADDR& MaxPolygons)");
max_parallels_xld= dll.api("max_parallels_xld","int(ADDR ExtParallels, ADDR& MaxPolygons)");
T_mod_parallels_xld= dll.api("T_mod_parallels_xld","int(ADDR Parallels, ADDR Image, ADDR& ModParallels, ADDR& ExtParallels, struct Quality, struct MinGray, struct MaxGray, struct MaxStandard)");
mod_parallels_xld= dll.api("mod_parallels_xld","int(ADDR Parallels, ADDR Image, ADDR& ModParallels, ADDR& ExtParallels, double Quality, int MinGray, int MaxGray, double MaxStandard)");
T_info_parallels_xld= dll.api("T_info_parallels_xld","int(ADDR Parallels, ADDR Image, struct& QualityMin, struct& QualityMax, struct& GrayMin, struct& GrayMax, struct& StandardMin, struct& StandardMax)");
info_parallels_xld= dll.api("info_parallels_xld","int(ADDR Parallels, ADDR Image, double& QualityMin, double& QualityMax, int& GrayMin, int& GrayMax, double& StandardMin, double& StandardMax)");
T_get_parallels_xld= dll.api("T_get_parallels_xld","int(ADDR Parallels, struct& Row1, struct& Col1, struct& Length1, struct& Phi1, struct& Row2, struct& Col2, struct& Length2, struct& Phi2)");
T_gen_parallels_xld= dll.api("T_gen_parallels_xld","int(ADDR Polygons, ADDR& Parallels, struct Len, struct Dist, struct Alpha, struct Merge)");
gen_parallels_xld= dll.api("gen_parallels_xld","int(ADDR Polygons, ADDR& Parallels, double Len, double Dist, double Alpha, string Merge)");
T_get_lines_xld= dll.api("T_get_lines_xld","int(ADDR Polygon, struct& BeginRow, struct& BeginCol, struct& EndRow, struct& EndCol, struct& Length, struct& Phi)");
T_get_polygon_xld= dll.api("T_get_polygon_xld","int(ADDR Polygon, struct& Row, struct& Col, struct& Length, struct& Phi)");
T_gen_polygons_xld= dll.api("T_gen_polygons_xld","int(ADDR Contours, ADDR& Polygons, struct Type, struct Alpha)");
gen_polygons_xld= dll.api("gen_polygons_xld","int(ADDR Contours, ADDR& Polygons, string Type, double Alpha)");
T_split_contours_xld= dll.api("T_split_contours_xld","int(ADDR Polygons, ADDR& Contours, struct Mode, struct Weight, struct Smooth)");
split_contours_xld= dll.api("split_contours_xld","int(ADDR Polygons, ADDR& Contours, string Mode, int Weight, int Smooth)");
T_projective_trans_contour_xld= dll.api("T_projective_trans_contour_xld","int(ADDR Contours, ADDR& ContoursProjTrans, struct HomMat2D)");
T_affine_trans_polygon_xld= dll.api("T_affine_trans_polygon_xld","int(ADDR Polygons, ADDR& PolygonsAffineTrans, struct HomMat2D)");
T_affine_trans_contour_xld= dll.api("T_affine_trans_contour_xld","int(ADDR Contours, ADDR& ContoursAffineTrans, struct HomMat2D)");
T_close_contours_xld= dll.api("T_close_contours_xld","int(ADDR Contours, ADDR& ClosedContours)");
close_contours_xld= dll.api("close_contours_xld","int(ADDR Contours, ADDR& ClosedContours)");
T_clip_end_points_contours_xld= dll.api("T_clip_end_points_contours_xld","int(ADDR Contours, ADDR& ClippedContours, struct Mode, struct Length)");
clip_end_points_contours_xld= dll.api("clip_end_points_contours_xld","int(ADDR Contours, ADDR& ClippedContours, string Mode, double Length)");
T_clip_contours_xld= dll.api("T_clip_contours_xld","int(ADDR Contours, ADDR& ClippedContours, struct Row1, struct Column1, struct Row2, struct Column2)");
clip_contours_xld= dll.api("clip_contours_xld","int(ADDR Contours, ADDR& ClippedContours, int Row1, int Column1, int Row2, int Column2)");
T_local_max_contours_xld= dll.api("T_local_max_contours_xld","int(ADDR Contours, ADDR Image, ADDR& LocalMaxContours, struct MinPercent, struct MinDiff, struct Distance)");
local_max_contours_xld= dll.api("local_max_contours_xld","int(ADDR Contours, ADDR Image, ADDR& LocalMaxContours, int MinPercent, int MinDiff, int Distance)");
T_union_straight_contours_histo_xld= dll.api("T_union_straight_contours_histo_xld","int(ADDR Contours, ADDR& UnionContours, ADDR& SelectedContours, struct RefLineStartRow, struct RefLineStartColumn, struct RefLineEndRow, struct RefLineEndColumn, struct Width, struct MaxWidth, struct FilterSize, struct& HistoValues)");
T_union_straight_contours_xld= dll.api("T_union_straight_contours_xld","int(ADDR Contours, ADDR& UnionContours, struct MaxDist, struct MaxDiff, struct Percent, struct Mode, struct Iterations)");
union_straight_contours_xld= dll.api("union_straight_contours_xld","int(ADDR Contours, ADDR& UnionContours, double MaxDist, double MaxDiff, double Percent, string Mode, string Iterations)");
T_union_collinear_contours_ext_xld= dll.api("T_union_collinear_contours_ext_xld","int(ADDR Contours, ADDR& UnionContours, struct MaxDistAbs, struct MaxDistRel, struct MaxShift, struct MaxAngle, struct MaxOverlap, struct MaxRegrError, struct MaxCosts, struct WeightDist, struct WeightShift, struct WeightAngle, struct WeightLink, struct WeightRegr, struct Mode)");
union_collinear_contours_ext_xld= dll.api("union_collinear_contours_ext_xld","int(ADDR Contours, ADDR& UnionContours, double MaxDistAbs, double MaxDistRel, double MaxShift, double MaxAngle, double MaxOverlap, double MaxRegrError, double MaxCosts, double WeightDist, double WeightShift, double WeightAngle, double WeightLink, double WeightRegr, string Mode)");
T_union_collinear_contours_xld= dll.api("T_union_collinear_contours_xld","int(ADDR Contours, ADDR& UnionContours, struct MaxDistAbs, struct MaxDistRel, struct MaxShift, struct MaxAngle, struct Mode)");
union_collinear_contours_xld= dll.api("union_collinear_contours_xld","int(ADDR Contours, ADDR& UnionContours, double MaxDistAbs, double MaxDistRel, double MaxShift, double MaxAngle, string Mode)");
T_union_adjacent_contours_xld= dll.api("T_union_adjacent_contours_xld","int(ADDR Contours, ADDR& UnionContours, struct MaxDistAbs, struct MaxDistRel, struct Mode)");
union_adjacent_contours_xld= dll.api("union_adjacent_contours_xld","int(ADDR Contours, ADDR& UnionContours, double MaxDistAbs, double MaxDistRel, string Mode)");
T_select_contours_xld= dll.api("T_select_contours_xld","int(ADDR Contours, ADDR& SelectedContours, struct Feature, struct Min1, struct Max1, struct Min2, struct Max2)");
select_contours_xld= dll.api("select_contours_xld","int(ADDR Contours, ADDR& SelectedContours, string Feature, double Min1, double Max1, double Min2, double Max2)");
T_get_regress_params_xld= dll.api("T_get_regress_params_xld","int(ADDR Contours, struct& Length, struct& Nx, struct& Ny, struct& Dist, struct& Fpx, struct& Fpy, struct& Lpx, struct& Lpy, struct& Mean, struct& Deviation)");
T_regress_contours_xld= dll.api("T_regress_contours_xld","int(ADDR Contours, ADDR& RegressContours, struct Mode, struct Iterations)");
regress_contours_xld= dll.api("regress_contours_xld","int(ADDR Contours, ADDR& RegressContours, string Mode, int Iterations)");
T_get_contour_angle_xld= dll.api("T_get_contour_angle_xld","int(ADDR Contour, struct AngleMode, struct CalcMode, struct Lookaround, struct& Angles)");
T_smooth_contours_xld= dll.api("T_smooth_contours_xld","int(ADDR Contours, ADDR& SmoothedContours, struct NumRegrPoints)");
smooth_contours_xld= dll.api("smooth_contours_xld","int(ADDR Contours, ADDR& SmoothedContours, int NumRegrPoints)");
T_contour_point_num_xld= dll.api("T_contour_point_num_xld","int(ADDR Contour, struct& Length)");
contour_point_num_xld= dll.api("contour_point_num_xld","int(ADDR Contour, int& Length)");
T_query_contour_global_attribs_xld= dll.api("T_query_contour_global_attribs_xld","int(ADDR Contour, struct& Attribs)");
T_get_contour_global_attrib_xld= dll.api("T_get_contour_global_attrib_xld","int(ADDR Contour, struct Name, struct& Attrib)");
T_query_contour_attribs_xld= dll.api("T_query_contour_attribs_xld","int(ADDR Contour, struct& Attribs)");
T_get_contour_attrib_xld= dll.api("T_get_contour_attrib_xld","int(ADDR Contour, struct Name, struct& Attrib)");
T_get_contour_xld= dll.api("T_get_contour_xld","int(ADDR Contour, struct& Row, struct& Col)");
T_gen_contour_region_xld= dll.api("T_gen_contour_region_xld","int(ADDR Regions, ADDR& Contours, struct Mode)");
gen_contour_region_xld= dll.api("gen_contour_region_xld","int(ADDR Regions, ADDR& Contours, string Mode)");
T_gen_contour_polygon_rounded_xld= dll.api("T_gen_contour_polygon_rounded_xld","int(ADDR& Contour, struct Row, struct Col, struct Radius, struct SamplingInterval)");
T_gen_contour_polygon_xld= dll.api("T_gen_contour_polygon_xld","int(ADDR& Contour, struct Row, struct Col)");
T_gen_contours_skeleton_xld= dll.api("T_gen_contours_skeleton_xld","int(ADDR Skeleton, ADDR& Contours, struct Length, struct Mode)");
gen_contours_skeleton_xld= dll.api("gen_contours_skeleton_xld","int(ADDR Skeleton, ADDR& Contours, int Length, string Mode)");
T_disp_xld= dll.api("T_disp_xld","int(ADDR XLDObject, struct WindowHandle)");
disp_xld= dll.api("disp_xld","int(ADDR XLDObject, int WindowHandle)");
T_wiener_filter_ni= dll.api("T_wiener_filter_ni","int(ADDR Image, ADDR Psf, ADDR NoiseRegion, ADDR& RestoredImage, struct MaskWidth, struct MaskHeight)");
wiener_filter_ni= dll.api("wiener_filter_ni","int(ADDR Image, ADDR Psf, ADDR NoiseRegion, ADDR& RestoredImage, int MaskWidth, int MaskHeight)");
T_wiener_filter= dll.api("T_wiener_filter","int(ADDR Image, ADDR Psf, ADDR FilteredImage, ADDR& RestoredImage)");
wiener_filter= dll.api("wiener_filter","int(ADDR Image, ADDR Psf, ADDR FilteredImage, ADDR& RestoredImage)");
T_gen_psf_motion= dll.api("T_gen_psf_motion","int(ADDR& Psf, struct PSFwidth, struct PSFheight, struct Blurring, struct Angle, struct Type)");
gen_psf_motion= dll.api("gen_psf_motion","int(ADDR& Psf, int PSFwidth, int PSFheight, double Blurring, int Angle, int Type)");
T_simulate_motion= dll.api("T_simulate_motion","int(ADDR Image, ADDR& MovedImage, struct Blurring, struct Angle, struct Type)");
simulate_motion= dll.api("simulate_motion","int(ADDR Image, ADDR& MovedImage, double Blurring, int Angle, int Type)");
T_gen_psf_defocus= dll.api("T_gen_psf_defocus","int(ADDR& Psf, struct PSFwidth, struct PSFheight, struct Blurring)");
gen_psf_defocus= dll.api("gen_psf_defocus","int(ADDR& Psf, int PSFwidth, int PSFheight, double Blurring)");
T_simulate_defocus= dll.api("T_simulate_defocus","int(ADDR Image, ADDR& DefocusedImage, struct Blurring)");
simulate_defocus= dll.api("simulate_defocus","int(ADDR Image, ADDR& DefocusedImage, double Blurring)");
T_deserialize_variation_model= dll.api("T_deserialize_variation_model","int(struct SerializedItemHandle, struct& ModelID)");
deserialize_variation_model= dll.api("deserialize_variation_model","int(int SerializedItemHandle, int& ModelID)");
T_serialize_variation_model= dll.api("T_serialize_variation_model","int(struct ModelID, struct& SerializedItemHandle)");
serialize_variation_model= dll.api("serialize_variation_model","int(int ModelID, int& SerializedItemHandle)");
T_read_variation_model= dll.api("T_read_variation_model","int(struct FileName, struct& ModelID)");
read_variation_model= dll.api("read_variation_model","int(string FileName, int& ModelID)");
T_write_variation_model= dll.api("T_write_variation_model","int(struct ModelID, struct FileName)");
write_variation_model= dll.api("write_variation_model","int(int ModelID, string FileName)");
T_get_thresh_images_variation_model= dll.api("T_get_thresh_images_variation_model","int(ADDR& MinImage, ADDR& MaxImage, struct ModelID)");
get_thresh_images_variation_model= dll.api("get_thresh_images_variation_model","int(ADDR& MinImage, ADDR& MaxImage, int ModelID)");
T_get_variation_model= dll.api("T_get_variation_model","int(ADDR& Image, ADDR& VarImage, struct ModelID)");
get_variation_model= dll.api("get_variation_model","int(ADDR& Image, ADDR& VarImage, int ModelID)");
T_compare_ext_variation_model= dll.api("T_compare_ext_variation_model","int(ADDR Image, ADDR& Region, struct ModelID, struct Mode)");
compare_ext_variation_model= dll.api("compare_ext_variation_model","int(ADDR Image, ADDR& Region, int ModelID, string Mode)");
T_compare_variation_model= dll.api("T_compare_variation_model","int(ADDR Image, ADDR& Region, struct ModelID)");
compare_variation_model= dll.api("compare_variation_model","int(ADDR Image, ADDR& Region, int ModelID)");
T_prepare_direct_variation_model= dll.api("T_prepare_direct_variation_model","int(ADDR RefImage, ADDR VarImage, struct ModelID, struct AbsThreshold, struct VarThreshold)");
prepare_direct_variation_model= dll.api("prepare_direct_variation_model","int(ADDR RefImage, ADDR VarImage, int ModelID, double AbsThreshold, double VarThreshold)");
T_prepare_variation_model= dll.api("T_prepare_variation_model","int(struct ModelID, struct AbsThreshold, struct VarThreshold)");
prepare_variation_model= dll.api("prepare_variation_model","int(int ModelID, double AbsThreshold, double VarThreshold)");
T_train_variation_model= dll.api("T_train_variation_model","int(ADDR Images, struct ModelID)");
train_variation_model= dll.api("train_variation_model","int(ADDR Images, int ModelID)");
T_clear_all_variation_models= dll.api("T_clear_all_variation_models","int(void)");
clear_all_variation_models= dll.api("clear_all_variation_models","int(void)");
T_clear_variation_model= dll.api("T_clear_variation_model","int(struct ModelID)");
clear_variation_model= dll.api("clear_variation_model","int(int ModelID)");
T_clear_train_data_variation_model= dll.api("T_clear_train_data_variation_model","int(struct ModelID)");
clear_train_data_variation_model= dll.api("clear_train_data_variation_model","int(int ModelID)");
T_create_variation_model= dll.api("T_create_variation_model","int(struct Width, struct Height, struct Type, struct Mode, struct& ModelID)");
create_variation_model= dll.api("create_variation_model","int(int Width, int Height, string Type, string Mode, int& ModelID)");
T_tuple_union= dll.api("T_tuple_union","int(struct Set1, struct Set2, struct& Union)");
tuple_union= dll.api("tuple_union","int(int Set1, int Set2, int& Union)");
T_tuple_intersection= dll.api("T_tuple_intersection","int(struct Set1, struct Set2, struct& Intersection)");
tuple_intersection= dll.api("tuple_intersection","int(int Set1, int Set2, int& Intersection)");
T_tuple_difference= dll.api("T_tuple_difference","int(struct Set1, struct Set2, struct& Difference)");
tuple_difference= dll.api("tuple_difference","int(int Set1, int Set2, int& Difference)");
T_tuple_symmdiff= dll.api("T_tuple_symmdiff","int(struct Set1, struct Set2, struct& SymmDiff)");
tuple_symmdiff= dll.api("tuple_symmdiff","int(int Set1, int Set2, int& SymmDiff)");
T_tuple_is_string_elem= dll.api("T_tuple_is_string_elem","int(struct T, struct& IsString)");
tuple_is_string_elem= dll.api("tuple_is_string_elem","int(string T, int& IsString)");
T_tuple_is_real_elem= dll.api("T_tuple_is_real_elem","int(struct T, struct& IsReal)");
tuple_is_real_elem= dll.api("tuple_is_real_elem","int(double T, int& IsReal)");
T_tuple_is_int_elem= dll.api("T_tuple_is_int_elem","int(struct T, struct& IsInt)");
tuple_is_int_elem= dll.api("tuple_is_int_elem","int(int T, int& IsInt)");
T_tuple_type_elem= dll.api("T_tuple_type_elem","int(struct T, struct& Types)");
tuple_type_elem= dll.api("tuple_type_elem","int(double T, int& Types)");
T_tuple_is_mixed= dll.api("T_tuple_is_mixed","int(struct T, struct& IsMixed)");
tuple_is_mixed= dll.api("tuple_is_mixed","int(string T, int& IsMixed)");
T_tuple_is_string= dll.api("T_tuple_is_string","int(struct T, struct& IsString)");
tuple_is_string= dll.api("tuple_is_string","int(string T, int& IsString)");
T_tuple_is_real= dll.api("T_tuple_is_real","int(struct T, struct& IsReal)");
tuple_is_real= dll.api("tuple_is_real","int(double T, int& IsReal)");
T_tuple_is_int= dll.api("T_tuple_is_int","int(struct T, struct& IsInt)");
tuple_is_int= dll.api("tuple_is_int","int(int T, int& IsInt)");
T_tuple_type= dll.api("T_tuple_type","int(struct T, struct& Type)");
tuple_type= dll.api("tuple_type","int(double T, int& Type)");
T_tuple_histo_range= dll.api("T_tuple_histo_range","int(struct Tuple, struct Min, struct Max, struct NumBins, struct& Histo, struct& BinSize)");
T_tuple_regexp_select= dll.api("T_tuple_regexp_select","int(struct Data, struct Expression, struct& Selection)");
tuple_regexp_select= dll.api("tuple_regexp_select","int(string Data, string Expression, string& Selection)");
T_tuple_regexp_test= dll.api("T_tuple_regexp_test","int(struct Data, struct Expression, struct& NumMatches)");
tuple_regexp_test= dll.api("tuple_regexp_test","int(string Data, string Expression, int& NumMatches)");
T_tuple_regexp_replace= dll.api("T_tuple_regexp_replace","int(struct Data, struct Expression, struct Replace, struct& Result)");
tuple_regexp_replace= dll.api("tuple_regexp_replace","int(string Data, string Expression, string Replace, string& Result)");
T_tuple_regexp_match= dll.api("T_tuple_regexp_match","int(struct Data, struct Expression, struct& Matches)");
tuple_regexp_match= dll.api("tuple_regexp_match","int(string Data, string Expression, string& Matches)");
T_tuple_rand= dll.api("T_tuple_rand","int(struct Length, struct& Rand)");
tuple_rand= dll.api("tuple_rand","int(int Length, double& Rand)");
T_tuple_length= dll.api("T_tuple_length","int(struct Tuple, struct& Length)");
tuple_length= dll.api("tuple_length","int(int Tuple, int& Length)");
T_tuple_sgn= dll.api("T_tuple_sgn","int(struct T, struct& Sgn)");
tuple_sgn= dll.api("tuple_sgn","int(double T, int& Sgn)");
T_tuple_max2= dll.api("T_tuple_max2","int(struct T1, struct T2, struct& Max2)");
tuple_max2= dll.api("tuple_max2","int(double T1, double T2, double& Max2)");
T_tuple_min2= dll.api("T_tuple_min2","int(struct T1, struct T2, struct& Min2)");
tuple_min2= dll.api("tuple_min2","int(double T1, double T2, double& Min2)");
T_tuple_max= dll.api("T_tuple_max","int(struct Tuple, struct& Max)");
tuple_max= dll.api("tuple_max","int(int Tuple, double& Max)");
T_tuple_min= dll.api("T_tuple_min","int(struct Tuple, struct& Min)");
tuple_min= dll.api("tuple_min","int(int Tuple, double& Min)");
T_tuple_cumul= dll.api("T_tuple_cumul","int(struct Tuple, struct& Cumul)");
tuple_cumul= dll.api("tuple_cumul","int(int Tuple, double& Cumul)");
T_tuple_select_rank= dll.api("T_tuple_select_rank","int(struct Tuple, struct RankIndex, struct& Selected)");
tuple_select_rank= dll.api("tuple_select_rank","int(int Tuple, int RankIndex, int& Selected)");
T_tuple_median= dll.api("T_tuple_median","int(struct Tuple, struct& Median)");
tuple_median= dll.api("tuple_median","int(int Tuple, int& Median)");
T_tuple_sum= dll.api("T_tuple_sum","int(struct Tuple, struct& Sum)");
tuple_sum= dll.api("tuple_sum","int(int Tuple, double& Sum)");
T_tuple_mean= dll.api("T_tuple_mean","int(struct Tuple, struct& Mean)");
tuple_mean= dll.api("tuple_mean","int(int Tuple, double& Mean)");
T_tuple_deviation= dll.api("T_tuple_deviation","int(struct Tuple, struct& Deviation)");
tuple_deviation= dll.api("tuple_deviation","int(int Tuple, double& Deviation)");
T_tuple_uniq= dll.api("T_tuple_uniq","int(struct Tuple, struct& Uniq)");
tuple_uniq= dll.api("tuple_uniq","int(int Tuple, int& Uniq)");
T_tuple_find_last= dll.api("T_tuple_find_last","int(struct Tuple, struct ToFind, struct& Index)");
tuple_find_last= dll.api("tuple_find_last","int(int Tuple, int ToFind, int& Index)");
T_tuple_find_first= dll.api("T_tuple_find_first","int(struct Tuple, struct ToFind, struct& Index)");
tuple_find_first= dll.api("tuple_find_first","int(int Tuple, int ToFind, int& Index)");
T_tuple_find= dll.api("T_tuple_find","int(struct Tuple, struct ToFind, struct& Indices)");
tuple_find= dll.api("tuple_find","int(int Tuple, int ToFind, int& Indices)");
T_tuple_sort_index= dll.api("T_tuple_sort_index","int(struct Tuple, struct& Indices)");
tuple_sort_index= dll.api("tuple_sort_index","int(int Tuple, int& Indices)");
T_tuple_sort= dll.api("T_tuple_sort","int(struct Tuple, struct& Sorted)");
tuple_sort= dll.api("tuple_sort","int(int Tuple, int& Sorted)");
T_tuple_inverse= dll.api("T_tuple_inverse","int(struct Tuple, struct& Inverted)");
tuple_inverse= dll.api("tuple_inverse","int(int Tuple, int& Inverted)");
T_tuple_concat= dll.api("T_tuple_concat","int(struct T1, struct T2, struct& Concat)");
tuple_concat= dll.api("tuple_concat","int(int T1, int T2, int& Concat)");
T_tuple_select_range= dll.api("T_tuple_select_range","int(struct Tuple, struct Leftindex, struct Rightindex, struct& Selected)");
tuple_select_range= dll.api("tuple_select_range","int(int Tuple, int Leftindex, int Rightindex, int& Selected)");
T_tuple_last_n= dll.api("T_tuple_last_n","int(struct Tuple, struct Index, struct& Selected)");
tuple_last_n= dll.api("tuple_last_n","int(int Tuple, int Index, int& Selected)");
T_tuple_first_n= dll.api("T_tuple_first_n","int(struct Tuple, struct Index, struct& Selected)");
tuple_first_n= dll.api("tuple_first_n","int(int Tuple, int Index, int& Selected)");
T_tuple_insert= dll.api("T_tuple_insert","int(struct Tuple, struct Index, struct InsertTuple, struct& Extended)");
T_tuple_replace= dll.api("T_tuple_replace","int(struct Tuple, struct Index, struct ReplaceTuple, struct& Replaced)");
T_tuple_remove= dll.api("T_tuple_remove","int(struct Tuple, struct Index, struct& Reduced)");
tuple_remove= dll.api("tuple_remove","int(int Tuple, int Index, int& Reduced)");
T_tuple_select_mask= dll.api("T_tuple_select_mask","int(struct Tuple, struct Mask, struct& Selected)");
tuple_select_mask= dll.api("tuple_select_mask","int(int Tuple, int Mask, int& Selected)");
T_tuple_select= dll.api("T_tuple_select","int(struct Tuple, struct Index, struct& Selected)");
tuple_select= dll.api("tuple_select","int(int Tuple, int Index, int& Selected)");
T_tuple_str_bit_select= dll.api("T_tuple_str_bit_select","int(struct Tuple, struct Index, struct& Selected)");
tuple_str_bit_select= dll.api("tuple_str_bit_select","int(string Tuple, int Index, string& Selected)");
T_tuple_gen_sequence= dll.api("T_tuple_gen_sequence","int(struct Start, struct End, struct Step, struct& Sequence)");
tuple_gen_sequence= dll.api("tuple_gen_sequence","int(int Start, int End, int Step, int& Sequence)");
T_tuple_gen_const= dll.api("T_tuple_gen_const","int(struct Length, struct Const, struct& Newtuple)");
tuple_gen_const= dll.api("tuple_gen_const","int(int Length, int Const, int& Newtuple)");
T_tuple_environment= dll.api("T_tuple_environment","int(struct Names, struct& Values)");
tuple_environment= dll.api("tuple_environment","int(string Names, string& Values)");
T_tuple_split= dll.api("T_tuple_split","int(struct String, struct Separator, struct& Substrings)");
tuple_split= dll.api("tuple_split","int(string String, string Separator, string& Substrings)");
T_tuple_substr= dll.api("T_tuple_substr","int(struct String, struct Position1, struct Position2, struct& Substring)");
tuple_substr= dll.api("tuple_substr","int(string String, int Position1, int Position2, string& Substring)");
T_tuple_str_last_n= dll.api("T_tuple_str_last_n","int(struct String, struct Position, struct& Substring)");
tuple_str_last_n= dll.api("tuple_str_last_n","int(string String, int Position, string& Substring)");
T_tuple_str_first_n= dll.api("T_tuple_str_first_n","int(struct String, struct Position, struct& Substring)");
tuple_str_first_n= dll.api("tuple_str_first_n","int(string String, int Position, string& Substring)");
T_tuple_strrchr= dll.api("T_tuple_strrchr","int(struct String, struct ToFind, struct& Position)");
tuple_strrchr= dll.api("tuple_strrchr","int(string String, string ToFind, int& Position)");
T_tuple_strchr= dll.api("T_tuple_strchr","int(struct String, struct ToFind, struct& Position)");
tuple_strchr= dll.api("tuple_strchr","int(string String, string ToFind, int& Position)");
T_tuple_strrstr= dll.api("T_tuple_strrstr","int(struct String, struct ToFind, struct& Position)");
tuple_strrstr= dll.api("tuple_strrstr","int(string String, string ToFind, int& Position)");
T_tuple_strstr= dll.api("T_tuple_strstr","int(struct String, struct ToFind, struct& Position)");
tuple_strstr= dll.api("tuple_strstr","int(string String, string ToFind, int& Position)");
T_tuple_strlen= dll.api("T_tuple_strlen","int(struct T1, struct& Length)");
tuple_strlen= dll.api("tuple_strlen","int(string T1, int& Length)");
T_tuple_less_equal_elem= dll.api("T_tuple_less_equal_elem","int(struct T1, struct T2, struct& Lesseq)");
tuple_less_equal_elem= dll.api("tuple_less_equal_elem","int(int T1, int T2, int& Lesseq)");
T_tuple_less_elem= dll.api("T_tuple_less_elem","int(struct T1, struct T2, struct& Less)");
tuple_less_elem= dll.api("tuple_less_elem","int(int T1, int T2, int& Less)");
T_tuple_greater_equal_elem= dll.api("T_tuple_greater_equal_elem","int(struct T1, struct T2, struct& Greatereq)");
tuple_greater_equal_elem= dll.api("tuple_greater_equal_elem","int(int T1, int T2, int& Greatereq)");
T_tuple_greater_elem= dll.api("T_tuple_greater_elem","int(struct T1, struct T2, struct& Greater)");
tuple_greater_elem= dll.api("tuple_greater_elem","int(int T1, int T2, int& Greater)");
T_tuple_not_equal_elem= dll.api("T_tuple_not_equal_elem","int(struct T1, struct T2, struct& Nequal)");
tuple_not_equal_elem= dll.api("tuple_not_equal_elem","int(int T1, int T2, int& Nequal)");
T_tuple_equal_elem= dll.api("T_tuple_equal_elem","int(struct T1, struct T2, struct& Equal)");
tuple_equal_elem= dll.api("tuple_equal_elem","int(int T1, int T2, int& Equal)");
T_tuple_less_equal= dll.api("T_tuple_less_equal","int(struct T1, struct T2, struct& Lesseq)");
tuple_less_equal= dll.api("tuple_less_equal","int(int T1, int T2, int& Lesseq)");
T_tuple_less= dll.api("T_tuple_less","int(struct T1, struct T2, struct& Less)");
tuple_less= dll.api("tuple_less","int(int T1, int T2, int& Less)");
T_tuple_greater_equal= dll.api("T_tuple_greater_equal","int(struct T1, struct T2, struct& Greatereq)");
tuple_greater_equal= dll.api("tuple_greater_equal","int(int T1, int T2, int& Greatereq)");
T_tuple_greater= dll.api("T_tuple_greater","int(struct T1, struct T2, struct& Greater)");
tuple_greater= dll.api("tuple_greater","int(int T1, int T2, int& Greater)");
T_tuple_not_equal= dll.api("T_tuple_not_equal","int(struct T1, struct T2, struct& Nequal)");
tuple_not_equal= dll.api("tuple_not_equal","int(int T1, int T2, int& Nequal)");
T_tuple_equal= dll.api("T_tuple_equal","int(struct T1, struct T2, struct& Equal)");
tuple_equal= dll.api("tuple_equal","int(int T1, int T2, int& Equal)");
T_tuple_not= dll.api("T_tuple_not","int(struct T, struct& Not)");
tuple_not= dll.api("tuple_not","int(int T, int& Not)");
T_tuple_xor= dll.api("T_tuple_xor","int(struct T1, struct T2, struct& Xor)");
tuple_xor= dll.api("tuple_xor","int(int T1, int T2, int& Xor)");
T_tuple_or= dll.api("T_tuple_or","int(struct T1, struct T2, struct& Or)");
tuple_or= dll.api("tuple_or","int(int T1, int T2, int& Or)");
T_tuple_and= dll.api("T_tuple_and","int(struct T1, struct T2, struct& And)");
tuple_and= dll.api("tuple_and","int(int T1, int T2, int& And)");
T_tuple_bnot= dll.api("T_tuple_bnot","int(struct T, struct& BNot)");
tuple_bnot= dll.api("tuple_bnot","int(int T, int& BNot)");
T_tuple_bxor= dll.api("T_tuple_bxor","int(struct T1, struct T2, struct& BXor)");
tuple_bxor= dll.api("tuple_bxor","int(int T1, int T2, int& BXor)");
T_tuple_bor= dll.api("T_tuple_bor","int(struct T1, struct T2, struct& BOr)");
tuple_bor= dll.api("tuple_bor","int(int T1, int T2, int& BOr)");
T_tuple_band= dll.api("T_tuple_band","int(struct T1, struct T2, struct& BAnd)");
tuple_band= dll.api("tuple_band","int(int T1, int T2, int& BAnd)");
T_tuple_rsh= dll.api("T_tuple_rsh","int(struct T, struct Shift, struct& Rsh)");
tuple_rsh= dll.api("tuple_rsh","int(int T, int Shift, int& Rsh)");
T_tuple_lsh= dll.api("T_tuple_lsh","int(struct T, struct Shift, struct& Lsh)");
tuple_lsh= dll.api("tuple_lsh","int(int T, int Shift, int& Lsh)");
T_tuple_chrt= dll.api("T_tuple_chrt","int(struct T, struct& Chrt)");
tuple_chrt= dll.api("tuple_chrt","int(int T, string& Chrt)");
T_tuple_ords= dll.api("T_tuple_ords","int(struct T, struct& Ords)");
tuple_ords= dll.api("tuple_ords","int(string T, int& Ords)");
T_tuple_chr= dll.api("T_tuple_chr","int(struct T, struct& Chr)");
tuple_chr= dll.api("tuple_chr","int(int T, string& Chr)");
T_tuple_ord= dll.api("T_tuple_ord","int(struct T, struct& Ord)");
tuple_ord= dll.api("tuple_ord","int(string T, int& Ord)");
T_tuple_string= dll.api("T_tuple_string","int(struct T, struct Format, struct& String)");
tuple_string= dll.api("tuple_string","int(double T, string Format, string& String)");
T_tuple_is_number= dll.api("T_tuple_is_number","int(struct T, struct& IsNumber)");
tuple_is_number= dll.api("tuple_is_number","int(double T, int& IsNumber)");
T_tuple_number= dll.api("T_tuple_number","int(struct T, struct& Number)");
tuple_number= dll.api("tuple_number","int(string T, double& Number)");
T_tuple_round= dll.api("T_tuple_round","int(struct T, struct& Round)");
tuple_round= dll.api("tuple_round","int(double T, int& Round)");
T_tuple_int= dll.api("T_tuple_int","int(struct T, struct& Int)");
tuple_int= dll.api("tuple_int","int(double T, int& Int)");
T_tuple_real= dll.api("T_tuple_real","int(struct T, struct& Real)");
tuple_real= dll.api("tuple_real","int(double T, double& Real)");
T_tuple_ldexp= dll.api("T_tuple_ldexp","int(struct T1, struct T2, struct& Ldexp)");
tuple_ldexp= dll.api("tuple_ldexp","int(double T1, double T2, double& Ldexp)");
T_tuple_fmod= dll.api("T_tuple_fmod","int(struct T1, struct T2, struct& Fmod)");
tuple_fmod= dll.api("tuple_fmod","int(double T1, double T2, double& Fmod)");
T_tuple_mod= dll.api("T_tuple_mod","int(struct T1, struct T2, struct& Mod)");
tuple_mod= dll.api("tuple_mod","int(int T1, int T2, int& Mod)");
T_tuple_ceil= dll.api("T_tuple_ceil","int(struct T, struct& Ceil)");
tuple_ceil= dll.api("tuple_ceil","int(double T, double& Ceil)");
T_tuple_floor= dll.api("T_tuple_floor","int(struct T, struct& Floor)");
tuple_floor= dll.api("tuple_floor","int(double T, double& Floor)");
T_tuple_pow= dll.api("T_tuple_pow","int(struct T1, struct T2, struct& Pow)");
tuple_pow= dll.api("tuple_pow","int(double T1, double T2, double& Pow)");
T_tuple_log10= dll.api("T_tuple_log10","int(struct T, struct& Log)");
tuple_log10= dll.api("tuple_log10","int(double T, double& Log)");
T_tuple_log= dll.api("T_tuple_log","int(struct T, struct& Log)");
tuple_log= dll.api("tuple_log","int(double T, double& Log)");
T_tuple_exp= dll.api("T_tuple_exp","int(struct T, struct& Exp)");
tuple_exp= dll.api("tuple_exp","int(double T, double& Exp)");
T_tuple_tanh= dll.api("T_tuple_tanh","int(struct T, struct& Tanh)");
tuple_tanh= dll.api("tuple_tanh","int(double T, double& Tanh)");
T_tuple_cosh= dll.api("T_tuple_cosh","int(struct T, struct& Cosh)");
tuple_cosh= dll.api("tuple_cosh","int(double T, double& Cosh)");
T_tuple_sinh= dll.api("T_tuple_sinh","int(struct T, struct& Sinh)");
tuple_sinh= dll.api("tuple_sinh","int(double T, double& Sinh)");
T_tuple_rad= dll.api("T_tuple_rad","int(struct Deg, struct& Rad)");
tuple_rad= dll.api("tuple_rad","int(double Deg, double& Rad)");
T_tuple_deg= dll.api("T_tuple_deg","int(struct Rad, struct& Deg)");
tuple_deg= dll.api("tuple_deg","int(double Rad, double& Deg)");
T_tuple_atan2= dll.api("T_tuple_atan2","int(struct Y, struct X, struct& ATan)");
tuple_atan2= dll.api("tuple_atan2","int(double Y, double X, double& ATan)");
T_tuple_atan= dll.api("T_tuple_atan","int(struct T, struct& ATan)");
tuple_atan= dll.api("tuple_atan","int(double T, double& ATan)");
T_tuple_acos= dll.api("T_tuple_acos","int(struct T, struct& ACos)");
tuple_acos= dll.api("tuple_acos","int(double T, double& ACos)");
T_tuple_asin= dll.api("T_tuple_asin","int(struct T, struct& ASin)");
tuple_asin= dll.api("tuple_asin","int(double T, double& ASin)");
T_tuple_tan= dll.api("T_tuple_tan","int(struct T, struct& Tan)");
tuple_tan= dll.api("tuple_tan","int(double T, double& Tan)");
T_tuple_cos= dll.api("T_tuple_cos","int(struct T, struct& Cos)");
tuple_cos= dll.api("tuple_cos","int(double T, double& Cos)");
T_tuple_sin= dll.api("T_tuple_sin","int(struct T, struct& Sin)");
tuple_sin= dll.api("tuple_sin","int(double T, double& Sin)");
T_tuple_fabs= dll.api("T_tuple_fabs","int(struct T, struct& Abs)");
tuple_fabs= dll.api("tuple_fabs","int(double T, double& Abs)");
T_tuple_sqrt= dll.api("T_tuple_sqrt","int(struct T, struct& Sqrt)");
tuple_sqrt= dll.api("tuple_sqrt","int(double T, double& Sqrt)");
T_tuple_abs= dll.api("T_tuple_abs","int(struct T, struct& Abs)");
tuple_abs= dll.api("tuple_abs","int(double T, double& Abs)");
T_tuple_neg= dll.api("T_tuple_neg","int(struct T, struct& Neg)");
tuple_neg= dll.api("tuple_neg","int(double T, double& Neg)");
T_tuple_div= dll.api("T_tuple_div","int(struct Q1, struct Q2, struct& Quot)");
tuple_div= dll.api("tuple_div","int(double Q1, double Q2, double& Quot)");
T_tuple_mult= dll.api("T_tuple_mult","int(struct P1, struct P2, struct& Prod)");
tuple_mult= dll.api("tuple_mult","int(double P1, double P2, double& Prod)");
T_tuple_sub= dll.api("T_tuple_sub","int(struct D1, struct D2, struct& Diff)");
tuple_sub= dll.api("tuple_sub","int(double D1, double D2, double& Diff)");
T_tuple_add= dll.api("T_tuple_add","int(struct S1, struct S2, struct& Sum)");
tuple_add= dll.api("tuple_add","int(double S1, double S2, double& Sum)");
T_deserialize_tuple= dll.api("T_deserialize_tuple","int(struct SerializedItemHandle, struct& Tuple)");
deserialize_tuple= dll.api("deserialize_tuple","int(int SerializedItemHandle, double& Tuple)");
T_serialize_tuple= dll.api("T_serialize_tuple","int(struct Tuple, struct& SerializedItemHandle)");
serialize_tuple= dll.api("serialize_tuple","int(double Tuple, int& SerializedItemHandle)");
T_write_tuple= dll.api("T_write_tuple","int(struct Tuple, struct FileName)");
write_tuple= dll.api("write_tuple","int(double Tuple, string FileName)");
T_read_tuple= dll.api("T_read_tuple","int(struct FileName, struct& Tuple)");
read_tuple= dll.api("read_tuple","int(string FileName, double& Tuple)");
T_pose_average= dll.api("T_pose_average","int(struct Poses, struct Weights, struct Mode, struct SigmaT, struct SigmaR, struct& AveragePose, struct& Quality)");
T_quat_rotate_point_3d= dll.api("T_quat_rotate_point_3d","int(struct Quaternion, struct Px, struct Py, struct Pz, struct& Qx, struct& Qy, struct& Qz)");
T_quat_conjugate= dll.api("T_quat_conjugate","int(struct Quaternion, struct& ConjugatedQuaternion)");
T_quat_normalize= dll.api("T_quat_normalize","int(struct Quaternion, struct& NormalizedQuaternion)");
T_axis_angle_to_quat= dll.api("T_axis_angle_to_quat","int(struct AxisX, struct AxisY, struct AxisZ, struct Angle, struct& Quaternion)");
T_quat_to_pose= dll.api("T_quat_to_pose","int(struct Quaternion, struct& Pose)");
T_pose_invert= dll.api("T_pose_invert","int(struct Pose, struct& PoseInvert)");
T_pose_compose= dll.api("T_pose_compose","int(struct PoseLeft, struct PoseRight, struct& PoseCompose)");
T_quat_to_hom_mat3d= dll.api("T_quat_to_hom_mat3d","int(struct Quaternion, struct& RotationMatrix)");
T_pose_to_quat= dll.api("T_pose_to_quat","int(struct Pose, struct& Quaternion)");
T_quat_interpolate= dll.api("T_quat_interpolate","int(struct QuaternionStart, struct QuaternionEnd, struct InterpPos, struct& QuaternionInterpolated)");
T_quat_compose= dll.api("T_quat_compose","int(struct QuaternionLeft, struct QuaternionRight, struct& QuaternionComposed)");
T_deserialize_hom_mat3d= dll.api("T_deserialize_hom_mat3d","int(struct SerializedItemHandle, struct& HomMat3D)");
T_serialize_hom_mat3d= dll.api("T_serialize_hom_mat3d","int(struct HomMat3D, struct& SerializedItemHandle)");
T_deserialize_hom_mat2d= dll.api("T_deserialize_hom_mat2d","int(struct SerializedItemHandle, struct& HomMat2D)");
T_serialize_hom_mat2d= dll.api("T_serialize_hom_mat2d","int(struct HomMat2D, struct& SerializedItemHandle)");
T_deserialize_quat= dll.api("T_deserialize_quat","int(struct SerializedItemHandle, struct& Quaternion)");
T_serialize_quat= dll.api("T_serialize_quat","int(struct Quaternion, struct& SerializedItemHandle)");
T_projective_trans_hom_point_3d= dll.api("T_projective_trans_hom_point_3d","int(struct HomMat3D, struct Px, struct Py, struct Pz, struct Pw, struct& Qx, struct& Qy, struct& Qz, struct& Qw)");
T_projective_trans_point_3d= dll.api("T_projective_trans_point_3d","int(struct HomMat3D, struct Px, struct Py, struct Pz, struct& Qx, struct& Qy, struct& Qz)");
T_affine_trans_point_3d= dll.api("T_affine_trans_point_3d","int(struct HomMat3D, struct Px, struct Py, struct Pz, struct& Qx, struct& Qy, struct& Qz)");
T_vector_to_hom_mat3d= dll.api("T_vector_to_hom_mat3d","int(struct TransformationType, struct Px, struct Py, struct Pz, struct Qx, struct Qy, struct Qz, struct& HomMat3D)");
T_hom_mat3d_determinant= dll.api("T_hom_mat3d_determinant","int(struct HomMat3D, struct& Determinant)");
T_hom_mat3d_transpose= dll.api("T_hom_mat3d_transpose","int(struct HomMat3D, struct& HomMat3DTranspose)");
T_hom_mat3d_invert= dll.api("T_hom_mat3d_invert","int(struct HomMat3D, struct& HomMat3DInvert)");
T_hom_mat3d_compose= dll.api("T_hom_mat3d_compose","int(struct HomMat3DLeft, struct HomMat3DRight, struct& HomMat3DCompose)");
T_hom_mat3d_rotate_local= dll.api("T_hom_mat3d_rotate_local","int(struct HomMat3D, struct Phi, struct Axis, struct& HomMat3DRotate)");
T_hom_mat3d_rotate= dll.api("T_hom_mat3d_rotate","int(struct HomMat3D, struct Phi, struct Axis, struct Px, struct Py, struct Pz, struct& HomMat3DRotate)");
T_hom_mat3d_scale_local= dll.api("T_hom_mat3d_scale_local","int(struct HomMat3D, struct Sx, struct Sy, struct Sz, struct& HomMat3DScale)");
T_hom_mat3d_scale= dll.api("T_hom_mat3d_scale","int(struct HomMat3D, struct Sx, struct Sy, struct Sz, struct Px, struct Py, struct Pz, struct& HomMat3DScale)");
T_hom_mat3d_translate_local= dll.api("T_hom_mat3d_translate_local","int(struct HomMat3D, struct Tx, struct Ty, struct Tz, struct& HomMat3DTranslate)");
T_hom_mat3d_translate= dll.api("T_hom_mat3d_translate","int(struct HomMat3D, struct Tx, struct Ty, struct Tz, struct& HomMat3DTranslate)");
T_hom_mat3d_identity= dll.api("T_hom_mat3d_identity","int(struct& HomMat3DIdentity)");
T_hom_mat3d_project= dll.api("T_hom_mat3d_project","int(struct HomMat3D, struct PrincipalPointRow, struct PrincipalPointCol, struct Focus, struct& HomMat2D)");
T_bundle_adjust_mosaic= dll.api("T_bundle_adjust_mosaic","int(struct NumImages, struct ReferenceImage, struct MappingSource, struct MappingDest, struct HomMatrices2D, struct Rows1, struct Cols1, struct Rows2, struct Cols2, struct NumCorrespondences, struct Transformation, struct& MosaicMatrices2D, struct& Rows, struct& Cols, struct& Error)");
T_proj_match_points_distortion_ransac_guided= dll.api("T_proj_match_points_distortion_ransac_guided","int(ADDR Image1, ADDR Image2, struct Rows1, struct Cols1, struct Rows2, struct Cols2, struct GrayMatchMethod, struct MaskSize, struct HomMat2DGuide, struct KappaGuide, struct DistanceTolerance, struct MatchThreshold, struct EstimationMethod, struct DistanceThreshold, struct RandSeed, struct& HomMat2D, struct& Kappa, struct& Error, struct& Points1, struct& Points2)");
T_proj_match_points_distortion_ransac= dll.api("T_proj_match_points_distortion_ransac","int(ADDR Image1, ADDR Image2, struct Rows1, struct Cols1, struct Rows2, struct Cols2, struct GrayMatchMethod, struct MaskSize, struct RowMove, struct ColMove, struct RowTolerance, struct ColTolerance, struct Rotation, struct MatchThreshold, struct EstimationMethod, struct DistanceThreshold, struct RandSeed, struct& HomMat2D, struct& Kappa, struct& Error, struct& Points1, struct& Points2)");
T_proj_match_points_ransac_guided= dll.api("T_proj_match_points_ransac_guided","int(ADDR Image1, ADDR Image2, struct Rows1, struct Cols1, struct Rows2, struct Cols2, struct GrayMatchMethod, struct MaskSize, struct HomMat2DGuide, struct DistanceTolerance, struct MatchThreshold, struct EstimationMethod, struct DistanceThreshold, struct RandSeed, struct& HomMat2D, struct& Points1, struct& Points2)");
T_proj_match_points_ransac= dll.api("T_proj_match_points_ransac","int(ADDR Image1, ADDR Image2, struct Rows1, struct Cols1, struct Rows2, struct Cols2, struct GrayMatchMethod, struct MaskSize, struct RowMove, struct ColMove, struct RowTolerance, struct ColTolerance, struct Rotation, struct MatchThreshold, struct EstimationMethod, struct DistanceThreshold, struct RandSeed, struct& HomMat2D, struct& Points1, struct& Points2)");
T_vector_to_proj_hom_mat2d_distortion= dll.api("T_vector_to_proj_hom_mat2d_distortion","int(struct Points1Row, struct Points1Col, struct Points2Row, struct Points2Col, struct CovRR1, struct CovRC1, struct CovCC1, struct CovRR2, struct CovRC2, struct CovCC2, struct ImageWidth, struct ImageHeight, struct Method, struct& HomMat2D, struct& Kappa, struct& Error)");
T_hom_vector_to_proj_hom_mat2d= dll.api("T_hom_vector_to_proj_hom_mat2d","int(struct Px, struct Py, struct Pw, struct Qx, struct Qy, struct Qw, struct Method, struct& HomMat2D)");
T_vector_to_proj_hom_mat2d= dll.api("T_vector_to_proj_hom_mat2d","int(struct Px, struct Py, struct Qx, struct Qy, struct Method, struct CovXX1, struct CovYY1, struct CovXY1, struct CovXX2, struct CovYY2, struct CovXY2, struct& HomMat2D, struct& Covariance)");
T_hom_mat2d_to_affine_par= dll.api("T_hom_mat2d_to_affine_par","int(struct HomMat2D, struct& Sx, struct& Sy, struct& Phi, struct& Theta, struct& Tx, struct& Ty)");
T_vector_angle_to_rigid= dll.api("T_vector_angle_to_rigid","int(struct Row1, struct Column1, struct Angle1, struct Row2, struct Column2, struct Angle2, struct& HomMat2D)");
T_point_line_to_hom_mat2d= dll.api("T_point_line_to_hom_mat2d","int(struct TransformationType, struct Px, struct Py, struct L1x, struct L1y, struct L2x, struct L2y, struct& HomMat2D)");
T_vector_to_rigid= dll.api("T_vector_to_rigid","int(struct Px, struct Py, struct Qx, struct Qy, struct& HomMat2D)");
T_vector_to_similarity= dll.api("T_vector_to_similarity","int(struct Px, struct Py, struct Qx, struct Qy, struct& HomMat2D)");
T_vector_to_aniso= dll.api("T_vector_to_aniso","int(struct Px, struct Py, struct Qx, struct Qy, struct& HomMat2D)");
T_vector_to_hom_mat2d= dll.api("T_vector_to_hom_mat2d","int(struct Px, struct Py, struct Qx, struct Qy, struct& HomMat2D)");
T_projective_trans_pixel= dll.api("T_projective_trans_pixel","int(struct HomMat2D, struct Row, struct Col, struct& RowTrans, struct& ColTrans)");
T_projective_trans_point_2d= dll.api("T_projective_trans_point_2d","int(struct HomMat2D, struct Px, struct Py, struct Pw, struct& Qx, struct& Qy, struct& Qw)");
T_affine_trans_pixel= dll.api("T_affine_trans_pixel","int(struct HomMat2D, struct Row, struct Col, struct& RowTrans, struct& ColTrans)");
T_affine_trans_point_2d= dll.api("T_affine_trans_point_2d","int(struct HomMat2D, struct Px, struct Py, struct& Qx, struct& Qy)");
T_hom_mat2d_determinant= dll.api("T_hom_mat2d_determinant","int(struct HomMat2D, struct& Determinant)");
T_hom_mat2d_transpose= dll.api("T_hom_mat2d_transpose","int(struct HomMat2D, struct& HomMat2DTranspose)");
T_hom_mat2d_invert= dll.api("T_hom_mat2d_invert","int(struct HomMat2D, struct& HomMat2DInvert)");
T_hom_mat2d_compose= dll.api("T_hom_mat2d_compose","int(struct HomMat2DLeft, struct HomMat2DRight, struct& HomMat2DCompose)");
T_hom_mat2d_reflect_local= dll.api("T_hom_mat2d_reflect_local","int(struct HomMat2D, struct Px, struct Py, struct& HomMat2DReflect)");
T_hom_mat2d_reflect= dll.api("T_hom_mat2d_reflect","int(struct HomMat2D, struct Px, struct Py, struct Qx, struct Qy, struct& HomMat2DReflect)");
T_hom_mat2d_slant_local= dll.api("T_hom_mat2d_slant_local","int(struct HomMat2D, struct Theta, struct Axis, struct& HomMat2DSlant)");
T_hom_mat2d_slant= dll.api("T_hom_mat2d_slant","int(struct HomMat2D, struct Theta, struct Axis, struct Px, struct Py, struct& HomMat2DSlant)");
T_hom_mat2d_rotate_local= dll.api("T_hom_mat2d_rotate_local","int(struct HomMat2D, struct Phi, struct& HomMat2DRotate)");
T_hom_mat2d_rotate= dll.api("T_hom_mat2d_rotate","int(struct HomMat2D, struct Phi, struct Px, struct Py, struct& HomMat2DRotate)");
T_hom_mat2d_scale_local= dll.api("T_hom_mat2d_scale_local","int(struct HomMat2D, struct Sx, struct Sy, struct& HomMat2DScale)");
T_hom_mat2d_scale= dll.api("T_hom_mat2d_scale","int(struct HomMat2D, struct Sx, struct Sy, struct Px, struct Py, struct& HomMat2DScale)");
T_hom_mat2d_translate_local= dll.api("T_hom_mat2d_translate_local","int(struct HomMat2D, struct Tx, struct Ty, struct& HomMat2DTranslate)");
T_hom_mat2d_translate= dll.api("T_hom_mat2d_translate","int(struct HomMat2D, struct Tx, struct Ty, struct& HomMat2DTranslate)");
T_hom_mat2d_identity= dll.api("T_hom_mat2d_identity","int(struct& HomMat2DIdentity)");
T_clear_all_scattered_data_interpolators= dll.api("T_clear_all_scattered_data_interpolators","int(void)");
clear_all_scattered_data_interpolators= dll.api("clear_all_scattered_data_interpolators","int(void)");
T_clear_scattered_data_interpolator= dll.api("T_clear_scattered_data_interpolator","int(struct ScatteredDataInterpolatorHandle)");
clear_scattered_data_interpolator= dll.api("clear_scattered_data_interpolator","int(int ScatteredDataInterpolatorHandle)");
T_interpolate_scattered_data= dll.api("T_interpolate_scattered_data","int(struct ScatteredDataInterpolatorHandle, struct Row, struct Column, struct& ValueInterpolated)");
interpolate_scattered_data= dll.api("interpolate_scattered_data","int(int ScatteredDataInterpolatorHandle, double Row, double Column, double& ValueInterpolated)");
T_create_scattered_data_interpolator= dll.api("T_create_scattered_data_interpolator","int(struct Method, struct Rows, struct Columns, struct Values, struct GenParamName, struct GenParamValue, struct& ScatteredDataInterpolatorHandle)");
T_interpolate_scattered_data_points_to_image= dll.api("T_interpolate_scattered_data_points_to_image","int(ADDR& ImageInterpolated, struct Method, struct Rows, struct Columns, struct Values, struct Width, struct Height, struct GenParamName, struct GenParamValue)");
T_interpolate_scattered_data_image= dll.api("T_interpolate_scattered_data_image","int(ADDR Image, ADDR RegionInterpolate, ADDR& ImageInterpolated, struct Method, struct GenParamName, struct GenParamValue)");
T_get_system_time= dll.api("T_get_system_time","int(struct& MSecond, struct& Second, struct& Minute, struct& Hour, struct& Day, struct& YDay, struct& Month, struct& Year)");
get_system_time= dll.api("get_system_time","int(int& MSecond, int& Second, int& Minute, int& Hour, int& Day, int& YDay, int& Month, int& Year)");
T_get_compute_device_param= dll.api("T_get_compute_device_param","int(struct DeviceHandle, struct GenParamName, struct& GenParamValue)");
get_compute_device_param= dll.api("get_compute_device_param","int(int DeviceHandle, string GenParamName, string& GenParamValue)");
T_set_compute_device_param= dll.api("T_set_compute_device_param","int(struct DeviceHandle, struct GenParamName, struct GenParamValue)");
set_compute_device_param= dll.api("set_compute_device_param","int(int DeviceHandle, string GenParamName, string GenParamValue)");
T_release_all_compute_devices= dll.api("T_release_all_compute_devices","int(void)");
release_all_compute_devices= dll.api("release_all_compute_devices","int(void)");
T_release_compute_device= dll.api("T_release_compute_device","int(struct DeviceHandle)");
release_compute_device= dll.api("release_compute_device","int(int DeviceHandle)");
T_deactivate_all_compute_devices= dll.api("T_deactivate_all_compute_devices","int(void)");
deactivate_all_compute_devices= dll.api("deactivate_all_compute_devices","int(void)");
T_deactivate_compute_device= dll.api("T_deactivate_compute_device","int(struct DeviceHandle)");
deactivate_compute_device= dll.api("deactivate_compute_device","int(int DeviceHandle)");
T_activate_compute_device= dll.api("T_activate_compute_device","int(struct DeviceHandle)");
activate_compute_device= dll.api("activate_compute_device","int(int DeviceHandle)");
T_init_compute_device= dll.api("T_init_compute_device","int(struct DeviceHandle, struct Operators)");
T_open_compute_device= dll.api("T_open_compute_device","int(struct DeviceIdentifier, struct& DeviceHandle)");
open_compute_device= dll.api("open_compute_device","int(int DeviceIdentifier, int& DeviceHandle)");
T_get_compute_device_info= dll.api("T_get_compute_device_info","int(struct DeviceIdentifier, struct InfoName, struct& Info)");
get_compute_device_info= dll.api("get_compute_device_info","int(int DeviceIdentifier, string InfoName, string& Info)");
T_query_available_compute_devices= dll.api("T_query_available_compute_devices","int(struct& DeviceIdentifier)");
T_clear_serial= dll.api("T_clear_serial","int(struct SerialHandle, struct Channel)");
clear_serial= dll.api("clear_serial","int(int SerialHandle, string Channel)");
T_write_serial= dll.api("T_write_serial","int(struct SerialHandle, struct Data)");
write_serial= dll.api("write_serial","int(int SerialHandle, int Data)");
T_read_serial= dll.api("T_read_serial","int(struct SerialHandle, struct NumCharacters, struct& Data)");
read_serial= dll.api("read_serial","int(int SerialHandle, int NumCharacters, int& Data)");
T_get_serial_param= dll.api("T_get_serial_param","int(struct SerialHandle, struct& BaudRate, struct& DataBits, struct& FlowControl, struct& Parity, struct& StopBits, struct& TotalTimeOut, struct& InterCharTimeOut)");
get_serial_param= dll.api("get_serial_param","int(int SerialHandle, int& BaudRate, int& DataBits, string& FlowControl, string& Parity, int& StopBits, int& TotalTimeOut, int& InterCharTimeOut)");
T_set_serial_param= dll.api("T_set_serial_param","int(struct SerialHandle, struct BaudRate, struct DataBits, struct FlowControl, struct Parity, struct StopBits, struct TotalTimeOut, struct InterCharTimeOut)");
set_serial_param= dll.api("set_serial_param","int(int SerialHandle, int BaudRate, int DataBits, string FlowControl, string Parity, int StopBits, int TotalTimeOut, int InterCharTimeOut)");
T_close_all_serials= dll.api("T_close_all_serials","int(void)");
close_all_serials= dll.api("close_all_serials","int(void)");
T_close_serial= dll.api("T_close_serial","int(struct SerialHandle)");
close_serial= dll.api("close_serial","int(int SerialHandle)");
T_open_serial= dll.api("T_open_serial","int(struct PortName, struct& SerialHandle)");
open_serial= dll.api("open_serial","int(string PortName, int& SerialHandle)");
T_wait_seconds= dll.api("T_wait_seconds","int(struct Seconds)");
wait_seconds= dll.api("wait_seconds","int(double Seconds)");
T_system_call= dll.api("T_system_call","int(struct Command)");
system_call= dll.api("system_call","int(string Command)");
T_set_system= dll.api("T_set_system","int(struct SystemParameter, struct Value)");
set_system= dll.api("set_system","int(string SystemParameter, string Value)");
T_set_check= dll.api("T_set_check","int(struct Check)");
set_check= dll.api("set_check","int(string Check)");
T_reset_obj_db= dll.api("T_reset_obj_db","int(struct DefaultImageWidth, struct DefaultImageHeight, struct DefaultChannels)");
reset_obj_db= dll.api("reset_obj_db","int(int DefaultImageWidth, int DefaultImageHeight, int DefaultChannels)");
T_get_system= dll.api("T_get_system","int(struct Query, struct& Information)");
get_system= dll.api("get_system","int(string Query, int& Information)");
T_get_check= dll.api("T_get_check","int(struct& Check)");
T_get_error_text= dll.api("T_get_error_text","int(struct ErrorCode, struct& ErrorMessage)");
get_error_text= dll.api("get_error_text","int(int ErrorCode, string& ErrorMessage)");
T_count_seconds= dll.api("T_count_seconds","int(struct& Seconds)");
count_seconds= dll.api("count_seconds","int(double& Seconds)");
T_count_relation= dll.api("T_count_relation","int(struct RelationName, struct& NumOfTuples)");
count_relation= dll.api("count_relation","int(string RelationName, int& NumOfTuples)");
T_receive_image= dll.api("T_receive_image","int(ADDR& Image, struct Socket)");
receive_image= dll.api("receive_image","int(ADDR& Image, int Socket)");
T_send_image= dll.api("T_send_image","int(ADDR Image, struct Socket)");
send_image= dll.api("send_image","int(ADDR Image, int Socket)");
T_receive_region= dll.api("T_receive_region","int(ADDR& Region, struct Socket)");
receive_region= dll.api("receive_region","int(ADDR& Region, int Socket)");
T_send_region= dll.api("T_send_region","int(ADDR Region, struct Socket)");
send_region= dll.api("send_region","int(ADDR Region, int Socket)");
T_receive_xld= dll.api("T_receive_xld","int(ADDR& XLD, struct Socket)");
receive_xld= dll.api("receive_xld","int(ADDR& XLD, int Socket)");
T_send_xld= dll.api("T_send_xld","int(ADDR XLD, struct Socket)");
send_xld= dll.api("send_xld","int(ADDR XLD, int Socket)");
T_receive_tuple= dll.api("T_receive_tuple","int(struct Socket, struct& Tuple)");
receive_tuple= dll.api("receive_tuple","int(int Socket, string& Tuple)");
T_send_tuple= dll.api("T_send_tuple","int(struct Socket, struct Tuple)");
send_tuple= dll.api("send_tuple","int(int Socket, string Tuple)");
T_receive_data= dll.api("T_receive_data","int(struct Socket, struct Format, struct& Data, struct& From)");
receive_data= dll.api("receive_data","int(int Socket, string Format, string& Data, string& From)");
T_send_data= dll.api("T_send_data","int(struct Socket, struct Format, struct Data, struct To)");
send_data= dll.api("send_data","int(int Socket, string Format, string Data, string To)");
T_get_socket_param= dll.api("T_get_socket_param","int(struct Socket, struct GenParamName, struct& GenParamValue)");
get_socket_param= dll.api("get_socket_param","int(int Socket, string GenParamName, string& GenParamValue)");
T_set_socket_param= dll.api("T_set_socket_param","int(struct Socket, struct GenParamName, struct GenParamValue)");
set_socket_param= dll.api("set_socket_param","int(int Socket, string GenParamName, string GenParamValue)");
T_get_next_socket_data_type= dll.api("T_get_next_socket_data_type","int(struct Socket, struct& DataType)");
get_next_socket_data_type= dll.api("get_next_socket_data_type","int(int Socket, string& DataType)");
T_get_socket_descriptor= dll.api("T_get_socket_descriptor","int(struct Socket, struct& SocketDescriptor)");
get_socket_descriptor= dll.api("get_socket_descriptor","int(int Socket, int& SocketDescriptor)");
T_close_all_sockets= dll.api("T_close_all_sockets","int(void)");
close_all_sockets= dll.api("close_all_sockets","int(void)");
T_close_socket= dll.api("T_close_socket","int(struct Socket)");
close_socket= dll.api("close_socket","int(int Socket)");
T_socket_accept_connect= dll.api("T_socket_accept_connect","int(struct AcceptingSocket, struct Wait, struct& Socket)");
socket_accept_connect= dll.api("socket_accept_connect","int(int AcceptingSocket, string Wait, int& Socket)");
T_open_socket_connect= dll.api("T_open_socket_connect","int(struct HostName, struct Port, struct GenParamName, struct GenParamValue, struct& Socket)");
open_socket_connect= dll.api("open_socket_connect","int(string HostName, int Port, string GenParamName, string GenParamValue, int& Socket)");
T_open_socket_accept= dll.api("T_open_socket_accept","int(struct Port, struct GenParamName, struct GenParamValue, struct& AcceptingSocket)");
open_socket_accept= dll.api("open_socket_accept","int(int Port, string GenParamName, string GenParamValue, int& AcceptingSocket)");
T_get_extended_error_info= dll.api("T_get_extended_error_info","int(struct& OperatorName, struct& ErrorCode, struct& ErrorMessage)");
get_extended_error_info= dll.api("get_extended_error_info","int(string& OperatorName, int& ErrorCode, string& ErrorMessage)");
T_get_modules= dll.api("T_get_modules","int(struct& UsedModules, struct& ModuleKey)");
T_binocular_distance_ms= dll.api("T_binocular_distance_ms","int(ADDR ImageRect1, ADDR ImageRect2, ADDR& Distance, ADDR& Score, struct CamParamRect1, struct CamParamRect2, struct RelPoseRect, struct MinDisparity, struct MaxDisparity, struct SurfaceSmoothing, struct EdgeSmoothing, struct GenParamName, struct GenParamValue)");
T_binocular_disparity_ms= dll.api("T_binocular_disparity_ms","int(ADDR ImageRect1, ADDR ImageRect2, ADDR& Disparity, ADDR& Score, struct MinDisparity, struct MaxDisparity, struct SurfaceSmoothing, struct EdgeSmoothing, struct GenParamName, struct GenParamValue)");
binocular_disparity_ms= dll.api("binocular_disparity_ms","int(ADDR ImageRect1, ADDR ImageRect2, ADDR& Disparity, ADDR& Score, int MinDisparity, int MaxDisparity, int SurfaceSmoothing, int EdgeSmoothing, string GenParamName, string GenParamValue)");
T_binocular_distance_mg= dll.api("T_binocular_distance_mg","int(ADDR ImageRect1, ADDR ImageRect2, ADDR& Distance, ADDR& Score, struct CamParamRect1, struct CamParamRect2, struct RelPoseRect, struct GrayConstancy, struct GradientConstancy, struct Smoothness, struct InitialGuess, struct CalculateScore, struct MGParamName, struct MGParamValue)");
T_binocular_disparity_mg= dll.api("T_binocular_disparity_mg","int(ADDR ImageRect1, ADDR ImageRect2, ADDR& Disparity, ADDR& Score, struct GrayConstancy, struct GradientConstancy, struct Smoothness, struct InitialGuess, struct CalculateScore, struct MGParamName, struct MGParamValue)");
binocular_disparity_mg= dll.api("binocular_disparity_mg","int(ADDR ImageRect1, ADDR ImageRect2, ADDR& Disparity, ADDR& Score, double GrayConstancy, double GradientConstancy, double Smoothness, double InitialGuess, string CalculateScore, string MGParamName, string MGParamValue)");
T_reconst3d_from_fundamental_matrix= dll.api("T_reconst3d_from_fundamental_matrix","int(struct Rows1, struct Cols1, struct Rows2, struct Cols2, struct CovRR1, struct CovRC1, struct CovCC1, struct CovRR2, struct CovRC2, struct CovCC2, struct FMatrix, struct CovFMat, struct& X, struct& Y, struct& Z, struct& W, struct& CovXYZW)");
T_gen_binocular_proj_rectification= dll.api("T_gen_binocular_proj_rectification","int(ADDR& Map1, ADDR& Map2, struct FMatrix, struct CovFMat, struct Width1, struct Height1, struct Width2, struct Height2, struct SubSampling, struct Mapping, struct& CovFMatRect, struct& H1, struct& H2)");
T_vector_to_fundamental_matrix_distortion= dll.api("T_vector_to_fundamental_matrix_distortion","int(struct Rows1, struct Cols1, struct Rows2, struct Cols2, struct CovRR1, struct CovRC1, struct CovCC1, struct CovRR2, struct CovRC2, struct CovCC2, struct ImageWidth, struct ImageHeight, struct Method, struct& FMatrix, struct& Kappa, struct& Error, struct& X, struct& Y, struct& Z, struct& W)");
T_rel_pose_to_fundamental_matrix= dll.api("T_rel_pose_to_fundamental_matrix","int(struct RelPose, struct CovRelPose, struct CamPar1, struct CamPar2, struct& FMatrix, struct& CovFMat)");
T_essential_to_fundamental_matrix= dll.api("T_essential_to_fundamental_matrix","int(struct EMatrix, struct CovEMat, struct CamMat1, struct CamMat2, struct& FMatrix, struct& CovFMat)");
T_vector_to_rel_pose= dll.api("T_vector_to_rel_pose","int(struct Rows1, struct Cols1, struct Rows2, struct Cols2, struct CovRR1, struct CovRC1, struct CovCC1, struct CovRR2, struct CovRC2, struct CovCC2, struct CamPar1, struct CamPar2, struct Method, struct& RelPose, struct& CovRelPose, struct& Error, struct& X, struct& Y, struct& Z, struct& CovXYZ)");
T_vector_to_essential_matrix= dll.api("T_vector_to_essential_matrix","int(struct Rows1, struct Cols1, struct Rows2, struct Cols2, struct CovRR1, struct CovRC1, struct CovCC1, struct CovRR2, struct CovRC2, struct CovCC2, struct CamMat1, struct CamMat2, struct Method, struct& EMatrix, struct& CovEMat, struct& Error, struct& X, struct& Y, struct& Z, struct& CovXYZ)");
T_vector_to_fundamental_matrix= dll.api("T_vector_to_fundamental_matrix","int(struct Rows1, struct Cols1, struct Rows2, struct Cols2, struct CovRR1, struct CovRC1, struct CovCC1, struct CovRR2, struct CovRC2, struct CovCC2, struct Method, struct& FMatrix, struct& CovFMat, struct& Error, struct& X, struct& Y, struct& Z, struct& W, struct& CovXYZW)");
T_match_fundamental_matrix_distortion_ransac= dll.api("T_match_fundamental_matrix_distortion_ransac","int(ADDR Image1, ADDR Image2, struct Rows1, struct Cols1, struct Rows2, struct Cols2, struct GrayMatchMethod, struct MaskSize, struct RowMove, struct ColMove, struct RowTolerance, struct ColTolerance, struct Rotation, struct MatchThreshold, struct EstimationMethod, struct DistanceThreshold, struct RandSeed, struct& FMatrix, struct& Kappa, struct& Error, struct& Points1, struct& Points2)");
T_match_rel_pose_ransac= dll.api("T_match_rel_pose_ransac","int(ADDR Image1, ADDR Image2, struct Rows1, struct Cols1, struct Rows2, struct Cols2, struct CamPar1, struct CamPar2, struct GrayMatchMethod, struct MaskSize, struct RowMove, struct ColMove, struct RowTolerance, struct ColTolerance, struct Rotation, struct MatchThreshold, struct EstimationMethod, struct DistanceThreshold, struct RandSeed, struct& RelPose, struct& CovRelPose, struct& Error, struct& Points1, struct& Points2)");
T_match_essential_matrix_ransac= dll.api("T_match_essential_matrix_ransac","int(ADDR Image1, ADDR Image2, struct Rows1, struct Cols1, struct Rows2, struct Cols2, struct CamMat1, struct CamMat2, struct GrayMatchMethod, struct MaskSize, struct RowMove, struct ColMove, struct RowTolerance, struct ColTolerance, struct Rotation, struct MatchThreshold, struct EstimationMethod, struct DistanceThreshold, struct RandSeed, struct& EMatrix, struct& CovEMat, struct& Error, struct& Points1, struct& Points2)");
T_match_fundamental_matrix_ransac= dll.api("T_match_fundamental_matrix_ransac","int(ADDR Image1, ADDR Image2, struct Rows1, struct Cols1, struct Rows2, struct Cols2, struct GrayMatchMethod, struct MaskSize, struct RowMove, struct ColMove, struct RowTolerance, struct ColTolerance, struct Rotation, struct MatchThreshold, struct EstimationMethod, struct DistanceThreshold, struct RandSeed, struct& FMatrix, struct& CovFMat, struct& Error, struct& Points1, struct& Points2)");
T_binocular_distance= dll.api("T_binocular_distance","int(ADDR ImageRect1, ADDR ImageRect2, ADDR& Distance, ADDR& Score, struct CamParamRect1, struct CamParamRect2, struct RelPoseRect, struct Method, struct MaskWidth, struct MaskHeight, struct TextureThresh, struct MinDisparity, struct MaxDisparity, struct NumLevels, struct ScoreThresh, struct Filter, struct SubDistance)");
T_binocular_disparity= dll.api("T_binocular_disparity","int(ADDR ImageRect1, ADDR ImageRect2, ADDR& Disparity, ADDR& Score, struct Method, struct MaskWidth, struct MaskHeight, struct TextureThresh, struct MinDisparity, struct MaxDisparity, struct NumLevels, struct ScoreThresh, struct Filter, struct SubDisparity)");
binocular_disparity= dll.api("binocular_disparity","int(ADDR ImageRect1, ADDR ImageRect2, ADDR& Disparity, ADDR& Score, string Method, int MaskWidth, int MaskHeight, double TextureThresh, int MinDisparity, int MaxDisparity, int NumLevels, double ScoreThresh, string Filter, string SubDisparity)");
T_intersect_lines_of_sight= dll.api("T_intersect_lines_of_sight","int(struct CamParam1, struct CamParam2, struct RelPose, struct Row1, struct Col1, struct Row2, struct Col2, struct& X, struct& Y, struct& Z, struct& Dist)");
T_disparity_image_to_xyz= dll.api("T_disparity_image_to_xyz","int(ADDR Disparity, ADDR& X, ADDR& Y, ADDR& Z, struct CamParamRect1, struct CamParamRect2, struct RelPoseRect)");
T_disparity_to_point_3d= dll.api("T_disparity_to_point_3d","int(struct CamParamRect1, struct CamParamRect2, struct RelPoseRect, struct Row1, struct Col1, struct Disparity, struct& X, struct& Y, struct& Z)");
T_disparity_to_distance= dll.api("T_disparity_to_distance","int(struct CamParamRect1, struct CamParamRect2, struct RelPoseRect, struct Disparity, struct& Distance)");
T_distance_to_disparity= dll.api("T_distance_to_disparity","int(struct CamParamRect1, struct CamParamRect2, struct RelPoseRect, struct Distance, struct& Disparity)");
T_gen_binocular_rectification_map= dll.api("T_gen_binocular_rectification_map","int(ADDR& Map1, ADDR& Map2, struct CamParam1, struct CamParam2, struct RelPose, struct SubSampling, struct Method, struct MapType, struct& CamParamRect1, struct& CamParamRect2, struct& CamPoseRect1, struct& CamPoseRect2, struct& RelPoseRect)");
T_binocular_calibration= dll.api("T_binocular_calibration","int(struct NX, struct NY, struct NZ, struct NRow1, struct NCol1, struct NRow2, struct NCol2, struct StartCamParam1, struct StartCamParam2, struct NStartPose1, struct NStartPose2, struct EstimateParams, struct& CamParam1, struct& CamParam2, struct& NFinalPose1, struct& NFinalPose2, struct& RelPose, struct& Errors)");
T_query_spy= dll.api("T_query_spy","int(struct& Classes, struct& Values)");
T_set_spy= dll.api("T_set_spy","int(struct Class, struct Value)");
set_spy= dll.api("set_spy","int(string Class, string Value)");
T_get_spy= dll.api("T_get_spy","int(struct Class, struct& Value)");
get_spy= dll.api("get_spy","int(string Class, string& Value)");
T_read_sheet_of_light_model= dll.api("T_read_sheet_of_light_model","int(struct FileName, struct& SheetOfLightModelID)");
read_sheet_of_light_model= dll.api("read_sheet_of_light_model","int(string FileName, int& SheetOfLightModelID)");
T_write_sheet_of_light_model= dll.api("T_write_sheet_of_light_model","int(struct SheetOfLightModelID, struct FileName)");
write_sheet_of_light_model= dll.api("write_sheet_of_light_model","int(int SheetOfLightModelID, string FileName)");
T_deserialize_sheet_of_light_model= dll.api("T_deserialize_sheet_of_light_model","int(struct SerializedItemHandle, struct& SheetOfLightModelID)");
deserialize_sheet_of_light_model= dll.api("deserialize_sheet_of_light_model","int(int SerializedItemHandle, int& SheetOfLightModelID)");
T_serialize_sheet_of_light_model= dll.api("T_serialize_sheet_of_light_model","int(struct SheetOfLightModelID, struct& SerializedItemHandle)");
serialize_sheet_of_light_model= dll.api("serialize_sheet_of_light_model","int(int SheetOfLightModelID, int& SerializedItemHandle)");
T_create_sheet_of_light_calib_object= dll.api("T_create_sheet_of_light_calib_object","int(struct Width, struct Length, struct HeightMin, struct HeightMax, struct FileName)");
create_sheet_of_light_calib_object= dll.api("create_sheet_of_light_calib_object","int(double Width, double Length, double HeightMin, double HeightMax, string FileName)");
T_calibrate_sheet_of_light= dll.api("T_calibrate_sheet_of_light","int(struct SheetOfLightModelID, struct& Error)");
calibrate_sheet_of_light= dll.api("calibrate_sheet_of_light","int(int SheetOfLightModelID, double& Error)");
T_get_sheet_of_light_result_object_model_3d= dll.api("T_get_sheet_of_light_result_object_model_3d","int(struct SheetOfLightModelID, struct& ObjectModel3D)");
get_sheet_of_light_result_object_model_3d= dll.api("get_sheet_of_light_result_object_model_3d","int(int SheetOfLightModelID, int& ObjectModel3D)");
T_get_sheet_of_light_result= dll.api("T_get_sheet_of_light_result","int(ADDR& ResultValue, struct SheetOfLightModelID, struct ResultName)");
get_sheet_of_light_result= dll.api("get_sheet_of_light_result","int(ADDR& ResultValue, int SheetOfLightModelID, string ResultName)");
T_apply_sheet_of_light_calibration= dll.api("T_apply_sheet_of_light_calibration","int(ADDR Disparity, struct SheetOfLightModelID)");
apply_sheet_of_light_calibration= dll.api("apply_sheet_of_light_calibration","int(ADDR Disparity, int SheetOfLightModelID)");
T_set_profile_sheet_of_light= dll.api("T_set_profile_sheet_of_light","int(ADDR ProfileDisparityImage, struct SheetOfLightModelID, struct MovementPoses)");
T_measure_profile_sheet_of_light= dll.api("T_measure_profile_sheet_of_light","int(ADDR ProfileImage, struct SheetOfLightModelID, struct MovementPose)");
T_set_sheet_of_light_param= dll.api("T_set_sheet_of_light_param","int(struct SheetOfLightModelID, struct GenParamName, struct GenParamValue)");
set_sheet_of_light_param= dll.api("set_sheet_of_light_param","int(int SheetOfLightModelID, string GenParamName, string GenParamValue)");
T_get_sheet_of_light_param= dll.api("T_get_sheet_of_light_param","int(struct SheetOfLightModelID, struct GenParamName, struct& GenParamValue)");
get_sheet_of_light_param= dll.api("get_sheet_of_light_param","int(int SheetOfLightModelID, string GenParamName, string& GenParamValue)");
T_query_sheet_of_light_params= dll.api("T_query_sheet_of_light_params","int(struct SheetOfLightModelID, struct QueryName, struct& GenParamName)");
T_reset_sheet_of_light_model= dll.api("T_reset_sheet_of_light_model","int(struct SheetOfLightModelID)");
reset_sheet_of_light_model= dll.api("reset_sheet_of_light_model","int(int SheetOfLightModelID)");
T_clear_all_sheet_of_light_models= dll.api("T_clear_all_sheet_of_light_models","int(void)");
clear_all_sheet_of_light_models= dll.api("clear_all_sheet_of_light_models","int(void)");
T_clear_sheet_of_light_model= dll.api("T_clear_sheet_of_light_model","int(struct SheetOfLightModelID)");
clear_sheet_of_light_model= dll.api("clear_sheet_of_light_model","int(int SheetOfLightModelID)");
T_create_sheet_of_light_model= dll.api("T_create_sheet_of_light_model","int(ADDR ProfileRegion, struct GenParamName, struct GenParamValue, struct& SheetOfLightModelID)");
create_sheet_of_light_model= dll.api("create_sheet_of_light_model","int(ADDR ProfileRegion, string GenParamName, int GenParamValue, int& SheetOfLightModelID)");
T_shade_height_field= dll.api("T_shade_height_field","int(ADDR ImageHeight, ADDR& ImageShade, struct Slant, struct Tilt, struct Albedo, struct Ambient, struct Shadows)");
shade_height_field= dll.api("shade_height_field","int(ADDR ImageHeight, ADDR& ImageShade, double Slant, double Tilt, double Albedo, double Ambient, string Shadows)");
T_estimate_al_am= dll.api("T_estimate_al_am","int(ADDR Image, struct& Albedo, struct& Ambient)");
estimate_al_am= dll.api("estimate_al_am","int(ADDR Image, double& Albedo, double& Ambient)");
T_estimate_sl_al_zc= dll.api("T_estimate_sl_al_zc","int(ADDR Image, struct& Slant, struct& Albedo)");
estimate_sl_al_zc= dll.api("estimate_sl_al_zc","int(ADDR Image, double& Slant, double& Albedo)");
T_estimate_sl_al_lr= dll.api("T_estimate_sl_al_lr","int(ADDR Image, struct& Slant, struct& Albedo)");
estimate_sl_al_lr= dll.api("estimate_sl_al_lr","int(ADDR Image, double& Slant, double& Albedo)");
T_estimate_tilt_zc= dll.api("T_estimate_tilt_zc","int(ADDR Image, struct& Tilt)");
estimate_tilt_zc= dll.api("estimate_tilt_zc","int(ADDR Image, double& Tilt)");
T_estimate_tilt_lr= dll.api("T_estimate_tilt_lr","int(ADDR Image, struct& Tilt)");
estimate_tilt_lr= dll.api("estimate_tilt_lr","int(ADDR Image, double& Tilt)");
T_reconstruct_height_field_from_gradient= dll.api("T_reconstruct_height_field_from_gradient","int(ADDR Gradient, ADDR& HeightField, struct ReconstructionMethod, struct GenParamName, struct GenParamValue)");
T_photometric_stereo= dll.api("T_photometric_stereo","int(ADDR Images, ADDR& HeightField, ADDR& Gradient, ADDR& Albedo, struct Slants, struct Tilts, struct ResultType, struct ReconstructionMethod, struct GenParamName, struct GenParamValue)");
T_sfs_pentland= dll.api("T_sfs_pentland","int(ADDR Image, ADDR& Height, struct Slant, struct Tilt, struct Albedo, struct Ambient)");
sfs_pentland= dll.api("sfs_pentland","int(ADDR Image, ADDR& Height, double Slant, double Tilt, double Albedo, double Ambient)");
T_sfs_orig_lr= dll.api("T_sfs_orig_lr","int(ADDR Image, ADDR& Height, struct Slant, struct Tilt, struct Albedo, struct Ambient)");
sfs_orig_lr= dll.api("sfs_orig_lr","int(ADDR Image, ADDR& Height, double Slant, double Tilt, double Albedo, double Ambient)");
T_sfs_mod_lr= dll.api("T_sfs_mod_lr","int(ADDR Image, ADDR& Height, struct Slant, struct Tilt, struct Albedo, struct Ambient)");
sfs_mod_lr= dll.api("sfs_mod_lr","int(ADDR Image, ADDR& Height, double Slant, double Tilt, double Albedo, double Ambient)");
T_receive_serialized_item= dll.api("T_receive_serialized_item","int(struct Socket, struct& SerializedItemHandle)");
receive_serialized_item= dll.api("receive_serialized_item","int(int Socket, int& SerializedItemHandle)");
T_send_serialized_item= dll.api("T_send_serialized_item","int(struct Socket, struct SerializedItemHandle)");
send_serialized_item= dll.api("send_serialized_item","int(int Socket, int SerializedItemHandle)");
T_fwrite_serialized_item= dll.api("T_fwrite_serialized_item","int(struct FileHandle, struct SerializedItemHandle)");
fwrite_serialized_item= dll.api("fwrite_serialized_item","int(int FileHandle, int SerializedItemHandle)");
T_fread_serialized_item= dll.api("T_fread_serialized_item","int(struct FileHandle, struct& SerializedItemHandle)");
fread_serialized_item= dll.api("fread_serialized_item","int(int FileHandle, int& SerializedItemHandle)");
T_clear_all_serialized_items= dll.api("T_clear_all_serialized_items","int(void)");
clear_all_serialized_items= dll.api("clear_all_serialized_items","int(void)");
T_clear_serialized_item= dll.api("T_clear_serialized_item","int(struct SerializedItemHandle)");
clear_serialized_item= dll.api("clear_serialized_item","int(int SerializedItemHandle)");
T_get_serialized_item_ptr= dll.api("T_get_serialized_item_ptr","int(struct SerializedItemHandle, struct& Pointer, struct& Size)");
get_serialized_item_ptr= dll.api("get_serialized_item_ptr","int(int SerializedItemHandle, int& Pointer, int& Size)");
T_create_serialized_item_ptr= dll.api("T_create_serialized_item_ptr","int(struct Pointer, struct Size, struct Copy, struct& SerializedItemHandle)");
create_serialized_item_ptr= dll.api("create_serialized_item_ptr","int(int Pointer, int Size, string Copy, int& SerializedItemHandle)");
T_fit_primitives_object_model_3d= dll.api("T_fit_primitives_object_model_3d","int(struct ObjectModel3D, struct GenParamName, struct GenParamValue, struct& ObjectModel3DOut)");
T_segment_object_model_3d= dll.api("T_segment_object_model_3d","int(struct ObjectModel3D, struct GenParamName, struct GenParamValue, struct& ObjectModel3DOut)");
T_clear_all_text_results= dll.api("T_clear_all_text_results","int(void)");
clear_all_text_results= dll.api("clear_all_text_results","int(void)");
T_clear_text_result= dll.api("T_clear_text_result","int(struct TextResultID)");
clear_text_result= dll.api("clear_text_result","int(int TextResultID)");
T_get_text_object= dll.api("T_get_text_object","int(ADDR& Characters, struct TextResultID, struct ResultName)");
get_text_object= dll.api("get_text_object","int(ADDR& Characters, int TextResultID, string ResultName)");
T_get_text_result= dll.api("T_get_text_result","int(struct TextResultID, struct ResultName, struct& ResultValue)");
get_text_result= dll.api("get_text_result","int(int TextResultID, string ResultName, int& ResultValue)");
T_find_text= dll.api("T_find_text","int(ADDR Image, struct TextModel, struct& TextResultID)");
find_text= dll.api("find_text","int(ADDR Image, int TextModel, int& TextResultID)");
T_get_text_model_param= dll.api("T_get_text_model_param","int(struct TextModel, struct GenParamName, struct& GenParamValue)");
get_text_model_param= dll.api("get_text_model_param","int(int TextModel, string GenParamName, int& GenParamValue)");
T_set_text_model_param= dll.api("T_set_text_model_param","int(struct TextModel, struct GenParamName, struct GenParamValue)");
set_text_model_param= dll.api("set_text_model_param","int(int TextModel, string GenParamName, int GenParamValue)");
T_clear_all_text_models= dll.api("T_clear_all_text_models","int(void)");
clear_all_text_models= dll.api("clear_all_text_models","int(void)");
T_clear_text_model= dll.api("T_clear_text_model","int(struct TextModel)");
clear_text_model= dll.api("clear_text_model","int(int TextModel)");
T_create_text_model_reader= dll.api("T_create_text_model_reader","int(struct Mode, struct OCRClassifier, struct& TextModel)");
create_text_model_reader= dll.api("create_text_model_reader","int(string Mode, string OCRClassifier, int& TextModel)");
T_create_text_model= dll.api("T_create_text_model","int(struct& TextModel)");
create_text_model= dll.api("create_text_model","int(int& TextModel)");
T_select_characters= dll.api("T_select_characters","int(ADDR Region, ADDR& RegionCharacters, struct DotPrint, struct StrokeWidth, struct CharWidth, struct CharHeight, struct Punctuation, struct DiacriticMarks, struct PartitionMethod, struct PartitionLines, struct FragmentDistance, struct ConnectFragments, struct ClutterSizeMax, struct StopAfter)");
T_segment_characters= dll.api("T_segment_characters","int(ADDR Region, ADDR Image, ADDR& ImageForeground, ADDR& RegionForeground, struct Method, struct EliminateLines, struct DotPrint, struct StrokeWidth, struct CharWidth, struct CharHeight, struct ThresholdOffset, struct Contrast, struct& UsedThreshold)");
T_text_line_slant= dll.api("T_text_line_slant","int(ADDR Region, ADDR Image, struct CharHeight, struct SlantFrom, struct SlantTo, struct& SlantAngle)");
text_line_slant= dll.api("text_line_slant","int(ADDR Region, ADDR Image, int CharHeight, double SlantFrom, double SlantTo, double& SlantAngle)");
T_text_line_orientation= dll.api("T_text_line_orientation","int(ADDR Region, ADDR Image, struct CharHeight, struct OrientationFrom, struct OrientationTo, struct& OrientationAngle)");
text_line_orientation= dll.api("text_line_orientation","int(ADDR Region, ADDR Image, int CharHeight, double OrientationFrom, double OrientationTo, double& OrientationAngle)");
T_classify_image_class_lut= dll.api("T_classify_image_class_lut","int(ADDR Image, ADDR& ClassRegions, struct ClassLUTHandle)");
classify_image_class_lut= dll.api("classify_image_class_lut","int(ADDR Image, ADDR& ClassRegions, int ClassLUTHandle)");
T_classify_image_class_knn= dll.api("T_classify_image_class_knn","int(ADDR Image, ADDR& ClassRegions, ADDR& DistanceImage, struct KNNHandle, struct RejectionThreshold)");
classify_image_class_knn= dll.api("classify_image_class_knn","int(ADDR Image, ADDR& ClassRegions, ADDR& DistanceImage, int KNNHandle, double RejectionThreshold)");
T_add_samples_image_class_knn= dll.api("T_add_samples_image_class_knn","int(ADDR Image, ADDR ClassRegions, struct KNNHandle)");
add_samples_image_class_knn= dll.api("add_samples_image_class_knn","int(ADDR Image, ADDR ClassRegions, int KNNHandle)");
T_classify_image_class_gmm= dll.api("T_classify_image_class_gmm","int(ADDR Image, ADDR& ClassRegions, struct GMMHandle, struct RejectionThreshold)");
classify_image_class_gmm= dll.api("classify_image_class_gmm","int(ADDR Image, ADDR& ClassRegions, int GMMHandle, double RejectionThreshold)");
T_add_samples_image_class_gmm= dll.api("T_add_samples_image_class_gmm","int(ADDR Image, ADDR ClassRegions, struct GMMHandle, struct Randomize)");
add_samples_image_class_gmm= dll.api("add_samples_image_class_gmm","int(ADDR Image, ADDR ClassRegions, int GMMHandle, double Randomize)");
T_classify_image_class_svm= dll.api("T_classify_image_class_svm","int(ADDR Image, ADDR& ClassRegions, struct SVMHandle)");
classify_image_class_svm= dll.api("classify_image_class_svm","int(ADDR Image, ADDR& ClassRegions, int SVMHandle)");
T_add_samples_image_class_svm= dll.api("T_add_samples_image_class_svm","int(ADDR Image, ADDR ClassRegions, struct SVMHandle)");
add_samples_image_class_svm= dll.api("add_samples_image_class_svm","int(ADDR Image, ADDR ClassRegions, int SVMHandle)");
T_classify_image_class_mlp= dll.api("T_classify_image_class_mlp","int(ADDR Image, ADDR& ClassRegions, struct MLPHandle, struct RejectionThreshold)");
classify_image_class_mlp= dll.api("classify_image_class_mlp","int(ADDR Image, ADDR& ClassRegions, int MLPHandle, double RejectionThreshold)");
T_add_samples_image_class_mlp= dll.api("T_add_samples_image_class_mlp","int(ADDR Image, ADDR ClassRegions, struct MLPHandle)");
add_samples_image_class_mlp= dll.api("add_samples_image_class_mlp","int(ADDR Image, ADDR ClassRegions, int MLPHandle)");
T_learn_ndim_norm= dll.api("T_learn_ndim_norm","int(ADDR Foreground, ADDR Background, ADDR Image, struct Metric, struct Distance, struct MinNumberPercent, struct& Radius, struct& Center, struct& Quality)");
T_learn_ndim_box= dll.api("T_learn_ndim_box","int(ADDR Foreground, ADDR Background, ADDR MultiChannelImage, struct ClassifHandle)");
learn_ndim_box= dll.api("learn_ndim_box","int(ADDR Foreground, ADDR Background, ADDR MultiChannelImage, int ClassifHandle)");
T_class_ndim_box= dll.api("T_class_ndim_box","int(ADDR MultiChannelImage, ADDR& Regions, struct ClassifHandle)");
class_ndim_box= dll.api("class_ndim_box","int(ADDR MultiChannelImage, ADDR& Regions, int ClassifHandle)");
T_class_ndim_norm= dll.api("T_class_ndim_norm","int(ADDR MultiChannelImage, ADDR& Regions, struct Metric, struct SingleMultiple, struct Radius, struct Center)");
class_ndim_norm= dll.api("class_ndim_norm","int(ADDR MultiChannelImage, ADDR& Regions, string Metric, string SingleMultiple, double Radius, double Center)");
T_class_2dim_sup= dll.api("T_class_2dim_sup","int(ADDR ImageCol, ADDR ImageRow, ADDR FeatureSpace, ADDR& RegionClass2Dim)");
class_2dim_sup= dll.api("class_2dim_sup","int(ADDR ImageCol, ADDR ImageRow, ADDR FeatureSpace, ADDR& RegionClass2Dim)");
T_class_2dim_unsup= dll.api("T_class_2dim_unsup","int(ADDR Image1, ADDR Image2, ADDR& Classes, struct Threshold, struct NumClasses)");
class_2dim_unsup= dll.api("class_2dim_unsup","int(ADDR Image1, ADDR Image2, ADDR& Classes, int Threshold, int NumClasses)");
T_check_difference= dll.api("T_check_difference","int(ADDR Image, ADDR Pattern, ADDR& Selected, struct Mode, struct DiffLowerBound, struct DiffUpperBound, struct GrayOffset, struct AddRow, struct AddCol)");
check_difference= dll.api("check_difference","int(ADDR Image, ADDR Pattern, ADDR& Selected, string Mode, int DiffLowerBound, int DiffUpperBound, int GrayOffset, int AddRow, int AddCol)");
T_char_threshold= dll.api("T_char_threshold","int(ADDR Image, ADDR HistoRegion, ADDR& Characters, struct Sigma, struct Percent, struct& Threshold)");
char_threshold= dll.api("char_threshold","int(ADDR Image, ADDR HistoRegion, ADDR& Characters, double Sigma, double Percent, int& Threshold)");
T_label_to_region= dll.api("T_label_to_region","int(ADDR LabelImage, ADDR& Regions)");
label_to_region= dll.api("label_to_region","int(ADDR LabelImage, ADDR& Regions)");
T_nonmax_suppression_amp= dll.api("T_nonmax_suppression_amp","int(ADDR ImgAmp, ADDR& ImageResult, struct Mode)");
nonmax_suppression_amp= dll.api("nonmax_suppression_amp","int(ADDR ImgAmp, ADDR& ImageResult, string Mode)");
T_nonmax_suppression_dir= dll.api("T_nonmax_suppression_dir","int(ADDR ImgAmp, ADDR ImgDir, ADDR& ImageResult, struct Mode)");
nonmax_suppression_dir= dll.api("nonmax_suppression_dir","int(ADDR ImgAmp, ADDR ImgDir, ADDR& ImageResult, string Mode)");
T_hysteresis_threshold= dll.api("T_hysteresis_threshold","int(ADDR Image, ADDR& RegionHysteresis, struct Low, struct High, struct MaxLength)");
hysteresis_threshold= dll.api("hysteresis_threshold","int(ADDR Image, ADDR& RegionHysteresis, int Low, int High, int MaxLength)");
T_binary_threshold= dll.api("T_binary_threshold","int(ADDR Image, ADDR& Region, struct Method, struct LightDark, struct& UsedThreshold)");
binary_threshold= dll.api("binary_threshold","int(ADDR Image, ADDR& Region, string Method, string LightDark, int& UsedThreshold)");
T_local_threshold= dll.api("T_local_threshold","int(ADDR Image, ADDR& Region, struct Method, struct LightDark, struct GenParamName, struct GenParamValue)");
local_threshold= dll.api("local_threshold","int(ADDR Image, ADDR& Region, string Method, string LightDark, string GenParamName, int GenParamValue)");
T_var_threshold= dll.api("T_var_threshold","int(ADDR Image, ADDR& Region, struct MaskWidth, struct MaskHeight, struct StdDevScale, struct AbsThreshold, struct LightDark)");
var_threshold= dll.api("var_threshold","int(ADDR Image, ADDR& Region, int MaskWidth, int MaskHeight, double StdDevScale, double AbsThreshold, string LightDark)");
T_dyn_threshold= dll.api("T_dyn_threshold","int(ADDR OrigImage, ADDR ThresholdImage, ADDR& RegionDynThresh, struct Offset, struct LightDark)");
dyn_threshold= dll.api("dyn_threshold","int(ADDR OrigImage, ADDR ThresholdImage, ADDR& RegionDynThresh, double Offset, string LightDark)");
T_threshold= dll.api("T_threshold","int(ADDR Image, ADDR& Region, struct MinGray, struct MaxGray)");
threshold= dll.api("threshold","int(ADDR Image, ADDR& Region, double MinGray, double MaxGray)");
T_threshold_sub_pix= dll.api("T_threshold_sub_pix","int(ADDR Image, ADDR& Border, struct Threshold)");
threshold_sub_pix= dll.api("threshold_sub_pix","int(ADDR Image, ADDR& Border, double Threshold)");
T_regiongrowing_n= dll.api("T_regiongrowing_n","int(ADDR MultiChannelImage, ADDR& Regions, struct Metric, struct MinTolerance, struct MaxTolerance, struct MinSize)");
regiongrowing_n= dll.api("regiongrowing_n","int(ADDR MultiChannelImage, ADDR& Regions, string Metric, double MinTolerance, double MaxTolerance, int MinSize)");
T_regiongrowing= dll.api("T_regiongrowing","int(ADDR Image, ADDR& Regions, struct Row, struct Column, struct Tolerance, struct MinSize)");
regiongrowing= dll.api("regiongrowing","int(ADDR Image, ADDR& Regions, int Row, int Column, double Tolerance, int MinSize)");
T_regiongrowing_mean= dll.api("T_regiongrowing_mean","int(ADDR Image, ADDR& Regions, struct StartRows, struct StartColumns, struct Tolerance, struct MinSize)");
regiongrowing_mean= dll.api("regiongrowing_mean","int(ADDR Image, ADDR& Regions, int StartRows, int StartColumns, double Tolerance, int MinSize)");
T_pouring= dll.api("T_pouring","int(ADDR Image, ADDR& Regions, struct Mode, struct MinGray, struct MaxGray)");
pouring= dll.api("pouring","int(ADDR Image, ADDR& Regions, string Mode, int MinGray, int MaxGray)");
T_watersheds_threshold= dll.api("T_watersheds_threshold","int(ADDR Image, ADDR& Basins, struct Threshold)");
watersheds_threshold= dll.api("watersheds_threshold","int(ADDR Image, ADDR& Basins, int Threshold)");
T_watersheds= dll.api("T_watersheds","int(ADDR Image, ADDR& Basins, ADDR& Watersheds)");
watersheds= dll.api("watersheds","int(ADDR Image, ADDR& Basins, ADDR& Watersheds)");
T_zero_crossing= dll.api("T_zero_crossing","int(ADDR Image, ADDR& RegionCrossing)");
zero_crossing= dll.api("zero_crossing","int(ADDR Image, ADDR& RegionCrossing)");
T_zero_crossing_sub_pix= dll.api("T_zero_crossing_sub_pix","int(ADDR Image, ADDR& ZeroCrossings)");
zero_crossing_sub_pix= dll.api("zero_crossing_sub_pix","int(ADDR Image, ADDR& ZeroCrossings)");
T_dual_threshold= dll.api("T_dual_threshold","int(ADDR Image, ADDR& RegionCrossings, struct MinSize, struct MinGray, struct Threshold)");
dual_threshold= dll.api("dual_threshold","int(ADDR Image, ADDR& RegionCrossings, int MinSize, double MinGray, double Threshold)");
T_expand_line= dll.api("T_expand_line","int(ADDR Image, ADDR& RegionExpand, struct Coordinate, struct ExpandType, struct RowColumn, struct Threshold)");
expand_line= dll.api("expand_line","int(ADDR Image, ADDR& RegionExpand, int Coordinate, string ExpandType, string RowColumn, double Threshold)");
T_local_min= dll.api("T_local_min","int(ADDR Image, ADDR& LocalMinima)");
local_min= dll.api("local_min","int(ADDR Image, ADDR& LocalMinima)");
T_lowlands= dll.api("T_lowlands","int(ADDR Image, ADDR& Lowlands)");
lowlands= dll.api("lowlands","int(ADDR Image, ADDR& Lowlands)");
T_lowlands_center= dll.api("T_lowlands_center","int(ADDR Image, ADDR& Lowlands)");
lowlands_center= dll.api("lowlands_center","int(ADDR Image, ADDR& Lowlands)");
T_local_max= dll.api("T_local_max","int(ADDR Image, ADDR& LocalMaxima)");
local_max= dll.api("local_max","int(ADDR Image, ADDR& LocalMaxima)");
T_plateaus= dll.api("T_plateaus","int(ADDR Image, ADDR& Plateaus)");
plateaus= dll.api("plateaus","int(ADDR Image, ADDR& Plateaus)");
T_plateaus_center= dll.api("T_plateaus_center","int(ADDR Image, ADDR& Plateaus)");
plateaus_center= dll.api("plateaus_center","int(ADDR Image, ADDR& Plateaus)");
T_histo_to_thresh= dll.api("T_histo_to_thresh","int(struct Histogramm, struct Sigma, struct& MinThresh, struct& MaxThresh)");
T_auto_threshold= dll.api("T_auto_threshold","int(ADDR Image, ADDR& Regions, struct Sigma)");
auto_threshold= dll.api("auto_threshold","int(ADDR Image, ADDR& Regions, double Sigma)");
T_bin_threshold= dll.api("T_bin_threshold","int(ADDR Image, ADDR& Region)");
bin_threshold= dll.api("bin_threshold","int(ADDR Image, ADDR& Region)");
T_fast_threshold= dll.api("T_fast_threshold","int(ADDR Image, ADDR& Region, struct MinGray, struct MaxGray, struct MinSize)");
fast_threshold= dll.api("fast_threshold","int(ADDR Image, ADDR& Region, double MinGray, double MaxGray, int MinSize)");
T_polar_trans_region_inv= dll.api("T_polar_trans_region_inv","int(ADDR PolarRegion, ADDR& XYTransRegion, struct Row, struct Column, struct AngleStart, struct AngleEnd, struct RadiusStart, struct RadiusEnd, struct WidthIn, struct HeightIn, struct Width, struct Height, struct Interpolation)");
polar_trans_region_inv= dll.api("polar_trans_region_inv","int(ADDR PolarRegion, ADDR& XYTransRegion, double Row, double Column, double AngleStart, double AngleEnd, double RadiusStart, double RadiusEnd, int WidthIn, int HeightIn, int Width, int Height, string Interpolation)");
T_polar_trans_region= dll.api("T_polar_trans_region","int(ADDR Region, ADDR& PolarTransRegion, struct Row, struct Column, struct AngleStart, struct AngleEnd, struct RadiusStart, struct RadiusEnd, struct Width, struct Height, struct Interpolation)");
polar_trans_region= dll.api("polar_trans_region","int(ADDR Region, ADDR& PolarTransRegion, double Row, double Column, double AngleStart, double AngleEnd, double RadiusStart, double RadiusEnd, int Width, int Height, string Interpolation)");
T_merge_regions_line_scan= dll.api("T_merge_regions_line_scan","int(ADDR CurrRegions, ADDR PrevRegions, ADDR& CurrMergedRegions, ADDR& PrevMergedRegions, struct ImageHeight, struct MergeBorder, struct MaxImagesRegion)");
merge_regions_line_scan= dll.api("merge_regions_line_scan","int(ADDR CurrRegions, ADDR PrevRegions, ADDR& CurrMergedRegions, ADDR& PrevMergedRegions, int ImageHeight, string MergeBorder, int MaxImagesRegion)");
T_partition_rectangle= dll.api("T_partition_rectangle","int(ADDR Region, ADDR& Partitioned, struct Width, struct Height)");
partition_rectangle= dll.api("partition_rectangle","int(ADDR Region, ADDR& Partitioned, double Width, double Height)");
T_partition_dynamic= dll.api("T_partition_dynamic","int(ADDR Region, ADDR& Partitioned, struct Distance, struct Percent)");
partition_dynamic= dll.api("partition_dynamic","int(ADDR Region, ADDR& Partitioned, double Distance, double Percent)");
T_region_to_label= dll.api("T_region_to_label","int(ADDR Region, ADDR& ImageLabel, struct Type, struct Width, struct Height)");
region_to_label= dll.api("region_to_label","int(ADDR Region, ADDR& ImageLabel, string Type, int Width, int Height)");
T_region_to_bin= dll.api("T_region_to_bin","int(ADDR Region, ADDR& BinImage, struct ForegroundGray, struct BackgroundGray, struct Width, struct Height)");
region_to_bin= dll.api("region_to_bin","int(ADDR Region, ADDR& BinImage, int ForegroundGray, int BackgroundGray, int Width, int Height)");
T_union2= dll.api("T_union2","int(ADDR Region1, ADDR Region2, ADDR& RegionUnion)");
union2= dll.api("union2","int(ADDR Region1, ADDR Region2, ADDR& RegionUnion)");
T_union1= dll.api("T_union1","int(ADDR Region, ADDR& RegionUnion)");
union1= dll.api("union1","int(ADDR Region, ADDR& RegionUnion)");
T_closest_point_transform= dll.api("T_closest_point_transform","int(ADDR Region, ADDR& Distances, ADDR& ClosestPoints, struct Metric, struct Foreground, struct ClosestPointMode, struct Width, struct Height)");
closest_point_transform= dll.api("closest_point_transform","int(ADDR Region, ADDR& Distances, ADDR& ClosestPoints, string Metric, string Foreground, string ClosestPointMode, int Width, int Height)");
T_distance_transform= dll.api("T_distance_transform","int(ADDR Region, ADDR& DistanceImage, struct Metric, struct Foreground, struct Width, struct Height)");
distance_transform= dll.api("distance_transform","int(ADDR Region, ADDR& DistanceImage, string Metric, string Foreground, int Width, int Height)");
T_skeleton= dll.api("T_skeleton","int(ADDR Region, ADDR& Skeleton)");
skeleton= dll.api("skeleton","int(ADDR Region, ADDR& Skeleton)");
T_projective_trans_region= dll.api("T_projective_trans_region","int(ADDR Regions, ADDR& TransRegions, struct HomMat2D, struct Interpolation)");
T_affine_trans_region= dll.api("T_affine_trans_region","int(ADDR Region, ADDR& RegionAffineTrans, struct HomMat2D, struct Interpolate)");
T_mirror_region= dll.api("T_mirror_region","int(ADDR Region, ADDR& RegionMirror, struct Mode, struct WidthHeight)");
mirror_region= dll.api("mirror_region","int(ADDR Region, ADDR& RegionMirror, string Mode, int WidthHeight)");
T_zoom_region= dll.api("T_zoom_region","int(ADDR Region, ADDR& RegionZoom, struct ScaleWidth, struct ScaleHeight)");
zoom_region= dll.api("zoom_region","int(ADDR Region, ADDR& RegionZoom, double ScaleWidth, double ScaleHeight)");
T_move_region= dll.api("T_move_region","int(ADDR Region, ADDR& RegionMoved, struct Row, struct Column)");
move_region= dll.api("move_region","int(ADDR Region, ADDR& RegionMoved, int Row, int Column)");
T_junctions_skeleton= dll.api("T_junctions_skeleton","int(ADDR Region, ADDR& EndPoints, ADDR& JuncPoints)");
junctions_skeleton= dll.api("junctions_skeleton","int(ADDR Region, ADDR& EndPoints, ADDR& JuncPoints)");
T_intersection= dll.api("T_intersection","int(ADDR Region1, ADDR Region2, ADDR& RegionIntersection)");
intersection= dll.api("intersection","int(ADDR Region1, ADDR Region2, ADDR& RegionIntersection)");
T_interjacent= dll.api("T_interjacent","int(ADDR Region, ADDR& RegionInterjacent, struct Mode)");
interjacent= dll.api("interjacent","int(ADDR Region, ADDR& RegionInterjacent, string Mode)");
T_fill_up= dll.api("T_fill_up","int(ADDR Region, ADDR& RegionFillUp)");
fill_up= dll.api("fill_up","int(ADDR Region, ADDR& RegionFillUp)");
T_fill_up_shape= dll.api("T_fill_up_shape","int(ADDR Region, ADDR& RegionFillUp, struct Feature, struct Min, struct Max)");
fill_up_shape= dll.api("fill_up_shape","int(ADDR Region, ADDR& RegionFillUp, string Feature, double Min, double Max)");
T_expand_region= dll.api("T_expand_region","int(ADDR Regions, ADDR ForbiddenArea, ADDR& RegionExpanded, struct Iterations, struct Mode)");
expand_region= dll.api("expand_region","int(ADDR Regions, ADDR ForbiddenArea, ADDR& RegionExpanded, int Iterations, string Mode)");
T_clip_region_rel= dll.api("T_clip_region_rel","int(ADDR Region, ADDR& RegionClipped, struct Top, struct Bottom, struct Left, struct Right)");
clip_region_rel= dll.api("clip_region_rel","int(ADDR Region, ADDR& RegionClipped, int Top, int Bottom, int Left, int Right)");
T_clip_region= dll.api("T_clip_region","int(ADDR Region, ADDR& RegionClipped, struct Row1, struct Column1, struct Row2, struct Column2)");
clip_region= dll.api("clip_region","int(ADDR Region, ADDR& RegionClipped, int Row1, int Column1, int Row2, int Column2)");
T_rank_region= dll.api("T_rank_region","int(ADDR Region, ADDR& RegionCount, struct Width, struct Height, struct Number)");
rank_region= dll.api("rank_region","int(ADDR Region, ADDR& RegionCount, int Width, int Height, int Number)");
T_connection= dll.api("T_connection","int(ADDR Region, ADDR& ConnectedRegions)");
connection= dll.api("connection","int(ADDR Region, ADDR& ConnectedRegions)");
T_symm_difference= dll.api("T_symm_difference","int(ADDR Region1, ADDR Region2, ADDR& RegionDifference)");
symm_difference= dll.api("symm_difference","int(ADDR Region1, ADDR Region2, ADDR& RegionDifference)");
T_difference= dll.api("T_difference","int(ADDR Region, ADDR Sub, ADDR& RegionDifference)");
difference= dll.api("difference","int(ADDR Region, ADDR Sub, ADDR& RegionDifference)");
T_complement= dll.api("T_complement","int(ADDR Region, ADDR& RegionComplement)");
complement= dll.api("complement","int(ADDR Region, ADDR& RegionComplement)");
T_background_seg= dll.api("T_background_seg","int(ADDR Foreground, ADDR& BackgroundRegions)");
background_seg= dll.api("background_seg","int(ADDR Foreground, ADDR& BackgroundRegions)");
T_hamming_change_region= dll.api("T_hamming_change_region","int(ADDR InputRegion, ADDR& OutputRegion, struct Width, struct Height, struct Distance)");
hamming_change_region= dll.api("hamming_change_region","int(ADDR InputRegion, ADDR& OutputRegion, int Width, int Height, int Distance)");
T_remove_noise_region= dll.api("T_remove_noise_region","int(ADDR InputRegion, ADDR& OutputRegion, struct Type)");
remove_noise_region= dll.api("remove_noise_region","int(ADDR InputRegion, ADDR& OutputRegion, string Type)");
T_shape_trans= dll.api("T_shape_trans","int(ADDR Region, ADDR& RegionTrans, struct Type)");
shape_trans= dll.api("shape_trans","int(ADDR Region, ADDR& RegionTrans, string Type)");
T_expand_gray= dll.api("T_expand_gray","int(ADDR Regions, ADDR Image, ADDR ForbiddenArea, ADDR& RegionExpand, struct Iterations, struct Mode, struct Threshold)");
expand_gray= dll.api("expand_gray","int(ADDR Regions, ADDR Image, ADDR ForbiddenArea, ADDR& RegionExpand, string Iterations, string Mode, int Threshold)");
T_expand_gray_ref= dll.api("T_expand_gray_ref","int(ADDR Regions, ADDR Image, ADDR ForbiddenArea, ADDR& RegionExpand, struct Iterations, struct Mode, struct RefGray, struct Threshold)");
expand_gray_ref= dll.api("expand_gray_ref","int(ADDR Regions, ADDR Image, ADDR ForbiddenArea, ADDR& RegionExpand, string Iterations, string Mode, int RefGray, int Threshold)");
T_split_skeleton_lines= dll.api("T_split_skeleton_lines","int(ADDR SkeletonRegion, struct MaxDistance, struct& BeginRow, struct& BeginCol, struct& EndRow, struct& EndCol)");
T_split_skeleton_region= dll.api("T_split_skeleton_region","int(ADDR SkeletonRegion, ADDR& RegionLines, struct MaxDistance)");
split_skeleton_region= dll.api("split_skeleton_region","int(ADDR SkeletonRegion, ADDR& RegionLines, int MaxDistance)");
T_gen_region_histo= dll.api("T_gen_region_histo","int(ADDR& Region, struct Histogram, struct Row, struct Column, struct Scale)");
T_eliminate_runs= dll.api("T_eliminate_runs","int(ADDR Region, ADDR& RegionClipped, struct ElimShorter, struct ElimLonger)");
eliminate_runs= dll.api("eliminate_runs","int(ADDR Region, ADDR& RegionClipped, int ElimShorter, int ElimLonger)");
T_surface_normals_object_model_3d= dll.api("T_surface_normals_object_model_3d","int(struct ObjectModel3D, struct Method, struct GenParamName, struct GenParamValue, struct& ObjectModel3DNormals)");
T_smooth_object_model_3d= dll.api("T_smooth_object_model_3d","int(struct ObjectModel3D, struct Method, struct GenParamName, struct GenParamValue, struct& SmoothObjectModel3D)");
T_triangulate_object_model_3d= dll.api("T_triangulate_object_model_3d","int(struct ObjectModel3D, struct Method, struct GenParamName, struct GenParamValue, struct& TriangulatedObjectModel3D, struct& Information)");
T_clear_all_stereo_models= dll.api("T_clear_all_stereo_models","int(void)");
clear_all_stereo_models= dll.api("clear_all_stereo_models","int(void)");
T_clear_stereo_model= dll.api("T_clear_stereo_model","int(struct StereoModelID)");
clear_stereo_model= dll.api("clear_stereo_model","int(int StereoModelID)");
T_reconstruct_points_stereo= dll.api("T_reconstruct_points_stereo","int(struct StereoModelID, struct Row, struct Column, struct CovIP, struct CameraIdx, struct PointIdx, struct& X, struct& Y, struct& Z, struct& CovWP, struct& PointIdxOut)");
T_reconstruct_surface_stereo= dll.api("T_reconstruct_surface_stereo","int(ADDR Images, struct StereoModelID, struct& ObjectModel3D)");
reconstruct_surface_stereo= dll.api("reconstruct_surface_stereo","int(ADDR Images, int StereoModelID, int& ObjectModel3D)");
T_get_stereo_model_object= dll.api("T_get_stereo_model_object","int(ADDR& Object, struct StereoModelID, struct PairIndex, struct ObjectName)");
get_stereo_model_object= dll.api("get_stereo_model_object","int(ADDR& Object, int StereoModelID, int PairIndex, string ObjectName)");
T_get_stereo_model_image_pairs= dll.api("T_get_stereo_model_image_pairs","int(struct StereoModelID, struct& From, struct& To)");
T_set_stereo_model_image_pairs= dll.api("T_set_stereo_model_image_pairs","int(struct StereoModelID, struct From, struct To)");
T_get_stereo_model_param= dll.api("T_get_stereo_model_param","int(struct StereoModelID, struct GenParamName, struct& GenParamValue)");
T_set_stereo_model_param= dll.api("T_set_stereo_model_param","int(struct StereoModelID, struct GenParamName, struct GenParamValue)");
T_create_stereo_model= dll.api("T_create_stereo_model","int(struct CameraSetupModelID, struct Method, struct GenParamName, struct GenParamValue, struct& StereoModelID)");
T_get_message_queue_param= dll.api("T_get_message_queue_param","int(struct QueueHandle, struct GenParamName, struct& GenParamValue)");
get_message_queue_param= dll.api("get_message_queue_param","int(int QueueHandle, string GenParamName, string& GenParamValue)");
T_set_message_queue_param= dll.api("T_set_message_queue_param","int(struct QueueHandle, struct GenParamName, struct GenParamValue)");
set_message_queue_param= dll.api("set_message_queue_param","int(int QueueHandle, string GenParamName, string GenParamValue)");
T_dequeue_message= dll.api("T_dequeue_message","int(struct QueueHandle, struct GenParamName, struct GenParamValue, struct& MessageHandle)");
dequeue_message= dll.api("dequeue_message","int(int QueueHandle, string GenParamName, string GenParamValue, int& MessageHandle)");
T_enqueue_message= dll.api("T_enqueue_message","int(struct QueueHandle, struct MessageHandle, struct GenParamName, struct GenParamValue)");
T_clear_message_queue= dll.api("T_clear_message_queue","int(struct QueueHandle)");
clear_message_queue= dll.api("clear_message_queue","int(int QueueHandle)");
T_create_message_queue= dll.api("T_create_message_queue","int(struct& QueueHandle)");
create_message_queue= dll.api("create_message_queue","int(int& QueueHandle)");
T_get_message_param= dll.api("T_get_message_param","int(struct MessageHandle, struct GenParamName, struct Key, struct& GenParamValue)");
get_message_param= dll.api("get_message_param","int(int MessageHandle, string GenParamName, string Key, string& GenParamValue)");
T_set_message_param= dll.api("T_set_message_param","int(struct MessageHandle, struct GenParamName, struct Key, struct GenParamValue)");
set_message_param= dll.api("set_message_param","int(int MessageHandle, string GenParamName, string Key, string GenParamValue)");
T_get_message_obj= dll.api("T_get_message_obj","int(ADDR& ObjectData, struct MessageHandle, struct Key)");
get_message_obj= dll.api("get_message_obj","int(ADDR& ObjectData, int MessageHandle, string Key)");
T_set_message_obj= dll.api("T_set_message_obj","int(ADDR ObjectData, struct MessageHandle, struct Key)");
set_message_obj= dll.api("set_message_obj","int(ADDR ObjectData, int MessageHandle, string Key)");
T_get_message_tuple= dll.api("T_get_message_tuple","int(struct MessageHandle, struct Key, struct& TupleData)");
get_message_tuple= dll.api("get_message_tuple","int(int MessageHandle, string Key, string& TupleData)");
T_set_message_tuple= dll.api("T_set_message_tuple","int(struct MessageHandle, struct Key, struct TupleData)");
T_clear_message= dll.api("T_clear_message","int(struct MessageHandle)");
clear_message= dll.api("clear_message","int(int MessageHandle)");
T_create_message= dll.api("T_create_message","int(struct& MessageHandle)");
create_message= dll.api("create_message","int(int& MessageHandle)");
T_clear_all_conditions= dll.api("T_clear_all_conditions","int(void)");
clear_all_conditions= dll.api("clear_all_conditions","int(void)");
T_clear_condition= dll.api("T_clear_condition","int(struct ConditionHandle)");
clear_condition= dll.api("clear_condition","int(int ConditionHandle)");
T_broadcast_condition= dll.api("T_broadcast_condition","int(struct ConditionHandle)");
broadcast_condition= dll.api("broadcast_condition","int(int ConditionHandle)");
T_signal_condition= dll.api("T_signal_condition","int(struct ConditionHandle)");
signal_condition= dll.api("signal_condition","int(int ConditionHandle)");
T_timed_wait_condition= dll.api("T_timed_wait_condition","int(struct ConditionHandle, struct MutexHandle, struct Timeout)");
timed_wait_condition= dll.api("timed_wait_condition","int(int ConditionHandle, int MutexHandle, int Timeout)");
T_wait_condition= dll.api("T_wait_condition","int(struct ConditionHandle, struct MutexHandle)");
wait_condition= dll.api("wait_condition","int(int ConditionHandle, int MutexHandle)");
T_create_condition= dll.api("T_create_condition","int(struct AttribName, struct AttribValue, struct& ConditionHandle)");
create_condition= dll.api("create_condition","int(string AttribName, string AttribValue, int& ConditionHandle)");
T_clear_all_barriers= dll.api("T_clear_all_barriers","int(void)");
clear_all_barriers= dll.api("clear_all_barriers","int(void)");
T_clear_barrier= dll.api("T_clear_barrier","int(struct BarrierHandle)");
clear_barrier= dll.api("clear_barrier","int(int BarrierHandle)");
T_wait_barrier= dll.api("T_wait_barrier","int(struct BarrierHandle)");
wait_barrier= dll.api("wait_barrier","int(int BarrierHandle)");
T_create_barrier= dll.api("T_create_barrier","int(struct AttribName, struct AttribValue, struct TeamSize, struct& BarrierHandle)");
create_barrier= dll.api("create_barrier","int(string AttribName, string AttribValue, int TeamSize, int& BarrierHandle)");
T_clear_all_events= dll.api("T_clear_all_events","int(void)");
clear_all_events= dll.api("clear_all_events","int(void)");
T_clear_event= dll.api("T_clear_event","int(struct EventHandle)");
clear_event= dll.api("clear_event","int(int EventHandle)");
T_signal_event= dll.api("T_signal_event","int(struct EventHandle)");
signal_event= dll.api("signal_event","int(int EventHandle)");
T_try_wait_event= dll.api("T_try_wait_event","int(struct EventHandle, struct& Busy)");
try_wait_event= dll.api("try_wait_event","int(int EventHandle, int& Busy)");
T_wait_event= dll.api("T_wait_event","int(struct EventHandle)");
wait_event= dll.api("wait_event","int(int EventHandle)");
T_create_event= dll.api("T_create_event","int(struct AttribName, struct AttribValue, struct& EventHandle)");
create_event= dll.api("create_event","int(string AttribName, string AttribValue, int& EventHandle)");
T_clear_all_mutexes= dll.api("T_clear_all_mutexes","int(void)");
clear_all_mutexes= dll.api("clear_all_mutexes","int(void)");
T_clear_mutex= dll.api("T_clear_mutex","int(struct MutexHandle)");
clear_mutex= dll.api("clear_mutex","int(int MutexHandle)");
T_unlock_mutex= dll.api("T_unlock_mutex","int(struct MutexHandle)");
unlock_mutex= dll.api("unlock_mutex","int(int MutexHandle)");
T_try_lock_mutex= dll.api("T_try_lock_mutex","int(struct MutexHandle, struct& Busy)");
try_lock_mutex= dll.api("try_lock_mutex","int(int MutexHandle, int& Busy)");
T_lock_mutex= dll.api("T_lock_mutex","int(struct MutexHandle)");
lock_mutex= dll.api("lock_mutex","int(int MutexHandle)");
T_create_mutex= dll.api("T_create_mutex","int(struct AttribName, struct AttribValue, struct& MutexHandle)");
create_mutex= dll.api("create_mutex","int(string AttribName, string AttribValue, int& MutexHandle)");
T_get_threading_attrib= dll.api("T_get_threading_attrib","int(struct ThreadingHandle, struct& ThreadingClass, struct& AttribName, struct& AttribValue)");
T_set_aop_info= dll.api("T_set_aop_info","int(struct OperatorName, struct IndexName, struct IndexValue, struct InfoName, struct InfoValue)");
set_aop_info= dll.api("set_aop_info","int(string OperatorName, string IndexName, string IndexValue, string InfoName, int InfoValue)");
T_get_aop_info= dll.api("T_get_aop_info","int(struct OperatorName, struct IndexName, struct IndexValue, struct InfoName, struct& InfoValue)");
T_query_aop_info= dll.api("T_query_aop_info","int(struct OperatorName, struct IndexName, struct IndexValue, struct& Name, struct& Value)");
T_optimize_aop= dll.api("T_optimize_aop","int(struct OperatorName, struct IconicType, struct FileName, struct GenParamName, struct GenParamValue)");
T_write_aop_knowledge= dll.api("T_write_aop_knowledge","int(struct FileName, struct GenParamName, struct GenParamValue)");
write_aop_knowledge= dll.api("write_aop_knowledge","int(string FileName, string GenParamName, string GenParamValue)");
T_read_aop_knowledge= dll.api("T_read_aop_knowledge","int(struct FileName, struct GenParamName, struct GenParamValue, struct& Attributes, struct& OperatorNames)");
T_test_access= dll.api("T_test_access","int(ADDR Object, ADDR& Dummy, struct NumReadChord, struct NumCopyObj, struct Write_chord)");
test_access= dll.api("test_access","int(ADDR Object, ADDR& Dummy, int NumReadChord, int NumCopyObj, int Write_chord)");
T_obj_diff= dll.api("T_obj_diff","int(ADDR Objects, ADDR ObjectsSub, ADDR& ObjectsDiff)");
obj_diff= dll.api("obj_diff","int(ADDR Objects, ADDR ObjectsSub, ADDR& ObjectsDiff)");
T_set_grayval= dll.api("T_set_grayval","int(ADDR Image, struct Row, struct Column, struct Grayval)");
set_grayval= dll.api("set_grayval","int(ADDR Image, int Row, int Column, double Grayval)");
T_paint_xld= dll.api("T_paint_xld","int(ADDR XLD, ADDR Image, ADDR& ImageResult, struct Grayval)");
paint_xld= dll.api("paint_xld","int(ADDR XLD, ADDR Image, ADDR& ImageResult, double Grayval)");
T_paint_region= dll.api("T_paint_region","int(ADDR Region, ADDR Image, ADDR& ImageResult, struct Grayval, struct Type)");
paint_region= dll.api("paint_region","int(ADDR Region, ADDR Image, ADDR& ImageResult, double Grayval, string Type)");
T_overpaint_region= dll.api("T_overpaint_region","int(ADDR Image, ADDR Region, struct Grayval, struct Type)");
overpaint_region= dll.api("overpaint_region","int(ADDR Image, ADDR Region, double Grayval, string Type)");
T_gen_image_proto= dll.api("T_gen_image_proto","int(ADDR Image, ADDR& ImageCleared, struct Grayval)");
gen_image_proto= dll.api("gen_image_proto","int(ADDR Image, ADDR& ImageCleared, double Grayval)");
T_paint_gray= dll.api("T_paint_gray","int(ADDR ImageSource, ADDR ImageDestination, ADDR& MixedImage)");
paint_gray= dll.api("paint_gray","int(ADDR ImageSource, ADDR ImageDestination, ADDR& MixedImage)");
T_overpaint_gray= dll.api("T_overpaint_gray","int(ADDR ImageDestination, ADDR ImageSource)");
overpaint_gray= dll.api("overpaint_gray","int(ADDR ImageDestination, ADDR ImageSource)");
T_integer_to_obj= dll.api("T_integer_to_obj","int(ADDR& Objects, struct SurrogateTuple)");
integer_to_obj= dll.api("integer_to_obj","int(ADDR& Objects, int SurrogateTuple)");
T_obj_to_integer= dll.api("T_obj_to_integer","int(ADDR Objects, struct Index, struct Number, struct& SurrogateTuple)");
obj_to_integer= dll.api("obj_to_integer","int(ADDR Objects, int Index, int Number, int& SurrogateTuple)");
T_copy_obj= dll.api("T_copy_obj","int(ADDR Objects, ADDR& ObjectsSelected, struct Index, struct NumObj)");
copy_obj= dll.api("copy_obj","int(ADDR Objects, ADDR& ObjectsSelected, int Index, int NumObj)");
T_concat_obj= dll.api("T_concat_obj","int(ADDR Objects1, ADDR Objects2, ADDR& ObjectsConcat)");
concat_obj= dll.api("concat_obj","int(ADDR Objects1, ADDR Objects2, ADDR& ObjectsConcat)");
T_clear_obj= dll.api("T_clear_obj","int(ADDR Objects)");
clear_obj= dll.api("clear_obj","int(ADDR Objects)");
T_copy_image= dll.api("T_copy_image","int(ADDR Image, ADDR& DupImage)");
copy_image= dll.api("copy_image","int(ADDR Image, ADDR& DupImage)");
T_select_obj= dll.api("T_select_obj","int(ADDR Objects, ADDR& ObjectSelected, struct Index)");
select_obj= dll.api("select_obj","int(ADDR Objects, ADDR& ObjectSelected, int Index)");
T_compare_obj= dll.api("T_compare_obj","int(ADDR Objects1, ADDR Objects2, struct Epsilon, struct& IsEqual)");
compare_obj= dll.api("compare_obj","int(ADDR Objects1, ADDR Objects2, double Epsilon, int& IsEqual)");
T_test_subset_region= dll.api("T_test_subset_region","int(ADDR Region1, ADDR Region2, struct& IsSubset)");
test_subset_region= dll.api("test_subset_region","int(ADDR Region1, ADDR Region2, int& IsSubset)");
T_test_equal_region= dll.api("T_test_equal_region","int(ADDR Regions1, ADDR Regions2, struct& IsEqual)");
test_equal_region= dll.api("test_equal_region","int(ADDR Regions1, ADDR Regions2, int& IsEqual)");
T_test_equal_obj= dll.api("T_test_equal_obj","int(ADDR Objects1, ADDR Objects2, struct& IsEqual)");
test_equal_obj= dll.api("test_equal_obj","int(ADDR Objects1, ADDR Objects2, int& IsEqual)");
T_count_obj= dll.api("T_count_obj","int(ADDR Objects, struct& Number)");
count_obj= dll.api("count_obj","int(ADDR Objects, int& Number)");
T_get_channel_info= dll.api("T_get_channel_info","int(ADDR Object, struct Request, struct Channel, struct& Information)");
get_channel_info= dll.api("get_channel_info","int(ADDR Object, string Request, int Channel, string& Information)");
T_get_obj_class= dll.api("T_get_obj_class","int(ADDR Object, struct& Class)");
get_obj_class= dll.api("get_obj_class","int(ADDR Object, string& Class)");
T_gen_image_interleaved= dll.api("T_gen_image_interleaved","int(ADDR& ImageRGB, struct PixelPointer, struct ColorFormat, struct OriginalWidth, struct OriginalHeight, struct Alignment, struct Type, struct ImageWidth, struct ImageHeight, struct StartRow, struct StartColumn, struct BitsPerChannel, struct BitShift)");
gen_image_interleaved= dll.api("gen_image_interleaved","int(ADDR& ImageRGB, int PixelPointer, string ColorFormat, int OriginalWidth, int OriginalHeight, int Alignment, string Type, int ImageWidth, int ImageHeight, int StartRow, int StartColumn, int BitsPerChannel, int BitShift)");
T_gen_region_polygon_xld= dll.api("T_gen_region_polygon_xld","int(ADDR Polygon, ADDR& Region, struct Mode)");
gen_region_polygon_xld= dll.api("gen_region_polygon_xld","int(ADDR Polygon, ADDR& Region, string Mode)");
T_gen_region_contour_xld= dll.api("T_gen_region_contour_xld","int(ADDR Contour, ADDR& Region, struct Mode)");
gen_region_contour_xld= dll.api("gen_region_contour_xld","int(ADDR Contour, ADDR& Region, string Mode)");
T_gen_region_polygon_filled= dll.api("T_gen_region_polygon_filled","int(ADDR& Region, struct Rows, struct Columns)");
T_gen_region_polygon= dll.api("T_gen_region_polygon","int(ADDR& Region, struct Rows, struct Columns)");
T_gen_region_points= dll.api("T_gen_region_points","int(ADDR& Region, struct Rows, struct Columns)");
gen_region_points= dll.api("gen_region_points","int(ADDR& Region, int Rows, int Columns)");
T_gen_region_runs= dll.api("T_gen_region_runs","int(ADDR& Region, struct Row, struct ColumnBegin, struct ColumnEnd)");
gen_region_runs= dll.api("gen_region_runs","int(ADDR& Region, int Row, int ColumnBegin, int ColumnEnd)");
T_gen_rectangle2= dll.api("T_gen_rectangle2","int(ADDR& Rectangle, struct Row, struct Column, struct Phi, struct Length1, struct Length2)");
gen_rectangle2= dll.api("gen_rectangle2","int(ADDR& Rectangle, double Row, double Column, double Phi, double Length1, double Length2)");
T_gen_rectangle1= dll.api("T_gen_rectangle1","int(ADDR& Rectangle, struct Row1, struct Column1, struct Row2, struct Column2)");
gen_rectangle1= dll.api("gen_rectangle1","int(ADDR& Rectangle, double Row1, double Column1, double Row2, double Column2)");
T_gen_random_region= dll.api("T_gen_random_region","int(ADDR& RegionRandom, struct Width, struct Height)");
gen_random_region= dll.api("gen_random_region","int(ADDR& RegionRandom, int Width, int Height)");
T_gen_image3= dll.api("T_gen_image3","int(ADDR& ImageRGB, struct Type, struct Width, struct Height, struct PixelPointerRed, struct PixelPointerGreen, struct PixelPointerBlue)");
gen_image3= dll.api("gen_image3","int(ADDR& ImageRGB, string Type, int Width, int Height, int PixelPointerRed, int PixelPointerGreen, int PixelPointerBlue)");
T_gen_image1= dll.api("T_gen_image1","int(ADDR& Image, struct Type, struct Width, struct Height, struct PixelPointer)");
gen_image1= dll.api("gen_image1","int(ADDR& Image, string Type, int Width, int Height, int PixelPointer)");
T_gen_image_const= dll.api("T_gen_image_const","int(ADDR& Image, struct Type, struct Width, struct Height)");
gen_image_const= dll.api("gen_image_const","int(ADDR& Image, string Type, int Width, int Height)");
T_gen_ellipse_sector= dll.api("T_gen_ellipse_sector","int(ADDR& EllipseSector, struct Row, struct Column, struct Phi, struct Radius1, struct Radius2, struct StartAngle, struct EndAngle)");
gen_ellipse_sector= dll.api("gen_ellipse_sector","int(ADDR& EllipseSector, double Row, double Column, double Phi, double Radius1, double Radius2, double StartAngle, double EndAngle)");
T_gen_ellipse= dll.api("T_gen_ellipse","int(ADDR& Ellipse, struct Row, struct Column, struct Phi, struct Radius1, struct Radius2)");
gen_ellipse= dll.api("gen_ellipse","int(ADDR& Ellipse, double Row, double Column, double Phi, double Radius1, double Radius2)");
T_gen_circle_sector= dll.api("T_gen_circle_sector","int(ADDR& CircleSector, struct Row, struct Column, struct Radius, struct StartAngle, struct EndAngle)");
gen_circle_sector= dll.api("gen_circle_sector","int(ADDR& CircleSector, double Row, double Column, double Radius, double StartAngle, double EndAngle)");
T_gen_circle= dll.api("T_gen_circle","int(ADDR& Circle, struct Row, struct Column, struct Radius)");
gen_circle= dll.api("gen_circle","int(ADDR& Circle, struct Row, struct Column, struct Radius)");
T_gen_checker_region= dll.api("T_gen_checker_region","int(ADDR& RegionChecker, struct WidthRegion, struct HeightRegion, struct WidthPattern, struct HeightPattern)");
gen_checker_region= dll.api("gen_checker_region","int(ADDR& RegionChecker, int WidthRegion, int HeightRegion, int WidthPattern, int HeightPattern)");
T_gen_grid_region= dll.api("T_gen_grid_region","int(ADDR& RegionGrid, struct RowSteps, struct ColumnSteps, struct Type, struct Width, struct Height)");
gen_grid_region= dll.api("gen_grid_region","int(ADDR& RegionGrid, int RowSteps, int ColumnSteps, string Type, int Width, int Height)");
T_gen_random_regions= dll.api("T_gen_random_regions","int(ADDR& Regions, struct Type, struct WidthMin, struct WidthMax, struct HeightMin, struct HeightMax, struct PhiMin, struct PhiMax, struct NumRegions, struct Width, struct Height)");
gen_random_regions= dll.api("gen_random_regions","int(ADDR& Regions, string Type, double WidthMin, double WidthMax, double HeightMin, double HeightMax, double PhiMin, double PhiMax, int NumRegions, int Width, int Height)");
T_gen_region_hline= dll.api("T_gen_region_hline","int(ADDR& Regions, struct Orientation, struct Distance)");
gen_region_hline= dll.api("gen_region_hline","int(ADDR& Regions, double Orientation, double Distance)");
T_gen_region_line= dll.api("T_gen_region_line","int(ADDR& RegionLines, struct BeginRow, struct BeginCol, struct EndRow, struct EndCol)");
gen_region_line= dll.api("gen_region_line","int(ADDR& RegionLines, int BeginRow, int BeginCol, int EndRow, int EndCol)");
T_gen_empty_obj= dll.api("T_gen_empty_obj","int(ADDR& EmptyObject)");
gen_empty_obj= dll.api("gen_empty_obj","int(ADDR& EmptyObject)");
T_gen_empty_region= dll.api("T_gen_empty_region","int(ADDR& EmptyRegion)");
gen_empty_region= dll.api("gen_empty_region","int(ADDR& EmptyRegion)");
T_gen_image_gray_ramp= dll.api("T_gen_image_gray_ramp","int(ADDR& ImageGrayRamp, struct Alpha, struct Beta, struct Mean, struct Row, struct Column, struct Width, struct Height)");
gen_image_gray_ramp= dll.api("gen_image_gray_ramp","int(ADDR& ImageGrayRamp, double Alpha, double Beta, double Mean, int Row, int Column, int Width, int Height)");
T_gen_image3_extern= dll.api("T_gen_image3_extern","int(ADDR& Image, struct Type, struct Width, struct Height, struct PointerRed, struct PointerGreen, struct PointerBlue, struct ClearProc)");
gen_image3_extern= dll.api("gen_image3_extern","int(ADDR& Image, string Type, int Width, int Height, int PointerRed, int PointerGreen, int PointerBlue, int ClearProc)");
T_gen_image1_extern= dll.api("T_gen_image1_extern","int(ADDR& Image, struct Type, struct Width, struct Height, struct PixelPointer, struct ClearProc)");
gen_image1_extern= dll.api("gen_image1_extern","int(ADDR& Image, string Type, int Width, int Height, int PixelPointer, int ClearProc)");
T_gen_image1_rect= dll.api("T_gen_image1_rect","int(ADDR& Image, struct PixelPointer, struct Width, struct Height, struct VerticalPitch, struct HorizontalBitPitch, struct BitsPerPixel, struct DoCopy, struct ClearProc)");
gen_image1_rect= dll.api("gen_image1_rect","int(ADDR& Image, int PixelPointer, int Width, int Height, int VerticalPitch, int HorizontalBitPitch, int BitsPerPixel, string DoCopy, int ClearProc)");
T_get_image_pointer1_rect= dll.api("T_get_image_pointer1_rect","int(ADDR Image, struct& PixelPointer, struct& Width, struct& Height, struct& VerticalPitch, struct& HorizontalBitPitch, struct& BitsPerPixel)");
get_image_pointer1_rect= dll.api("get_image_pointer1_rect","int(ADDR Image, int& PixelPointer, int& Width, int& Height, int& VerticalPitch, int& HorizontalBitPitch, int& BitsPerPixel)");
T_get_image_pointer3= dll.api("T_get_image_pointer3","int(ADDR ImageRGB, struct& PointerRed, struct& PointerGreen, struct& PointerBlue, struct& Type, struct& Width, struct& Height)");
get_image_pointer3= dll.api("get_image_pointer3","int(ADDR ImageRGB, int& PointerRed, int& PointerGreen, int& PointerBlue, string& Type, int& Width, int& Height)");
T_get_image_pointer1= dll.api("T_get_image_pointer1","int(ADDR Image, struct& Pointer, struct& Type, struct& Width, struct& Height)");
get_image_pointer1= dll.api("get_image_pointer1","int(ADDR Image, int& Pointer, string& Type, int& Width, int& Height)");
T_get_image_type= dll.api("T_get_image_type","int(ADDR Image, struct& Type)");
get_image_type= dll.api("get_image_type","int(ADDR Image, string& Type)");
T_get_image_size= dll.api("T_get_image_size","int(ADDR Image, struct& Width, struct& Height)");
get_image_size= dll.api("get_image_size","int(ADDR Image, int& Width, int& Height)");
T_get_image_time= dll.api("T_get_image_time","int(ADDR Image, struct& MSecond, struct& Second, struct& Minute, struct& Hour, struct& Day, struct& YDay, struct& Month, struct& Year)");
get_image_time= dll.api("get_image_time","int(ADDR Image, int& MSecond, int& Second, int& Minute, int& Hour, int& Day, int& YDay, int& Month, int& Year)");
T_get_grayval_interpolated= dll.api("T_get_grayval_interpolated","int(ADDR Image, struct Row, struct Column, struct Interpolation, struct& Grayval)");
get_grayval_interpolated= dll.api("get_grayval_interpolated","int(ADDR Image, double Row, double Column, string Interpolation, double& Grayval)");
T_get_grayval= dll.api("T_get_grayval","int(ADDR Image, struct Row, struct Column, struct& Grayval)");
get_grayval= dll.api("get_grayval","int(ADDR Image, int Row, int Column, double& Grayval)");
T_get_region_thickness= dll.api("T_get_region_thickness","int(ADDR Region, struct& Thickness, struct& Histogramm)");
T_get_region_polygon= dll.api("T_get_region_polygon","int(ADDR Region, struct Tolerance, struct& Rows, struct& Columns)");
T_get_region_points= dll.api("T_get_region_points","int(ADDR Region, struct& Rows, struct& Columns)");
T_get_region_contour= dll.api("T_get_region_contour","int(ADDR Region, struct& Rows, struct& Columns)");
T_get_region_runs= dll.api("T_get_region_runs","int(ADDR Region, struct& Row, struct& ColumnBegin, struct& ColumnEnd)");
T_get_region_chain= dll.api("T_get_region_chain","int(ADDR Region, struct& Row, struct& Column, struct& Chain)");
T_get_region_convex= dll.api("T_get_region_convex","int(ADDR Region, struct& Rows, struct& Columns)");
T_do_ocv_simple= dll.api("T_do_ocv_simple","int(ADDR Pattern, struct OCVHandle, struct PatternName, struct AdaptPos, struct AdaptSize, struct AdaptAngle, struct AdaptGray, struct Threshold, struct& Quality)");
do_ocv_simple= dll.api("do_ocv_simple","int(ADDR Pattern, int OCVHandle, string PatternName, string AdaptPos, string AdaptSize, string AdaptAngle, string AdaptGray, double Threshold, double& Quality)");
T_traind_ocv_proj= dll.api("T_traind_ocv_proj","int(ADDR Pattern, struct OCVHandle, struct Name, struct Mode)");
traind_ocv_proj= dll.api("traind_ocv_proj","int(ADDR Pattern, int OCVHandle, string Name, string Mode)");
T_deserialize_ocv= dll.api("T_deserialize_ocv","int(struct SerializedItemHandle, struct& OCVHandle)");
deserialize_ocv= dll.api("deserialize_ocv","int(int SerializedItemHandle, int& OCVHandle)");
T_serialize_ocv= dll.api("T_serialize_ocv","int(struct OCVHandle, struct& SerializedItemHandle)");
serialize_ocv= dll.api("serialize_ocv","int(int OCVHandle, int& SerializedItemHandle)");
T_read_ocv= dll.api("T_read_ocv","int(struct FileName, struct& OCVHandle)");
read_ocv= dll.api("read_ocv","int(string FileName, int& OCVHandle)");
T_write_ocv= dll.api("T_write_ocv","int(struct OCVHandle, struct FileName)");
write_ocv= dll.api("write_ocv","int(int OCVHandle, string FileName)");
T_close_all_ocvs= dll.api("T_close_all_ocvs","int(void)");
close_all_ocvs= dll.api("close_all_ocvs","int(void)");
T_close_ocv= dll.api("T_close_ocv","int(struct OCVHandle)");
close_ocv= dll.api("close_ocv","int(int OCVHandle)");
T_create_ocv_proj= dll.api("T_create_ocv_proj","int(struct PatternNames, struct& OCVHandle)");
create_ocv_proj= dll.api("create_ocv_proj","int(string PatternNames, int& OCVHandle)");
T_do_ocr_word_knn= dll.api("T_do_ocr_word_knn","int(ADDR Character, ADDR Image, struct OCRHandle, struct Expression, struct NumAlternatives, struct NumCorrections, struct& Class, struct& Confidence, struct& Word, struct& Score)");
do_ocr_word_knn= dll.api("do_ocr_word_knn","int(ADDR Character, ADDR Image, int OCRHandle, string Expression, int NumAlternatives, int NumCorrections, string& Class, double& Confidence, string& Word, double& Score)");
T_deserialize_ocr_class_knn= dll.api("T_deserialize_ocr_class_knn","int(struct SerializedItemHandle, struct& OCRHandle)");
deserialize_ocr_class_knn= dll.api("deserialize_ocr_class_knn","int(int SerializedItemHandle, int& OCRHandle)");
T_serialize_ocr_class_knn= dll.api("T_serialize_ocr_class_knn","int(struct OCRHandle, struct& SerializedItemHandle)");
serialize_ocr_class_knn= dll.api("serialize_ocr_class_knn","int(int OCRHandle, int& SerializedItemHandle)");
T_read_ocr_class_knn= dll.api("T_read_ocr_class_knn","int(struct FileName, struct& OCRHandle)");
read_ocr_class_knn= dll.api("read_ocr_class_knn","int(string FileName, int& OCRHandle)");
T_write_ocr_class_knn= dll.api("T_write_ocr_class_knn","int(struct OCRHandle, struct FileName)");
write_ocr_class_knn= dll.api("write_ocr_class_knn","int(int OCRHandle, string FileName)");
T_clear_all_ocr_class_knn= dll.api("T_clear_all_ocr_class_knn","int(void)");
clear_all_ocr_class_knn= dll.api("clear_all_ocr_class_knn","int(void)");
T_clear_ocr_class_knn= dll.api("T_clear_ocr_class_knn","int(struct OCRHandle)");
clear_ocr_class_knn= dll.api("clear_ocr_class_knn","int(int OCRHandle)");
T_create_ocr_class_knn= dll.api("T_create_ocr_class_knn","int(struct WidthCharacter, struct HeightCharacter, struct Interpolation, struct Features, struct Characters, struct GenParamName, struct GenParamValue, struct& OCRHandle)");
T_trainf_ocr_class_knn= dll.api("T_trainf_ocr_class_knn","int(struct OCRHandle, struct TrainingFile, struct GenParamName, struct GenParamValue)");
T_get_features_ocr_class_knn= dll.api("T_get_features_ocr_class_knn","int(ADDR Character, struct OCRHandle, struct Transform, struct& Features)");
T_get_params_ocr_class_knn= dll.api("T_get_params_ocr_class_knn","int(struct OCRHandle, struct& WidthCharacter, struct& HeightCharacter, struct& Interpolation, struct& Features, struct& Characters, struct& Preprocessing, struct& NumTrees)");
T_do_ocr_multi_class_knn= dll.api("T_do_ocr_multi_class_knn","int(ADDR Character, ADDR Image, struct OCRHandle, struct& Class, struct& Confidence)");
do_ocr_multi_class_knn= dll.api("do_ocr_multi_class_knn","int(ADDR Character, ADDR Image, int OCRHandle, string& Class, double& Confidence)");
T_do_ocr_single_class_knn= dll.api("T_do_ocr_single_class_knn","int(ADDR Character, ADDR Image, struct OCRHandle, struct NumClasses, struct NumNeighbors, struct& Class, struct& Confidence)");
T_select_feature_set_trainf_knn= dll.api("T_select_feature_set_trainf_knn","int(struct TrainingFile, struct FeatureList, struct SelectionMethod, struct Width, struct Height, struct GenParamName, struct GenParamValue, struct& OCRHandle, struct& FeatureSet, struct& Score)");
T_select_feature_set_trainf_mlp_protected= dll.api("T_select_feature_set_trainf_mlp_protected","int(struct TrainingFile, struct Password, struct FeatureList, struct SelectionMethod, struct Width, struct Height, struct GenParamName, struct GenParamValue, struct& OCRHandle, struct& FeatureSet, struct& Score)");
T_select_feature_set_trainf_mlp= dll.api("T_select_feature_set_trainf_mlp","int(struct TrainingFile, struct FeatureList, struct SelectionMethod, struct Width, struct Height, struct GenParamName, struct GenParamValue, struct& OCRHandle, struct& FeatureSet, struct& Score)");
T_select_feature_set_trainf_svm_protected= dll.api("T_select_feature_set_trainf_svm_protected","int(struct TrainingFile, struct Password, struct FeatureList, struct SelectionMethod, struct Width, struct Height, struct GenParamName, struct GenParamValue, struct& OCRHandle, struct& FeatureSet, struct& Score)");
T_select_feature_set_trainf_svm= dll.api("T_select_feature_set_trainf_svm","int(struct TrainingFile, struct FeatureList, struct SelectionMethod, struct Width, struct Height, struct GenParamName, struct GenParamValue, struct& OCRHandle, struct& FeatureSet, struct& Score)");
T_clear_all_lexica= dll.api("T_clear_all_lexica","int(void)");
clear_all_lexica= dll.api("clear_all_lexica","int(void)");
T_clear_lexicon= dll.api("T_clear_lexicon","int(struct LexiconHandle)");
clear_lexicon= dll.api("clear_lexicon","int(int LexiconHandle)");
T_suggest_lexicon= dll.api("T_suggest_lexicon","int(struct LexiconHandle, struct Word, struct& Suggestion, struct& NumCorrections)");
suggest_lexicon= dll.api("suggest_lexicon","int(int LexiconHandle, string Word, string& Suggestion, int& NumCorrections)");
T_lookup_lexicon= dll.api("T_lookup_lexicon","int(struct LexiconHandle, struct Word, struct& Found)");
lookup_lexicon= dll.api("lookup_lexicon","int(int LexiconHandle, string Word, int& Found)");
T_inspect_lexicon= dll.api("T_inspect_lexicon","int(struct LexiconHandle, struct& Words)");
inspect_lexicon= dll.api("inspect_lexicon","int(int LexiconHandle, string& Words)");
T_import_lexicon= dll.api("T_import_lexicon","int(struct Name, struct FileName, struct& LexiconHandle)");
import_lexicon= dll.api("import_lexicon","int(string Name, string FileName, int& LexiconHandle)");
T_create_lexicon= dll.api("T_create_lexicon","int(struct Name, struct Words, struct& LexiconHandle)");
T_clear_all_ocr_class_svm= dll.api("T_clear_all_ocr_class_svm","int(void)");
clear_all_ocr_class_svm= dll.api("clear_all_ocr_class_svm","int(void)");
T_clear_ocr_class_svm= dll.api("T_clear_ocr_class_svm","int(struct OCRHandle)");
clear_ocr_class_svm= dll.api("clear_ocr_class_svm","int(int OCRHandle)");
T_deserialize_ocr_class_svm= dll.api("T_deserialize_ocr_class_svm","int(struct SerializedItemHandle, struct& OCRHandle)");
deserialize_ocr_class_svm= dll.api("deserialize_ocr_class_svm","int(int SerializedItemHandle, int& OCRHandle)");
T_serialize_ocr_class_svm= dll.api("T_serialize_ocr_class_svm","int(struct OCRHandle, struct& SerializedItemHandle)");
serialize_ocr_class_svm= dll.api("serialize_ocr_class_svm","int(int OCRHandle, int& SerializedItemHandle)");
T_read_ocr_class_svm= dll.api("T_read_ocr_class_svm","int(struct FileName, struct& OCRHandle)");
read_ocr_class_svm= dll.api("read_ocr_class_svm","int(string FileName, int& OCRHandle)");
T_write_ocr_class_svm= dll.api("T_write_ocr_class_svm","int(struct OCRHandle, struct FileName)");
write_ocr_class_svm= dll.api("write_ocr_class_svm","int(int OCRHandle, string FileName)");
T_get_features_ocr_class_svm= dll.api("T_get_features_ocr_class_svm","int(ADDR Character, struct OCRHandle, struct Transform, struct& Features)");
T_do_ocr_word_svm= dll.api("T_do_ocr_word_svm","int(ADDR Character, ADDR Image, struct OCRHandle, struct Expression, struct NumAlternatives, struct NumCorrections, struct& Class, struct& Word, struct& Score)");
do_ocr_word_svm= dll.api("do_ocr_word_svm","int(ADDR Character, ADDR Image, int OCRHandle, string Expression, int NumAlternatives, int NumCorrections, string& Class, string& Word, double& Score)");
T_do_ocr_multi_class_svm= dll.api("T_do_ocr_multi_class_svm","int(ADDR Character, ADDR Image, struct OCRHandle, struct& Class)");
do_ocr_multi_class_svm= dll.api("do_ocr_multi_class_svm","int(ADDR Character, ADDR Image, int OCRHandle, string& Class)");
T_do_ocr_single_class_svm= dll.api("T_do_ocr_single_class_svm","int(ADDR Character, ADDR Image, struct OCRHandle, struct Num, struct& Class)");
T_reduce_ocr_class_svm= dll.api("T_reduce_ocr_class_svm","int(struct OCRHandle, struct Method, struct MinRemainingSV, struct MaxError, struct& OCRHandleReduced)");
reduce_ocr_class_svm= dll.api("reduce_ocr_class_svm","int(int OCRHandle, string Method, int MinRemainingSV, double MaxError, int& OCRHandleReduced)");
T_trainf_ocr_class_svm_protected= dll.api("T_trainf_ocr_class_svm_protected","int(struct OCRHandle, struct TrainingFile, struct Password, struct Epsilon, struct TrainMode)");
trainf_ocr_class_svm_protected= dll.api("trainf_ocr_class_svm_protected","int(int OCRHandle, string TrainingFile, string Password, double Epsilon, string TrainMode)");
T_trainf_ocr_class_svm= dll.api("T_trainf_ocr_class_svm","int(struct OCRHandle, struct TrainingFile, struct Epsilon, struct TrainMode)");
trainf_ocr_class_svm= dll.api("trainf_ocr_class_svm","int(int OCRHandle, string TrainingFile, double Epsilon, string TrainMode)");
T_get_prep_info_ocr_class_svm= dll.api("T_get_prep_info_ocr_class_svm","int(struct OCRHandle, struct TrainingFile, struct Preprocessing, struct& InformationCont, struct& CumInformationCont)");
T_get_support_vector_num_ocr_class_svm= dll.api("T_get_support_vector_num_ocr_class_svm","int(struct OCRHandle, struct& NumSupportVectors, struct& NumSVPerSVM)");
T_get_support_vector_ocr_class_svm= dll.api("T_get_support_vector_ocr_class_svm","int(struct OCRHandle, struct IndexSupportVector, struct& Index)");
T_get_params_ocr_class_svm= dll.api("T_get_params_ocr_class_svm","int(struct OCRHandle, struct& WidthCharacter, struct& HeightCharacter, struct& Interpolation, struct& Features, struct& Characters, struct& KernelType, struct& KernelParam, struct& Nu, struct& Mode, struct& Preprocessing, struct& NumComponents)");
T_create_ocr_class_svm= dll.api("T_create_ocr_class_svm","int(struct WidthCharacter, struct HeightCharacter, struct Interpolation, struct Features, struct Characters, struct KernelType, struct KernelParam, struct Nu, struct Mode, struct Preprocessing, struct NumComponents, struct& OCRHandle)");
T_clear_all_ocr_class_mlp= dll.api("T_clear_all_ocr_class_mlp","int(void)");
clear_all_ocr_class_mlp= dll.api("clear_all_ocr_class_mlp","int(void)");
T_clear_ocr_class_mlp= dll.api("T_clear_ocr_class_mlp","int(struct OCRHandle)");
clear_ocr_class_mlp= dll.api("clear_ocr_class_mlp","int(int OCRHandle)");
T_deserialize_ocr_class_mlp= dll.api("T_deserialize_ocr_class_mlp","int(struct SerializedItemHandle, struct& OCRHandle)");
deserialize_ocr_class_mlp= dll.api("deserialize_ocr_class_mlp","int(int SerializedItemHandle, int& OCRHandle)");
T_serialize_ocr_class_mlp= dll.api("T_serialize_ocr_class_mlp","int(struct OCRHandle, struct& SerializedItemHandle)");
serialize_ocr_class_mlp= dll.api("serialize_ocr_class_mlp","int(int OCRHandle, int& SerializedItemHandle)");
T_read_ocr_class_mlp= dll.api("T_read_ocr_class_mlp","int(struct FileName, struct& OCRHandle)");
read_ocr_class_mlp= dll.api("read_ocr_class_mlp","int(string FileName, int& OCRHandle)");
T_write_ocr_class_mlp= dll.api("T_write_ocr_class_mlp","int(struct OCRHandle, struct FileName)");
write_ocr_class_mlp= dll.api("write_ocr_class_mlp","int(int OCRHandle, string FileName)");
T_get_features_ocr_class_mlp= dll.api("T_get_features_ocr_class_mlp","int(ADDR Character, struct OCRHandle, struct Transform, struct& Features)");
T_do_ocr_word_mlp= dll.api("T_do_ocr_word_mlp","int(ADDR Character, ADDR Image, struct OCRHandle, struct Expression, struct NumAlternatives, struct NumCorrections, struct& Class, struct& Confidence, struct& Word, struct& Score)");
do_ocr_word_mlp= dll.api("do_ocr_word_mlp","int(ADDR Character, ADDR Image, int OCRHandle, string Expression, int NumAlternatives, int NumCorrections, string& Class, double& Confidence, string& Word, double& Score)");
T_do_ocr_multi_class_mlp= dll.api("T_do_ocr_multi_class_mlp","int(ADDR Character, ADDR Image, struct OCRHandle, struct& Class, struct& Confidence)");
do_ocr_multi_class_mlp= dll.api("do_ocr_multi_class_mlp","int(ADDR Character, ADDR Image, int OCRHandle, string& Class, double& Confidence)");
T_do_ocr_single_class_mlp= dll.api("T_do_ocr_single_class_mlp","int(ADDR Character, ADDR Image, struct OCRHandle, struct Num, struct& Class, struct& Confidence)");
T_trainf_ocr_class_mlp_protected= dll.api("T_trainf_ocr_class_mlp_protected","int(struct OCRHandle, struct TrainingFile, struct Password, struct MaxIterations, struct WeightTolerance, struct ErrorTolerance, struct& Error, struct& ErrorLog)");
T_trainf_ocr_class_mlp= dll.api("T_trainf_ocr_class_mlp","int(struct OCRHandle, struct TrainingFile, struct MaxIterations, struct WeightTolerance, struct ErrorTolerance, struct& Error, struct& ErrorLog)");
T_get_prep_info_ocr_class_mlp= dll.api("T_get_prep_info_ocr_class_mlp","int(struct OCRHandle, struct TrainingFile, struct Preprocessing, struct& InformationCont, struct& CumInformationCont)");
T_get_rejection_params_ocr_class_mlp= dll.api("T_get_rejection_params_ocr_class_mlp","int(struct OCRHandle, struct GenParamName, struct& GenParamValue)");
get_rejection_params_ocr_class_mlp= dll.api("get_rejection_params_ocr_class_mlp","int(int OCRHandle, string GenParamName, string& GenParamValue)");
T_set_rejection_params_ocr_class_mlp= dll.api("T_set_rejection_params_ocr_class_mlp","int(struct OCRHandle, struct GenParamName, struct GenParamValue)");
set_rejection_params_ocr_class_mlp= dll.api("set_rejection_params_ocr_class_mlp","int(int OCRHandle, string GenParamName, string GenParamValue)");
T_get_regularization_params_ocr_class_mlp= dll.api("T_get_regularization_params_ocr_class_mlp","int(struct OCRHandle, struct GenParamName, struct& GenParamValue)");
get_regularization_params_ocr_class_mlp= dll.api("get_regularization_params_ocr_class_mlp","int(int OCRHandle, string GenParamName, double& GenParamValue)");
T_set_regularization_params_ocr_class_mlp= dll.api("T_set_regularization_params_ocr_class_mlp","int(struct OCRHandle, struct GenParamName, struct GenParamValue)");
set_regularization_params_ocr_class_mlp= dll.api("set_regularization_params_ocr_class_mlp","int(int OCRHandle, string GenParamName, double GenParamValue)");
T_get_params_ocr_class_mlp= dll.api("T_get_params_ocr_class_mlp","int(struct OCRHandle, struct& WidthCharacter, struct& HeightCharacter, struct& Interpolation, struct& Features, struct& Characters, struct& NumHidden, struct& Preprocessing, struct& NumComponents)");
T_create_ocr_class_mlp= dll.api("T_create_ocr_class_mlp","int(struct WidthCharacter, struct HeightCharacter, struct Interpolation, struct Features, struct Characters, struct NumHidden, struct Preprocessing, struct NumComponents, struct RandSeed, struct& OCRHandle)");
T_serialize_ocr= dll.api("T_serialize_ocr","int(struct OcrHandle, struct& SerializedItemHandle)");
serialize_ocr= dll.api("serialize_ocr","int(int OcrHandle, int& SerializedItemHandle)");
T_deserialize_ocr= dll.api("T_deserialize_ocr","int(struct SerializedItemHandle, struct& OcrHandle)");
deserialize_ocr= dll.api("deserialize_ocr","int(int SerializedItemHandle, int& OcrHandle)");
T_write_ocr= dll.api("T_write_ocr","int(struct OcrHandle, struct FileName)");
write_ocr= dll.api("write_ocr","int(int OcrHandle, string FileName)");
T_read_ocr= dll.api("T_read_ocr","int(struct FileName, struct& OcrHandle)");
read_ocr= dll.api("read_ocr","int(string FileName, int& OcrHandle)");
T_do_ocr_single= dll.api("T_do_ocr_single","int(ADDR Character, ADDR Image, struct OcrHandle, struct& Classes, struct& Confidences)");
T_do_ocr_multi= dll.api("T_do_ocr_multi","int(ADDR Character, ADDR Image, struct OcrHandle, struct& Class, struct& Confidence)");
do_ocr_multi= dll.api("do_ocr_multi","int(ADDR Character, ADDR Image, int OcrHandle, string& Class, double& Confidence)");
T_info_ocr_class_box= dll.api("T_info_ocr_class_box","int(struct OcrHandle, struct& WidthPattern, struct& HeightPattern, struct& Interpolation, struct& WidthMaxChar, struct& HeightMaxChar, struct& Features, struct& Characters)");
T_create_ocr_class_box= dll.api("T_create_ocr_class_box","int(struct WidthPattern, struct HeightPattern, struct Interpolation, struct Features, struct Character, struct& OcrHandle)");
T_traind_ocr_class_box= dll.api("T_traind_ocr_class_box","int(ADDR Character, ADDR Image, struct OcrHandle, struct Class, struct& AvgConfidence)");
traind_ocr_class_box= dll.api("traind_ocr_class_box","int(ADDR Character, ADDR Image, int OcrHandle, string Class, double& AvgConfidence)");
T_trainf_ocr_class_box= dll.api("T_trainf_ocr_class_box","int(struct OcrHandle, struct TrainingFile, struct& AvgConfidence)");
trainf_ocr_class_box= dll.api("trainf_ocr_class_box","int(int OcrHandle, string TrainingFile, double& AvgConfidence)");
T_protect_ocr_trainf= dll.api("T_protect_ocr_trainf","int(struct TrainingFile, struct Password, struct TrainingFileProtected)");
protect_ocr_trainf= dll.api("protect_ocr_trainf","int(string TrainingFile, string Password, string TrainingFileProtected)");
T_write_ocr_trainf= dll.api("T_write_ocr_trainf","int(ADDR Character, ADDR Image, struct Class, struct TrainingFile)");
write_ocr_trainf= dll.api("write_ocr_trainf","int(ADDR Character, ADDR Image, string Class, string TrainingFile)");
T_ocr_change_char= dll.api("T_ocr_change_char","int(struct OcrHandle, struct Character)");
T_close_ocr= dll.api("T_close_ocr","int(struct OcrHandle)");
close_ocr= dll.api("close_ocr","int(int OcrHandle)");
T_sort_region= dll.api("T_sort_region","int(ADDR Regions, ADDR& SortedRegions, struct SortMode, struct Order, struct RowOrCol)");
sort_region= dll.api("sort_region","int(ADDR Regions, ADDR& SortedRegions, string SortMode, string Order, string RowOrCol)");
T_close_all_ocrs= dll.api("T_close_all_ocrs","int(void)");
close_all_ocrs= dll.api("close_all_ocrs","int(void)");
T_testd_ocr_class_box= dll.api("T_testd_ocr_class_box","int(ADDR Character, ADDR Image, struct OcrHandle, struct Class, struct& Confidence)");
testd_ocr_class_box= dll.api("testd_ocr_class_box","int(ADDR Character, ADDR Image, int OcrHandle, string Class, double& Confidence)");
T_crop_domain_rel= dll.api("T_crop_domain_rel","int(ADDR Image, ADDR& ImagePart, struct Top, struct Left, struct Bottom, struct Right)");
crop_domain_rel= dll.api("crop_domain_rel","int(ADDR Image, ADDR& ImagePart, int Top, int Left, int Bottom, int Right)");
T_ocr_get_features= dll.api("T_ocr_get_features","int(ADDR Character, struct OcrHandle, struct& FeatureVector)");
T_concat_ocr_trainf= dll.api("T_concat_ocr_trainf","int(struct SingleFiles, struct ComposedFile)");
concat_ocr_trainf= dll.api("concat_ocr_trainf","int(string SingleFiles, string ComposedFile)");
T_write_ocr_trainf_image= dll.api("T_write_ocr_trainf_image","int(ADDR Character, struct Class, struct TrainingFile)");
write_ocr_trainf_image= dll.api("write_ocr_trainf_image","int(ADDR Character, string Class, string TrainingFile)");
T_append_ocr_trainf= dll.api("T_append_ocr_trainf","int(ADDR Character, ADDR Image, struct Class, struct TrainingFile)");
append_ocr_trainf= dll.api("append_ocr_trainf","int(ADDR Character, ADDR Image, string Class, string TrainingFile)");
T_read_ocr_trainf_names_protected= dll.api("T_read_ocr_trainf_names_protected","int(struct TrainingFile, struct Password, struct& CharacterNames, struct& CharacterCount)");
read_ocr_trainf_names_protected= dll.api("read_ocr_trainf_names_protected","int(string TrainingFile, string Password, string& CharacterNames, int& CharacterCount)");
T_read_ocr_trainf_names= dll.api("T_read_ocr_trainf_names","int(struct TrainingFile, struct& CharacterNames, struct& CharacterCount)");
read_ocr_trainf_names= dll.api("read_ocr_trainf_names","int(string TrainingFile, string& CharacterNames, int& CharacterCount)");
T_read_ocr_trainf_select= dll.api("T_read_ocr_trainf_select","int(ADDR& Characters, struct TrainingFile, struct SearchNames, struct& FoundNames)");
read_ocr_trainf_select= dll.api("read_ocr_trainf_select","int(ADDR& Characters, string TrainingFile, string SearchNames, string& FoundNames)");
T_read_ocr_trainf= dll.api("T_read_ocr_trainf","int(ADDR& Characters, struct TrainingFile, struct& CharacterNames)");
T_pruning= dll.api("T_pruning","int(ADDR Region, ADDR& RegionPrune, struct Length)");
pruning= dll.api("pruning","int(ADDR Region, ADDR& RegionPrune, int Length)");
T_boundary= dll.api("T_boundary","int(ADDR Region, ADDR& RegionBorder, struct BoundaryType)");
boundary= dll.api("boundary","int(ADDR Region, ADDR& RegionBorder, string BoundaryType)");
T_fitting= dll.api("T_fitting","int(ADDR Region, ADDR StructElements, ADDR& RegionFitted)");
fitting= dll.api("fitting","int(ADDR Region, ADDR StructElements, ADDR& RegionFitted)");
T_gen_struct_elements= dll.api("T_gen_struct_elements","int(ADDR& StructElements, struct Type, struct Row, struct Column)");
gen_struct_elements= dll.api("gen_struct_elements","int(ADDR& StructElements, string Type, int Row, int Column)");
T_transpose_region= dll.api("T_transpose_region","int(ADDR Region, ADDR& Transposed, struct Row, struct Column)");
transpose_region= dll.api("transpose_region","int(ADDR Region, ADDR& Transposed, int Row, int Column)");
T_thinning_seq= dll.api("T_thinning_seq","int(ADDR Region, ADDR& RegionThin, struct GolayElement, struct Iterations)");
thinning_seq= dll.api("thinning_seq","int(ADDR Region, ADDR& RegionThin, string GolayElement, int Iterations)");
T_thinning_golay= dll.api("T_thinning_golay","int(ADDR Region, ADDR& RegionThin, struct GolayElement, struct Rotation)");
thinning_golay= dll.api("thinning_golay","int(ADDR Region, ADDR& RegionThin, string GolayElement, int Rotation)");
T_thinning= dll.api("T_thinning","int(ADDR Region, ADDR StructElement1, ADDR StructElement2, ADDR& RegionThin, struct Row, struct Column, struct Iterations)");
thinning= dll.api("thinning","int(ADDR Region, ADDR StructElement1, ADDR StructElement2, ADDR& RegionThin, int Row, int Column, int Iterations)");
T_thickening_seq= dll.api("T_thickening_seq","int(ADDR Region, ADDR& RegionThick, struct GolayElement, struct Iterations)");
thickening_seq= dll.api("thickening_seq","int(ADDR Region, ADDR& RegionThick, string GolayElement, int Iterations)");
T_thickening_golay= dll.api("T_thickening_golay","int(ADDR Region, ADDR& RegionThick, struct GolayElement, struct Rotation)");
thickening_golay= dll.api("thickening_golay","int(ADDR Region, ADDR& RegionThick, string GolayElement, int Rotation)");
T_thickening= dll.api("T_thickening","int(ADDR Region, ADDR StructElement1, ADDR StructElement2, ADDR& RegionThick, struct Row, struct Column, struct Iterations)");
thickening= dll.api("thickening","int(ADDR Region, ADDR StructElement1, ADDR StructElement2, ADDR& RegionThick, int Row, int Column, int Iterations)");
T_hit_or_miss_seq= dll.api("T_hit_or_miss_seq","int(ADDR Region, ADDR& RegionHitMiss, struct GolayElement)");
hit_or_miss_seq= dll.api("hit_or_miss_seq","int(ADDR Region, ADDR& RegionHitMiss, string GolayElement)");
T_hit_or_miss_golay= dll.api("T_hit_or_miss_golay","int(ADDR Region, ADDR& RegionHitMiss, struct GolayElement, struct Rotation)");
hit_or_miss_golay= dll.api("hit_or_miss_golay","int(ADDR Region, ADDR& RegionHitMiss, string GolayElement, int Rotation)");
T_hit_or_miss= dll.api("T_hit_or_miss","int(ADDR Region, ADDR StructElement1, ADDR StructElement2, ADDR& RegionHitMiss, struct Row, struct Column)");
hit_or_miss= dll.api("hit_or_miss","int(ADDR Region, ADDR StructElement1, ADDR StructElement2, ADDR& RegionHitMiss, int Row, int Column)");
T_golay_elements= dll.api("T_golay_elements","int(ADDR& StructElement1, ADDR& StructElement2, struct GolayElement, struct Rotation, struct Row, struct Column)");
golay_elements= dll.api("golay_elements","int(ADDR& StructElement1, ADDR& StructElement2, string GolayElement, int Rotation, int Row, int Column)");
T_morph_skiz= dll.api("T_morph_skiz","int(ADDR Region, ADDR& RegionSkiz, struct Iterations1, struct Iterations2)");
morph_skiz= dll.api("morph_skiz","int(ADDR Region, ADDR& RegionSkiz, int Iterations1, int Iterations2)");
T_morph_skeleton= dll.api("T_morph_skeleton","int(ADDR Region, ADDR& RegionSkeleton)");
morph_skeleton= dll.api("morph_skeleton","int(ADDR Region, ADDR& RegionSkeleton)");
T_morph_hat= dll.api("T_morph_hat","int(ADDR Region, ADDR StructElement, ADDR& RegionMorphHat)");
morph_hat= dll.api("morph_hat","int(ADDR Region, ADDR StructElement, ADDR& RegionMorphHat)");
T_bottom_hat= dll.api("T_bottom_hat","int(ADDR Region, ADDR StructElement, ADDR& RegionBottomHat)");
bottom_hat= dll.api("bottom_hat","int(ADDR Region, ADDR StructElement, ADDR& RegionBottomHat)");
T_top_hat= dll.api("T_top_hat","int(ADDR Region, ADDR StructElement, ADDR& RegionTopHat)");
top_hat= dll.api("top_hat","int(ADDR Region, ADDR StructElement, ADDR& RegionTopHat)");
T_minkowski_sub2= dll.api("T_minkowski_sub2","int(ADDR Region, ADDR StructElement, ADDR& RegionMinkSub, struct Row, struct Column, struct Iterations)");
minkowski_sub2= dll.api("minkowski_sub2","int(ADDR Region, ADDR StructElement, ADDR& RegionMinkSub, int Row, int Column, int Iterations)");
T_minkowski_sub1= dll.api("T_minkowski_sub1","int(ADDR Region, ADDR StructElement, ADDR& RegionMinkSub, struct Iterations)");
minkowski_sub1= dll.api("minkowski_sub1","int(ADDR Region, ADDR StructElement, ADDR& RegionMinkSub, int Iterations)");
T_minkowski_add2= dll.api("T_minkowski_add2","int(ADDR Region, ADDR StructElement, ADDR& RegionMinkAdd, struct Row, struct Column, struct Iterations)");
minkowski_add2= dll.api("minkowski_add2","int(ADDR Region, ADDR StructElement, ADDR& RegionMinkAdd, int Row, int Column, int Iterations)");
T_minkowski_add1= dll.api("T_minkowski_add1","int(ADDR Region, ADDR StructElement, ADDR& RegionMinkAdd, struct Iterations)");
minkowski_add1= dll.api("minkowski_add1","int(ADDR Region, ADDR StructElement, ADDR& RegionMinkAdd, int Iterations)");
T_closing_rectangle1= dll.api("T_closing_rectangle1","int(ADDR Region, ADDR& RegionClosing, struct Width, struct Height)");
closing_rectangle1= dll.api("closing_rectangle1","int(ADDR Region, ADDR& RegionClosing, int Width, int Height)");
T_closing_golay= dll.api("T_closing_golay","int(ADDR Region, ADDR& RegionClosing, struct GolayElement, struct Rotation)");
closing_golay= dll.api("closing_golay","int(ADDR Region, ADDR& RegionClosing, string GolayElement, int Rotation)");
T_closing_circle= dll.api("T_closing_circle","int(ADDR Region, ADDR& RegionClosing, struct Radius)");
closing_circle= dll.api("closing_circle","int(ADDR Region, ADDR& RegionClosing, double Radius)");
T_closing= dll.api("T_closing","int(ADDR Region, ADDR StructElement, ADDR& RegionClosing)");
closing= dll.api("closing","int(ADDR Region, ADDR StructElement, ADDR& RegionClosing)");
T_opening_seg= dll.api("T_opening_seg","int(ADDR Region, ADDR StructElement, ADDR& RegionOpening)");
opening_seg= dll.api("opening_seg","int(ADDR Region, ADDR StructElement, ADDR& RegionOpening)");
T_opening_golay= dll.api("T_opening_golay","int(ADDR Region, ADDR& RegionOpening, struct GolayElement, struct Rotation)");
opening_golay= dll.api("opening_golay","int(ADDR Region, ADDR& RegionOpening, string GolayElement, int Rotation)");
T_opening_rectangle1= dll.api("T_opening_rectangle1","int(ADDR Region, ADDR& RegionOpening, struct Width, struct Height)");
opening_rectangle1= dll.api("opening_rectangle1","int(ADDR Region, ADDR& RegionOpening, int Width, int Height)");
T_opening_circle= dll.api("T_opening_circle","int(ADDR Region, ADDR& RegionOpening, struct Radius)");
opening_circle= dll.api("opening_circle","int(ADDR Region, ADDR& RegionOpening, double Radius)");
T_opening= dll.api("T_opening","int(ADDR Region, ADDR StructElement, ADDR& RegionOpening)");
opening= dll.api("opening","int(ADDR Region, ADDR StructElement, ADDR& RegionOpening)");
T_erosion_seq= dll.api("T_erosion_seq","int(ADDR Region, ADDR& RegionErosion, struct GolayElement, struct Iterations)");
erosion_seq= dll.api("erosion_seq","int(ADDR Region, ADDR& RegionErosion, string GolayElement, int Iterations)");
T_erosion_golay= dll.api("T_erosion_golay","int(ADDR Region, ADDR& RegionErosion, struct GolayElement, struct Iterations, struct Rotation)");
erosion_golay= dll.api("erosion_golay","int(ADDR Region, ADDR& RegionErosion, string GolayElement, int Iterations, int Rotation)");
T_erosion_rectangle1= dll.api("T_erosion_rectangle1","int(ADDR Region, ADDR& RegionErosion, struct Width, struct Height)");
erosion_rectangle1= dll.api("erosion_rectangle1","int(ADDR Region, ADDR& RegionErosion, int Width, int Height)");
T_erosion_circle= dll.api("T_erosion_circle","int(ADDR Region, ADDR& RegionErosion, struct Radius)");
erosion_circle= dll.api("erosion_circle","int(ADDR Region, ADDR& RegionErosion, double Radius)");
T_erosion2= dll.api("T_erosion2","int(ADDR Region, ADDR StructElement, ADDR& RegionErosion, struct Row, struct Column, struct Iterations)");
erosion2= dll.api("erosion2","int(ADDR Region, ADDR StructElement, ADDR& RegionErosion, int Row, int Column, int Iterations)");
T_erosion1= dll.api("T_erosion1","int(ADDR Region, ADDR StructElement, ADDR& RegionErosion, struct Iterations)");
erosion1= dll.api("erosion1","int(ADDR Region, ADDR StructElement, ADDR& RegionErosion, int Iterations)");
T_dilation_seq= dll.api("T_dilation_seq","int(ADDR Region, ADDR& RegionDilation, struct GolayElement, struct Iterations)");
dilation_seq= dll.api("dilation_seq","int(ADDR Region, ADDR& RegionDilation, string GolayElement, int Iterations)");
T_dilation_golay= dll.api("T_dilation_golay","int(ADDR Region, ADDR& RegionDilation, struct GolayElement, struct Iterations, struct Rotation)");
dilation_golay= dll.api("dilation_golay","int(ADDR Region, ADDR& RegionDilation, string GolayElement, int Iterations, int Rotation)");
T_dilation_rectangle1= dll.api("T_dilation_rectangle1","int(ADDR Region, ADDR& RegionDilation, struct Width, struct Height)");
dilation_rectangle1= dll.api("dilation_rectangle1","int(ADDR Region, ADDR& RegionDilation, int Width, int Height)");
T_dilation_circle= dll.api("T_dilation_circle","int(ADDR Region, ADDR& RegionDilation, struct Radius)");
dilation_circle= dll.api("dilation_circle","int(ADDR Region, ADDR& RegionDilation, double Radius)");
T_dilation2= dll.api("T_dilation2","int(ADDR Region, ADDR StructElement, ADDR& RegionDilation, struct Row, struct Column, struct Iterations)");
dilation2= dll.api("dilation2","int(ADDR Region, ADDR StructElement, ADDR& RegionDilation, int Row, int Column, int Iterations)");
T_dilation1= dll.api("T_dilation1","int(ADDR Region, ADDR StructElement, ADDR& RegionDilation, struct Iterations)");
dilation1= dll.api("dilation1","int(ADDR Region, ADDR StructElement, ADDR& RegionDilation, int Iterations)");
T_gray_bothat= dll.api("T_gray_bothat","int(ADDR Image, ADDR SE, ADDR& ImageBotHat)");
gray_bothat= dll.api("gray_bothat","int(ADDR Image, ADDR SE, ADDR& ImageBotHat)");
T_gray_tophat= dll.api("T_gray_tophat","int(ADDR Image, ADDR SE, ADDR& ImageTopHat)");
gray_tophat= dll.api("gray_tophat","int(ADDR Image, ADDR SE, ADDR& ImageTopHat)");
T_gray_closing= dll.api("T_gray_closing","int(ADDR Image, ADDR SE, ADDR& ImageClosing)");
gray_closing= dll.api("gray_closing","int(ADDR Image, ADDR SE, ADDR& ImageClosing)");
T_gray_opening= dll.api("T_gray_opening","int(ADDR Image, ADDR SE, ADDR& ImageOpening)");
gray_opening= dll.api("gray_opening","int(ADDR Image, ADDR SE, ADDR& ImageOpening)");
T_gray_dilation= dll.api("T_gray_dilation","int(ADDR Image, ADDR SE, ADDR& ImageDilation)");
gray_dilation= dll.api("gray_dilation","int(ADDR Image, ADDR SE, ADDR& ImageDilation)");
T_gray_erosion= dll.api("T_gray_erosion","int(ADDR Image, ADDR SE, ADDR& ImageErosion)");
gray_erosion= dll.api("gray_erosion","int(ADDR Image, ADDR SE, ADDR& ImageErosion)");
T_read_gray_se= dll.api("T_read_gray_se","int(ADDR& SE, struct FileName)");
read_gray_se= dll.api("read_gray_se","int(ADDR& SE, string FileName)");
T_gen_disc_se= dll.api("T_gen_disc_se","int(ADDR& SE, struct Type, struct Width, struct Height, struct Smax)");
gen_disc_se= dll.api("gen_disc_se","int(ADDR& SE, string Type, int Width, int Height, double Smax)");
T_get_metrology_object_model_contour= dll.api("T_get_metrology_object_model_contour","int(ADDR& Contour, struct MetrologyHandle, struct Index, struct Resolution)");
get_metrology_object_model_contour= dll.api("get_metrology_object_model_contour","int(ADDR& Contour, int MetrologyHandle, int Index, double Resolution)");
T_get_metrology_object_result_contour= dll.api("T_get_metrology_object_result_contour","int(ADDR& Contour, struct MetrologyHandle, struct Index, struct Instance, struct Resolution)");
get_metrology_object_result_contour= dll.api("get_metrology_object_result_contour","int(ADDR& Contour, int MetrologyHandle, int Index, int Instance, double Resolution)");
T_align_metrology_model= dll.api("T_align_metrology_model","int(struct MetrologyHandle, struct Row, struct Column, struct Angle)");
align_metrology_model= dll.api("align_metrology_model","int(int MetrologyHandle, double Row, double Column, double Angle)");
T_add_metrology_object_generic= dll.api("T_add_metrology_object_generic","int(struct MetrologyHandle, struct Shape, struct ShapeParam, struct MeasureLength1, struct MeasureLength2, struct MeasureSigma, struct MeasureThreshold, struct GenParamName, struct GenParamValue, struct& Index)");
T_get_metrology_model_param= dll.api("T_get_metrology_model_param","int(struct MetrologyHandle, struct GenParamName, struct& GenParamValue)");
get_metrology_model_param= dll.api("get_metrology_model_param","int(int MetrologyHandle, string GenParamName, string& GenParamValue)");
T_set_metrology_model_param= dll.api("T_set_metrology_model_param","int(struct MetrologyHandle, struct GenParamName, struct GenParamValue)");
set_metrology_model_param= dll.api("set_metrology_model_param","int(int MetrologyHandle, string GenParamName, string GenParamValue)");
T_deserialize_metrology_model= dll.api("T_deserialize_metrology_model","int(struct SerializedItemHandle, struct& MetrologyHandle)");
deserialize_metrology_model= dll.api("deserialize_metrology_model","int(int SerializedItemHandle, int& MetrologyHandle)");
T_serialize_metrology_model= dll.api("T_serialize_metrology_model","int(struct MetrologyHandle, struct& SerializedItemHandle)");
serialize_metrology_model= dll.api("serialize_metrology_model","int(int MetrologyHandle, int& SerializedItemHandle)");
T_transform_metrology_object= dll.api("T_transform_metrology_object","int(struct MetrologyHandle, struct Index, struct Row, struct Column, struct Phi, struct Mode)");
transform_metrology_object= dll.api("transform_metrology_object","int(int MetrologyHandle, string Index, double Row, double Column, double Phi, string Mode)");
T_write_metrology_model= dll.api("T_write_metrology_model","int(struct MetrologyHandle, struct FileName)");
write_metrology_model= dll.api("write_metrology_model","int(int MetrologyHandle, string FileName)");
T_read_metrology_model= dll.api("T_read_metrology_model","int(struct FileName, struct& MetrologyHandle)");
read_metrology_model= dll.api("read_metrology_model","int(string FileName, int& MetrologyHandle)");
T_copy_metrology_model= dll.api("T_copy_metrology_model","int(struct MetrologyHandle, struct Index, struct& CopiedMetrologyHandle)");
copy_metrology_model= dll.api("copy_metrology_model","int(int MetrologyHandle, string Index, int& CopiedMetrologyHandle)");
T_copy_metrology_object= dll.api("T_copy_metrology_object","int(struct MetrologyHandle, struct Index, struct& CopiedIndices)");
copy_metrology_object= dll.api("copy_metrology_object","int(int MetrologyHandle, string Index, int& CopiedIndices)");
T_get_metrology_object_num_instances= dll.api("T_get_metrology_object_num_instances","int(struct MetrologyHandle, struct Index, struct& NumInstances)");
get_metrology_object_num_instances= dll.api("get_metrology_object_num_instances","int(int MetrologyHandle, int Index, double& NumInstances)");
T_get_metrology_object_result= dll.api("T_get_metrology_object_result","int(struct MetrologyHandle, struct Index, struct Instance, struct GenParamName, struct GenParamValue, struct& Parameter)");
T_get_metrology_object_measures= dll.api("T_get_metrology_object_measures","int(ADDR& Contours, struct MetrologyHandle, struct Index, struct Transition, struct& Row, struct& Column)");
T_apply_metrology_model= dll.api("T_apply_metrology_model","int(ADDR Image, struct MetrologyHandle)");
apply_metrology_model= dll.api("apply_metrology_model","int(ADDR Image, int MetrologyHandle)");
T_get_metrology_object_indices= dll.api("T_get_metrology_object_indices","int(struct MetrologyHandle, struct& Indices)");
get_metrology_object_indices= dll.api("get_metrology_object_indices","int(int MetrologyHandle, int& Indices)");
T_reset_metrology_object_fuzzy_param= dll.api("T_reset_metrology_object_fuzzy_param","int(struct MetrologyHandle, struct Index)");
reset_metrology_object_fuzzy_param= dll.api("reset_metrology_object_fuzzy_param","int(int MetrologyHandle, string Index)");
T_reset_metrology_object_param= dll.api("T_reset_metrology_object_param","int(struct MetrologyHandle, struct Index)");
reset_metrology_object_param= dll.api("reset_metrology_object_param","int(int MetrologyHandle, string Index)");
T_get_metrology_object_fuzzy_param= dll.api("T_get_metrology_object_fuzzy_param","int(struct MetrologyHandle, struct Index, struct GenParamName, struct& GenParamValue)");
T_get_metrology_object_param= dll.api("T_get_metrology_object_param","int(struct MetrologyHandle, struct Index, struct GenParamName, struct& GenParamValue)");
T_set_metrology_object_fuzzy_param= dll.api("T_set_metrology_object_fuzzy_param","int(struct MetrologyHandle, struct Index, struct GenParamName, struct GenParamValue)");
T_set_metrology_object_param= dll.api("T_set_metrology_object_param","int(struct MetrologyHandle, struct Index, struct GenParamName, struct GenParamValue)");
T_add_metrology_object_rectangle2_measure= dll.api("T_add_metrology_object_rectangle2_measure","int(struct MetrologyHandle, struct Row, struct Column, struct Phi, struct Length1, struct Length2, struct MeasureLength1, struct MeasureLength2, struct MeasureSigma, struct MeasureThreshold, struct GenParamName, struct GenParamValue, struct& Index)");
T_add_metrology_object_line_measure= dll.api("T_add_metrology_object_line_measure","int(struct MetrologyHandle, struct RowBegin, struct ColumnBegin, struct RowEnd, struct ColumnEnd, struct MeasureLength1, struct MeasureLength2, struct MeasureSigma, struct MeasureThreshold, struct GenParamName, struct GenParamValue, struct& Index)");
T_add_metrology_object_ellipse_measure= dll.api("T_add_metrology_object_ellipse_measure","int(struct MetrologyHandle, struct Row, struct Column, struct Phi, struct Radius1, struct Radius2, struct MeasureLength1, struct MeasureLength2, struct MeasureSigma, struct MeasureThreshold, struct GenParamName, struct GenParamValue, struct& Index)");
T_add_metrology_object_circle_measure= dll.api("T_add_metrology_object_circle_measure","int(struct MetrologyHandle, struct Row, struct Column, struct Radius, struct MeasureLength1, struct MeasureLength2, struct MeasureSigma, struct MeasureThreshold, struct GenParamName, struct GenParamValue, struct& Index)");
T_clear_all_metrology_models= dll.api("T_clear_all_metrology_models","int(void)");
clear_all_metrology_models= dll.api("clear_all_metrology_models","int(void)");
T_clear_metrology_model= dll.api("T_clear_metrology_model","int(struct MetrologyHandle)");
clear_metrology_model= dll.api("clear_metrology_model","int(int MetrologyHandle)");
T_clear_metrology_object= dll.api("T_clear_metrology_object","int(struct MetrologyHandle, struct Index)");
clear_metrology_object= dll.api("clear_metrology_object","int(int MetrologyHandle, string Index)");
T_set_metrology_model_image_size= dll.api("T_set_metrology_model_image_size","int(struct MetrologyHandle, struct Width, struct Height)");
set_metrology_model_image_size= dll.api("set_metrology_model_image_size","int(int MetrologyHandle, int Width, int Height)");
T_create_metrology_model= dll.api("T_create_metrology_model","int(struct& MetrologyHandle)");
create_metrology_model= dll.api("create_metrology_model","int(int& MetrologyHandle)");
T_serialize_measure= dll.api("T_serialize_measure","int(struct MeasureHandle, struct& SerializedItemHandle)");
serialize_measure= dll.api("serialize_measure","int(int MeasureHandle, int& SerializedItemHandle)");
T_deserialize_measure= dll.api("T_deserialize_measure","int(struct SerializedItemHandle, struct& MeasureHandle)");
deserialize_measure= dll.api("deserialize_measure","int(int SerializedItemHandle, int& MeasureHandle)");
T_write_measure= dll.api("T_write_measure","int(struct MeasureHandle, struct FileName)");
write_measure= dll.api("write_measure","int(int MeasureHandle, string FileName)");
T_read_measure= dll.api("T_read_measure","int(struct FileName, struct& MeasureHandle)");
read_measure= dll.api("read_measure","int(string FileName, int& MeasureHandle)");
T_measure_thresh= dll.api("T_measure_thresh","int(ADDR Image, struct MeasureHandle, struct Sigma, struct Threshold, struct Select, struct& RowThresh, struct& ColumnThresh, struct& Distance)");
T_close_all_measures= dll.api("T_close_all_measures","int(void)");
close_all_measures= dll.api("close_all_measures","int(void)");
T_close_measure= dll.api("T_close_measure","int(struct MeasureHandle)");
close_measure= dll.api("close_measure","int(int MeasureHandle)");
T_measure_projection= dll.api("T_measure_projection","int(ADDR Image, struct MeasureHandle, struct& GrayValues)");
T_reset_fuzzy_measure= dll.api("T_reset_fuzzy_measure","int(struct MeasureHandle, struct SetType)");
reset_fuzzy_measure= dll.api("reset_fuzzy_measure","int(int MeasureHandle, string SetType)");
T_set_fuzzy_measure_norm_pair= dll.api("T_set_fuzzy_measure_norm_pair","int(struct MeasureHandle, struct PairSize, struct SetType, struct Function)");
T_set_fuzzy_measure= dll.api("T_set_fuzzy_measure","int(struct MeasureHandle, struct SetType, struct Function)");
T_fuzzy_measure_pairing= dll.api("T_fuzzy_measure_pairing","int(ADDR Image, struct MeasureHandle, struct Sigma, struct AmpThresh, struct FuzzyThresh, struct Transition, struct Pairing, struct NumPairs, struct& RowEdgeFirst, struct& ColumnEdgeFirst, struct& AmplitudeFirst, struct& RowEdgeSecond, struct& ColumnEdgeSecond, struct& AmplitudeSecond, struct& RowPairCenter, struct& ColumnPairCenter, struct& FuzzyScore, struct& IntraDistance)");
T_fuzzy_measure_pairs= dll.api("T_fuzzy_measure_pairs","int(ADDR Image, struct MeasureHandle, struct Sigma, struct AmpThresh, struct FuzzyThresh, struct Transition, struct& RowEdgeFirst, struct& ColumnEdgeFirst, struct& AmplitudeFirst, struct& RowEdgeSecond, struct& ColumnEdgeSecond, struct& AmplitudeSecond, struct& RowEdgeCenter, struct& ColumnEdgeCenter, struct& FuzzyScore, struct& IntraDistance, struct& InterDistance)");
T_fuzzy_measure_pos= dll.api("T_fuzzy_measure_pos","int(ADDR Image, struct MeasureHandle, struct Sigma, struct AmpThresh, struct FuzzyThresh, struct Transition, struct& RowEdge, struct& ColumnEdge, struct& Amplitude, struct& FuzzyScore, struct& Distance)");
T_measure_pairs= dll.api("T_measure_pairs","int(ADDR Image, struct MeasureHandle, struct Sigma, struct Threshold, struct Transition, struct Select, struct& RowEdgeFirst, struct& ColumnEdgeFirst, struct& AmplitudeFirst, struct& RowEdgeSecond, struct& ColumnEdgeSecond, struct& AmplitudeSecond, struct& IntraDistance, struct& InterDistance)");
T_measure_pos= dll.api("T_measure_pos","int(ADDR Image, struct MeasureHandle, struct Sigma, struct Threshold, struct Transition, struct Select, struct& RowEdge, struct& ColumnEdge, struct& Amplitude, struct& Distance)");
T_translate_measure= dll.api("T_translate_measure","int(struct MeasureHandle, struct Row, struct Column)");
translate_measure= dll.api("translate_measure","int(int MeasureHandle, double Row, double Column)");
T_gen_measure_arc= dll.api("T_gen_measure_arc","int(struct CenterRow, struct CenterCol, struct Radius, struct AngleStart, struct AngleExtent, struct AnnulusRadius, struct Width, struct Height, struct Interpolation, struct& MeasureHandle)");
gen_measure_arc= dll.api("gen_measure_arc","int(double CenterRow, double CenterCol, double Radius, double AngleStart, double AngleExtent, double AnnulusRadius, int Width, int Height, string Interpolation, int& MeasureHandle)");
T_gen_measure_rectangle2= dll.api("T_gen_measure_rectangle2","int(struct Row, struct Column, struct Phi, struct Length1, struct Length2, struct Width, struct Height, struct Interpolation, struct& MeasureHandle)");
gen_measure_rectangle2= dll.api("gen_measure_rectangle2","int(double Row, double Column, double Phi, double Length1, double Length2, int Width, int Height, string Interpolation, int& MeasureHandle)");
T_deserialize_matrix= dll.api("T_deserialize_matrix","int(struct SerializedItemHandle, struct& MatrixID)");
deserialize_matrix= dll.api("deserialize_matrix","int(int SerializedItemHandle, int& MatrixID)");
T_serialize_matrix= dll.api("T_serialize_matrix","int(struct MatrixID, struct& SerializedItemHandle)");
serialize_matrix= dll.api("serialize_matrix","int(int MatrixID, int& SerializedItemHandle)");
T_read_matrix= dll.api("T_read_matrix","int(struct FileName, struct& MatrixID)");
read_matrix= dll.api("read_matrix","int(string FileName, int& MatrixID)");
T_write_matrix= dll.api("T_write_matrix","int(struct MatrixID, struct FileFormat, struct FileName)");
write_matrix= dll.api("write_matrix","int(int MatrixID, string FileFormat, string FileName)");
T_orthogonal_decompose_matrix= dll.api("T_orthogonal_decompose_matrix","int(struct MatrixID, struct DecompositionType, struct OutputMatricesType, struct ComputeOrthogonal, struct& MatrixOrthogonalID, struct& MatrixTriangularID)");
orthogonal_decompose_matrix= dll.api("orthogonal_decompose_matrix","int(int MatrixID, string DecompositionType, string OutputMatricesType, string ComputeOrthogonal, int& MatrixOrthogonalID, int& MatrixTriangularID)");
T_decompose_matrix= dll.api("T_decompose_matrix","int(struct MatrixID, struct MatrixType, struct& Matrix1ID, struct& Matrix2ID)");
decompose_matrix= dll.api("decompose_matrix","int(int MatrixID, string MatrixType, int& Matrix1ID, int& Matrix2ID)");
T_svd_matrix= dll.api("T_svd_matrix","int(struct MatrixID, struct SVDType, struct ComputeSingularVectors, struct& MatrixUID, struct& MatrixSID, struct& MatrixVID)");
svd_matrix= dll.api("svd_matrix","int(int MatrixID, string SVDType, string ComputeSingularVectors, int& MatrixUID, int& MatrixSID, int& MatrixVID)");
T_generalized_eigenvalues_general_matrix= dll.api("T_generalized_eigenvalues_general_matrix","int(struct MatrixAID, struct MatrixBID, struct ComputeEigenvectors, struct& EigenvaluesRealID, struct& EigenvaluesImagID, struct& EigenvectorsRealID, struct& EigenvectorsImagID)");
generalized_eigenvalues_general_matrix= dll.api("generalized_eigenvalues_general_matrix","int(int MatrixAID, int MatrixBID, string ComputeEigenvectors, int& EigenvaluesRealID, int& EigenvaluesImagID, int& EigenvectorsRealID, int& EigenvectorsImagID)");
T_generalized_eigenvalues_symmetric_matrix= dll.api("T_generalized_eigenvalues_symmetric_matrix","int(struct MatrixAID, struct MatrixBID, struct ComputeEigenvectors, struct& EigenvaluesID, struct& EigenvectorsID)");
generalized_eigenvalues_symmetric_matrix= dll.api("generalized_eigenvalues_symmetric_matrix","int(int MatrixAID, int MatrixBID, string ComputeEigenvectors, int& EigenvaluesID, int& EigenvectorsID)");
T_eigenvalues_general_matrix= dll.api("T_eigenvalues_general_matrix","int(struct MatrixID, struct ComputeEigenvectors, struct& EigenvaluesRealID, struct& EigenvaluesImagID, struct& EigenvectorsRealID, struct& EigenvectorsImagID)");
eigenvalues_general_matrix= dll.api("eigenvalues_general_matrix","int(int MatrixID, string ComputeEigenvectors, int& EigenvaluesRealID, int& EigenvaluesImagID, int& EigenvectorsRealID, int& EigenvectorsImagID)");
T_eigenvalues_symmetric_matrix= dll.api("T_eigenvalues_symmetric_matrix","int(struct MatrixID, struct ComputeEigenvectors, struct& EigenvaluesID, struct& EigenvectorsID)");
eigenvalues_symmetric_matrix= dll.api("eigenvalues_symmetric_matrix","int(int MatrixID, string ComputeEigenvectors, int& EigenvaluesID, int& EigenvectorsID)");
T_solve_matrix= dll.api("T_solve_matrix","int(struct MatrixLHSID, struct MatrixLHSType, struct Epsilon, struct MatrixRHSID, struct& MatrixResultID)");
solve_matrix= dll.api("solve_matrix","int(int MatrixLHSID, string MatrixLHSType, double Epsilon, int MatrixRHSID, int& MatrixResultID)");
T_determinant_matrix= dll.api("T_determinant_matrix","int(struct MatrixID, struct MatrixType, struct& Value)");
determinant_matrix= dll.api("determinant_matrix","int(int MatrixID, string MatrixType, double& Value)");
T_invert_matrix_mod= dll.api("T_invert_matrix_mod","int(struct MatrixID, struct MatrixType, struct Epsilon)");
invert_matrix_mod= dll.api("invert_matrix_mod","int(int MatrixID, string MatrixType, double Epsilon)");
T_invert_matrix= dll.api("T_invert_matrix","int(struct MatrixID, struct MatrixType, struct Epsilon, struct& MatrixInvID)");
invert_matrix= dll.api("invert_matrix","int(int MatrixID, string MatrixType, double Epsilon, int& MatrixInvID)");
T_transpose_matrix_mod= dll.api("T_transpose_matrix_mod","int(struct MatrixID)");
transpose_matrix_mod= dll.api("transpose_matrix_mod","int(int MatrixID)");
T_transpose_matrix= dll.api("T_transpose_matrix","int(struct MatrixID, struct& MatrixTransposedID)");
transpose_matrix= dll.api("transpose_matrix","int(int MatrixID, int& MatrixTransposedID)");
T_max_matrix= dll.api("T_max_matrix","int(struct MatrixID, struct MaxType, struct& MatrixMaxID)");
max_matrix= dll.api("max_matrix","int(int MatrixID, string MaxType, int& MatrixMaxID)");
T_min_matrix= dll.api("T_min_matrix","int(struct MatrixID, struct MinType, struct& MatrixMinID)");
min_matrix= dll.api("min_matrix","int(int MatrixID, string MinType, int& MatrixMinID)");
T_pow_matrix_mod= dll.api("T_pow_matrix_mod","int(struct MatrixID, struct MatrixType, struct Power)");
pow_matrix_mod= dll.api("pow_matrix_mod","int(int MatrixID, string MatrixType, double Power)");
T_pow_matrix= dll.api("T_pow_matrix","int(struct MatrixID, struct MatrixType, struct Power, struct& MatrixPowID)");
pow_matrix= dll.api("pow_matrix","int(int MatrixID, string MatrixType, double Power, int& MatrixPowID)");
T_pow_element_matrix_mod= dll.api("T_pow_element_matrix_mod","int(struct MatrixID, struct MatrixExpID)");
pow_element_matrix_mod= dll.api("pow_element_matrix_mod","int(int MatrixID, int MatrixExpID)");
T_pow_element_matrix= dll.api("T_pow_element_matrix","int(struct MatrixID, struct MatrixExpID, struct& MatrixPowID)");
pow_element_matrix= dll.api("pow_element_matrix","int(int MatrixID, int MatrixExpID, int& MatrixPowID)");
T_pow_scalar_element_matrix_mod= dll.api("T_pow_scalar_element_matrix_mod","int(struct MatrixID, struct Power)");
pow_scalar_element_matrix_mod= dll.api("pow_scalar_element_matrix_mod","int(int MatrixID, double Power)");
T_pow_scalar_element_matrix= dll.api("T_pow_scalar_element_matrix","int(struct MatrixID, struct Power, struct& MatrixPowID)");
pow_scalar_element_matrix= dll.api("pow_scalar_element_matrix","int(int MatrixID, double Power, int& MatrixPowID)");
T_sqrt_matrix_mod= dll.api("T_sqrt_matrix_mod","int(struct MatrixID)");
sqrt_matrix_mod= dll.api("sqrt_matrix_mod","int(int MatrixID)");
T_sqrt_matrix= dll.api("T_sqrt_matrix","int(struct MatrixID, struct& MatrixSqrtID)");
sqrt_matrix= dll.api("sqrt_matrix","int(int MatrixID, int& MatrixSqrtID)");
T_abs_matrix_mod= dll.api("T_abs_matrix_mod","int(struct MatrixID)");
abs_matrix_mod= dll.api("abs_matrix_mod","int(int MatrixID)");
T_abs_matrix= dll.api("T_abs_matrix","int(struct MatrixID, struct& MatrixAbsID)");
abs_matrix= dll.api("abs_matrix","int(int MatrixID, int& MatrixAbsID)");
T_norm_matrix= dll.api("T_norm_matrix","int(struct MatrixID, struct NormType, struct& Value)");
norm_matrix= dll.api("norm_matrix","int(int MatrixID, string NormType, double& Value)");
T_mean_matrix= dll.api("T_mean_matrix","int(struct MatrixID, struct MeanType, struct& MatrixMeanID)");
mean_matrix= dll.api("mean_matrix","int(int MatrixID, string MeanType, int& MatrixMeanID)");
T_sum_matrix= dll.api("T_sum_matrix","int(struct MatrixID, struct SumType, struct& MatrixSumID)");
sum_matrix= dll.api("sum_matrix","int(int MatrixID, string SumType, int& MatrixSumID)");
T_div_element_matrix_mod= dll.api("T_div_element_matrix_mod","int(struct MatrixAID, struct MatrixBID)");
div_element_matrix_mod= dll.api("div_element_matrix_mod","int(int MatrixAID, int MatrixBID)");
T_div_element_matrix= dll.api("T_div_element_matrix","int(struct MatrixAID, struct MatrixBID, struct& MatrixDivID)");
div_element_matrix= dll.api("div_element_matrix","int(int MatrixAID, int MatrixBID, int& MatrixDivID)");
T_mult_element_matrix_mod= dll.api("T_mult_element_matrix_mod","int(struct MatrixAID, struct MatrixBID)");
mult_element_matrix_mod= dll.api("mult_element_matrix_mod","int(int MatrixAID, int MatrixBID)");
T_mult_element_matrix= dll.api("T_mult_element_matrix","int(struct MatrixAID, struct MatrixBID, struct& MatrixMultID)");
mult_element_matrix= dll.api("mult_element_matrix","int(int MatrixAID, int MatrixBID, int& MatrixMultID)");
T_scale_matrix_mod= dll.api("T_scale_matrix_mod","int(struct MatrixID, struct Factor)");
scale_matrix_mod= dll.api("scale_matrix_mod","int(int MatrixID, double Factor)");
T_scale_matrix= dll.api("T_scale_matrix","int(struct MatrixID, struct Factor, struct& MatrixScaledID)");
scale_matrix= dll.api("scale_matrix","int(int MatrixID, double Factor, int& MatrixScaledID)");
T_sub_matrix_mod= dll.api("T_sub_matrix_mod","int(struct MatrixAID, struct MatrixBID)");
sub_matrix_mod= dll.api("sub_matrix_mod","int(int MatrixAID, int MatrixBID)");
T_sub_matrix= dll.api("T_sub_matrix","int(struct MatrixAID, struct MatrixBID, struct& MatrixSubID)");
sub_matrix= dll.api("sub_matrix","int(int MatrixAID, int MatrixBID, int& MatrixSubID)");
T_add_matrix_mod= dll.api("T_add_matrix_mod","int(struct MatrixAID, struct MatrixBID)");
add_matrix_mod= dll.api("add_matrix_mod","int(int MatrixAID, int MatrixBID)");
T_add_matrix= dll.api("T_add_matrix","int(struct MatrixAID, struct MatrixBID, struct& MatrixSumID)");
add_matrix= dll.api("add_matrix","int(int MatrixAID, int MatrixBID, int& MatrixSumID)");
T_mult_matrix_mod= dll.api("T_mult_matrix_mod","int(struct MatrixAID, struct MatrixBID, struct MultType)");
mult_matrix_mod= dll.api("mult_matrix_mod","int(int MatrixAID, int MatrixBID, string MultType)");
T_mult_matrix= dll.api("T_mult_matrix","int(struct MatrixAID, struct MatrixBID, struct MultType, struct& MatrixMultID)");
mult_matrix= dll.api("mult_matrix","int(int MatrixAID, int MatrixBID, string MultType, int& MatrixMultID)");
T_get_size_matrix= dll.api("T_get_size_matrix","int(struct MatrixID, struct& Rows, struct& Columns)");
get_size_matrix= dll.api("get_size_matrix","int(int MatrixID, int& Rows, int& Columns)");
T_repeat_matrix= dll.api("T_repeat_matrix","int(struct MatrixID, struct Rows, struct Columns, struct& MatrixRepeatedID)");
repeat_matrix= dll.api("repeat_matrix","int(int MatrixID, int Rows, int Columns, int& MatrixRepeatedID)");
T_copy_matrix= dll.api("T_copy_matrix","int(struct MatrixID, struct& MatrixCopyID)");
copy_matrix= dll.api("copy_matrix","int(int MatrixID, int& MatrixCopyID)");
T_set_diagonal_matrix= dll.api("T_set_diagonal_matrix","int(struct MatrixID, struct VectorID, struct Diagonal)");
set_diagonal_matrix= dll.api("set_diagonal_matrix","int(int MatrixID, int VectorID, int Diagonal)");
T_get_diagonal_matrix= dll.api("T_get_diagonal_matrix","int(struct MatrixID, struct Diagonal, struct& VectorID)");
get_diagonal_matrix= dll.api("get_diagonal_matrix","int(int MatrixID, int Diagonal, int& VectorID)");
T_set_sub_matrix= dll.api("T_set_sub_matrix","int(struct MatrixID, struct MatrixSubID, struct Row, struct Column)");
set_sub_matrix= dll.api("set_sub_matrix","int(int MatrixID, int MatrixSubID, int Row, int Column)");
T_get_sub_matrix= dll.api("T_get_sub_matrix","int(struct MatrixID, struct Row, struct Column, struct RowsSub, struct ColumnsSub, struct& MatrixSubID)");
get_sub_matrix= dll.api("get_sub_matrix","int(int MatrixID, int Row, int Column, int RowsSub, int ColumnsSub, int& MatrixSubID)");
T_set_full_matrix= dll.api("T_set_full_matrix","int(struct MatrixID, struct Values)");
set_full_matrix= dll.api("set_full_matrix","int(int MatrixID, double Values)");
T_get_full_matrix= dll.api("T_get_full_matrix","int(struct MatrixID, struct& Values)");
get_full_matrix= dll.api("get_full_matrix","int(int MatrixID, double& Values)");
T_set_value_matrix= dll.api("T_set_value_matrix","int(struct MatrixID, struct Row, struct Column, struct Value)");
set_value_matrix= dll.api("set_value_matrix","int(int MatrixID, int Row, int Column, double Value)");
T_get_value_matrix= dll.api("T_get_value_matrix","int(struct MatrixID, struct Row, struct Column, struct& Value)");
get_value_matrix= dll.api("get_value_matrix","int(int MatrixID, int Row, int Column, double& Value)");
T_clear_all_matrices= dll.api("T_clear_all_matrices","int(void)");
clear_all_matrices= dll.api("clear_all_matrices","int(void)");
T_clear_matrix= dll.api("T_clear_matrix","int(struct MatrixID)");
clear_matrix= dll.api("clear_matrix","int(int MatrixID)");
T_create_matrix= dll.api("T_create_matrix","int(struct Rows, struct Columns, struct Value, struct& MatrixID)");
create_matrix= dll.api("create_matrix","int(int Rows, int Columns, double Value, int& MatrixID)");
T_clear_all_sample_identifiers= dll.api("T_clear_all_sample_identifiers","int(void)");
clear_all_sample_identifiers= dll.api("clear_all_sample_identifiers","int(void)");
T_clear_sample_identifier= dll.api("T_clear_sample_identifier","int(struct SampleIdentifier)");
clear_sample_identifier= dll.api("clear_sample_identifier","int(int SampleIdentifier)");
T_deserialize_sample_identifier= dll.api("T_deserialize_sample_identifier","int(struct SerializedItemHandle, struct& SampleIdentifier)");
deserialize_sample_identifier= dll.api("deserialize_sample_identifier","int(int SerializedItemHandle, int& SampleIdentifier)");
T_read_sample_identifier= dll.api("T_read_sample_identifier","int(struct FileName, struct& SampleIdentifier)");
read_sample_identifier= dll.api("read_sample_identifier","int(string FileName, int& SampleIdentifier)");
T_serialize_sample_identifier= dll.api("T_serialize_sample_identifier","int(struct SampleIdentifier, struct& SerializedItemHandle)");
serialize_sample_identifier= dll.api("serialize_sample_identifier","int(int SampleIdentifier, int& SerializedItemHandle)");
T_write_sample_identifier= dll.api("T_write_sample_identifier","int(struct SampleIdentifier, struct FileName)");
write_sample_identifier= dll.api("write_sample_identifier","int(int SampleIdentifier, string FileName)");
T_apply_sample_identifier= dll.api("T_apply_sample_identifier","int(ADDR Image, struct SampleIdentifier, struct NumResults, struct RatingThreshold, struct GenParamName, struct GenParamValue, struct& ObjectIdx, struct& Rating)");
T_get_sample_identifier_param= dll.api("T_get_sample_identifier_param","int(struct SampleIdentifier, struct GenParamName, struct& GenParamValue)");
get_sample_identifier_param= dll.api("get_sample_identifier_param","int(int SampleIdentifier, string GenParamName, double& GenParamValue)");
T_set_sample_identifier_param= dll.api("T_set_sample_identifier_param","int(struct SampleIdentifier, struct GenParamName, struct GenParamValue)");
set_sample_identifier_param= dll.api("set_sample_identifier_param","int(int SampleIdentifier, string GenParamName, double GenParamValue)");
T_get_sample_identifier_object_info= dll.api("T_get_sample_identifier_object_info","int(struct SampleIdentifier, struct ObjectIdx, struct InfoName, struct& InfoValue)");
get_sample_identifier_object_info= dll.api("get_sample_identifier_object_info","int(int SampleIdentifier, int ObjectIdx, string InfoName, int& InfoValue)");
T_set_sample_identifier_object_info= dll.api("T_set_sample_identifier_object_info","int(struct SampleIdentifier, struct ObjectIdx, struct InfoName, struct InfoValue)");
set_sample_identifier_object_info= dll.api("set_sample_identifier_object_info","int(int SampleIdentifier, int ObjectIdx, string InfoName, string InfoValue)");
T_remove_sample_identifier_training_data= dll.api("T_remove_sample_identifier_training_data","int(struct SampleIdentifier, struct ObjectIdx, struct ObjectSampleIdx)");
remove_sample_identifier_training_data= dll.api("remove_sample_identifier_training_data","int(int SampleIdentifier, int ObjectIdx, int ObjectSampleIdx)");
T_remove_sample_identifier_preparation_data= dll.api("T_remove_sample_identifier_preparation_data","int(struct SampleIdentifier, struct ObjectIdx, struct ObjectSampleIdx)");
remove_sample_identifier_preparation_data= dll.api("remove_sample_identifier_preparation_data","int(int SampleIdentifier, int ObjectIdx, int ObjectSampleIdx)");
T_train_sample_identifier= dll.api("T_train_sample_identifier","int(struct SampleIdentifier, struct GenParamName, struct GenParamValue)");
T_add_sample_identifier_training_data= dll.api("T_add_sample_identifier_training_data","int(ADDR SampleImage, struct SampleIdentifier, struct ObjectIdx, struct GenParamName, struct GenParamValue, struct& ObjectSampleIdx)");
T_prepare_sample_identifier= dll.api("T_prepare_sample_identifier","int(struct SampleIdentifier, struct RemovePreparationData, struct GenParamName, struct GenParamValue)");
T_add_sample_identifier_preparation_data= dll.api("T_add_sample_identifier_preparation_data","int(ADDR SampleImage, struct SampleIdentifier, struct ObjectIdx, struct GenParamName, struct GenParamValue, struct& ObjectSampleIdx)");
T_create_sample_identifier= dll.api("T_create_sample_identifier","int(struct GenParamName, struct GenParamValue, struct& SampleIdentifier)");
T_deserialize_shape_model= dll.api("T_deserialize_shape_model","int(struct SerializedItemHandle, struct& ModelID)");
deserialize_shape_model= dll.api("deserialize_shape_model","int(int SerializedItemHandle, int& ModelID)");
T_read_shape_model= dll.api("T_read_shape_model","int(struct FileName, struct& ModelID)");
read_shape_model= dll.api("read_shape_model","int(string FileName, int& ModelID)");
T_serialize_shape_model= dll.api("T_serialize_shape_model","int(struct ModelID, struct& SerializedItemHandle)");
serialize_shape_model= dll.api("serialize_shape_model","int(int ModelID, int& SerializedItemHandle)");
T_write_shape_model= dll.api("T_write_shape_model","int(struct ModelID, struct FileName)");
write_shape_model= dll.api("write_shape_model","int(int ModelID, string FileName)");
T_clear_all_shape_models= dll.api("T_clear_all_shape_models","int(void)");
clear_all_shape_models= dll.api("clear_all_shape_models","int(void)");
T_clear_shape_model= dll.api("T_clear_shape_model","int(struct ModelID)");
clear_shape_model= dll.api("clear_shape_model","int(int ModelID)");
T_get_shape_model_contours= dll.api("T_get_shape_model_contours","int(ADDR& ModelContours, struct ModelID, struct Level)");
get_shape_model_contours= dll.api("get_shape_model_contours","int(ADDR& ModelContours, int ModelID, int Level)");
T_determine_shape_model_params= dll.api("T_determine_shape_model_params","int(ADDR Template, struct NumLevels, struct AngleStart, struct AngleExtent, struct ScaleMin, struct ScaleMax, struct Optimization, struct Metric, struct Contrast, struct MinContrast, struct Parameters, struct& ParameterName, struct& ParameterValue)");
T_get_shape_model_params= dll.api("T_get_shape_model_params","int(struct ModelID, struct& NumLevels, struct& AngleStart, struct& AngleExtent, struct& AngleStep, struct& ScaleMin, struct& ScaleMax, struct& ScaleStep, struct& Metric, struct& MinContrast)");
get_shape_model_params= dll.api("get_shape_model_params","int(int ModelID, int& NumLevels, double& AngleStart, double& AngleExtent, double& AngleStep, double& ScaleMin, double& ScaleMax, double& ScaleStep, string& Metric, int& MinContrast)");
T_get_shape_model_origin= dll.api("T_get_shape_model_origin","int(struct ModelID, struct& Row, struct& Column)");
get_shape_model_origin= dll.api("get_shape_model_origin","int(int ModelID, double& Row, double& Column)");
T_set_shape_model_origin= dll.api("T_set_shape_model_origin","int(struct ModelID, struct Row, struct Column)");
set_shape_model_origin= dll.api("set_shape_model_origin","int(int ModelID, double Row, double Column)");
T_find_aniso_shape_models= dll.api("T_find_aniso_shape_models","int(ADDR Image, struct ModelIDs, struct AngleStart, struct AngleExtent, struct ScaleRMin, struct ScaleRMax, struct ScaleCMin, struct ScaleCMax, struct MinScore, struct NumMatches, struct MaxOverlap, struct SubPixel, struct NumLevels, struct Greediness, struct& Row, struct& Column, struct& Angle, struct& ScaleR, struct& ScaleC, struct& Score, struct& Model)");
T_find_scaled_shape_models= dll.api("T_find_scaled_shape_models","int(ADDR Image, struct ModelIDs, struct AngleStart, struct AngleExtent, struct ScaleMin, struct ScaleMax, struct MinScore, struct NumMatches, struct MaxOverlap, struct SubPixel, struct NumLevels, struct Greediness, struct& Row, struct& Column, struct& Angle, struct& Scale, struct& Score, struct& Model)");
T_find_shape_models= dll.api("T_find_shape_models","int(ADDR Image, struct ModelIDs, struct AngleStart, struct AngleExtent, struct MinScore, struct NumMatches, struct MaxOverlap, struct SubPixel, struct NumLevels, struct Greediness, struct& Row, struct& Column, struct& Angle, struct& Score, struct& Model)");
T_find_aniso_shape_model= dll.api("T_find_aniso_shape_model","int(ADDR Image, struct ModelID, struct AngleStart, struct AngleExtent, struct ScaleRMin, struct ScaleRMax, struct ScaleCMin, struct ScaleCMax, struct MinScore, struct NumMatches, struct MaxOverlap, struct SubPixel, struct NumLevels, struct Greediness, struct& Row, struct& Column, struct& Angle, struct& ScaleR, struct& ScaleC, struct& Score)");
T_find_scaled_shape_model= dll.api("T_find_scaled_shape_model","int(ADDR Image, struct ModelID, struct AngleStart, struct AngleExtent, struct ScaleMin, struct ScaleMax, struct MinScore, struct NumMatches, struct MaxOverlap, struct SubPixel, struct NumLevels, struct Greediness, struct& Row, struct& Column, struct& Angle, struct& Scale, struct& Score)");
T_find_shape_model= dll.api("T_find_shape_model","int(ADDR Image, struct ModelID, struct AngleStart, struct AngleExtent, struct MinScore, struct NumMatches, struct MaxOverlap, struct SubPixel, struct NumLevels, struct Greediness, struct& Row, struct& Column, struct& Angle, struct& Score)");
T_set_shape_model_metric= dll.api("T_set_shape_model_metric","int(ADDR Image, struct ModelID, struct HomMat2D, struct Metric)");
T_set_shape_model_param= dll.api("T_set_shape_model_param","int(struct ModelID, struct GenParamName, struct GenParamValue)");
T_create_aniso_shape_model_xld= dll.api("T_create_aniso_shape_model_xld","int(ADDR Contours, struct NumLevels, struct AngleStart, struct AngleExtent, struct AngleStep, struct ScaleRMin, struct ScaleRMax, struct ScaleRStep, struct ScaleCMin, struct ScaleCMax, struct ScaleCStep, struct Optimization, struct Metric, struct MinContrast, struct& ModelID)");
create_aniso_shape_model_xld= dll.api("create_aniso_shape_model_xld","int(ADDR Contours, int NumLevels, double AngleStart, double AngleExtent, double AngleStep, double ScaleRMin, double ScaleRMax, double ScaleRStep, double ScaleCMin, double ScaleCMax, double ScaleCStep, string Optimization, string Metric, int MinContrast, int& ModelID)");
T_create_scaled_shape_model_xld= dll.api("T_create_scaled_shape_model_xld","int(ADDR Contours, struct NumLevels, struct AngleStart, struct AngleExtent, struct AngleStep, struct ScaleMin, struct ScaleMax, struct ScaleStep, struct Optimization, struct Metric, struct MinContrast, struct& ModelID)");
create_scaled_shape_model_xld= dll.api("create_scaled_shape_model_xld","int(ADDR Contours, int NumLevels, double AngleStart, double AngleExtent, double AngleStep, double ScaleMin, double ScaleMax, double ScaleStep, string Optimization, string Metric, int MinContrast, int& ModelID)");
T_create_shape_model_xld= dll.api("T_create_shape_model_xld","int(ADDR Contours, struct NumLevels, struct AngleStart, struct AngleExtent, struct AngleStep, struct Optimization, struct Metric, struct MinContrast, struct& ModelID)");
create_shape_model_xld= dll.api("create_shape_model_xld","int(ADDR Contours, int NumLevels, double AngleStart, double AngleExtent, double AngleStep, string Optimization, string Metric, int MinContrast, int& ModelID)");
T_create_aniso_shape_model= dll.api("T_create_aniso_shape_model","int(ADDR Template, struct NumLevels, struct AngleStart, struct AngleExtent, struct AngleStep, struct ScaleRMin, struct ScaleRMax, struct ScaleRStep, struct ScaleCMin, struct ScaleCMax, struct ScaleCStep, struct Optimization, struct Metric, struct Contrast, struct MinContrast, struct& ModelID)");
create_aniso_shape_model= dll.api("create_aniso_shape_model","int(ADDR Template, int NumLevels, double AngleStart, double AngleExtent, double AngleStep, double ScaleRMin, double ScaleRMax, double ScaleRStep, double ScaleCMin, double ScaleCMax, double ScaleCStep, string Optimization, string Metric, int Contrast, int MinContrast, int& ModelID)");
T_create_scaled_shape_model= dll.api("T_create_scaled_shape_model","int(ADDR Template, struct NumLevels, struct AngleStart, struct AngleExtent, struct AngleStep, struct ScaleMin, struct ScaleMax, struct ScaleStep, struct Optimization, struct Metric, struct Contrast, struct MinContrast, struct& ModelID)");
create_scaled_shape_model= dll.api("create_scaled_shape_model","int(ADDR Template, int NumLevels, double AngleStart, double AngleExtent, double AngleStep, double ScaleMin, double ScaleMax, double ScaleStep, string Optimization, string Metric, int Contrast, int MinContrast, int& ModelID)");
T_create_shape_model= dll.api("T_create_shape_model","int(ADDR Template, struct NumLevels, struct AngleStart, struct AngleExtent, struct AngleStep, struct Optimization, struct Metric, struct Contrast, struct MinContrast, struct& ModelID)");
create_shape_model= dll.api("create_shape_model","int(ADDR Template, int NumLevels, double AngleStart, double AngleExtent, double AngleStep, string Optimization, string Metric, int Contrast, int MinContrast, int& ModelID)");
T_inspect_shape_model= dll.api("T_inspect_shape_model","int(ADDR Image, ADDR& ModelImages, ADDR& ModelRegions, struct NumLevels, struct Contrast)");
inspect_shape_model= dll.api("inspect_shape_model","int(ADDR Image, ADDR& ModelImages, ADDR& ModelRegions, int NumLevels, int Contrast)");
T_clear_all_descriptor_models= dll.api("T_clear_all_descriptor_models","int(void)");
clear_all_descriptor_models= dll.api("clear_all_descriptor_models","int(void)");
T_clear_descriptor_model= dll.api("T_clear_descriptor_model","int(struct ModelID)");
clear_descriptor_model= dll.api("clear_descriptor_model","int(int ModelID)");
T_deserialize_descriptor_model= dll.api("T_deserialize_descriptor_model","int(struct SerializedItemHandle, struct& ModelID)");
deserialize_descriptor_model= dll.api("deserialize_descriptor_model","int(int SerializedItemHandle, int& ModelID)");
T_serialize_descriptor_model= dll.api("T_serialize_descriptor_model","int(struct ModelID, struct& SerializedItemHandle)");
serialize_descriptor_model= dll.api("serialize_descriptor_model","int(int ModelID, int& SerializedItemHandle)");
T_read_descriptor_model= dll.api("T_read_descriptor_model","int(struct FileName, struct& ModelID)");
read_descriptor_model= dll.api("read_descriptor_model","int(string FileName, int& ModelID)");
T_write_descriptor_model= dll.api("T_write_descriptor_model","int(struct ModelID, struct FileName)");
write_descriptor_model= dll.api("write_descriptor_model","int(int ModelID, string FileName)");
T_find_calib_descriptor_model= dll.api("T_find_calib_descriptor_model","int(ADDR Image, struct ModelID, struct DetectorParamName, struct DetectorParamValue, struct DescriptorParamName, struct DescriptorParamValue, struct MinScore, struct NumMatches, struct CamParam, struct ScoreType, struct& Pose, struct& Score)");
T_find_uncalib_descriptor_model= dll.api("T_find_uncalib_descriptor_model","int(ADDR Image, struct ModelID, struct DetectorParamName, struct DetectorParamValue, struct DescriptorParamName, struct DescriptorParamValue, struct MinScore, struct NumMatches, struct ScoreType, struct& HomMat2D, struct& Score)");
T_get_descriptor_model_points= dll.api("T_get_descriptor_model_points","int(struct ModelID, struct Set, struct Subset, struct& Row, struct& Column)");
T_get_descriptor_model_params= dll.api("T_get_descriptor_model_params","int(struct ModelID, struct& DetectorType, struct& DetectorParamName, struct& DetectorParamValue, struct& DescriptorParamName, struct& DescriptorParamValue)");
T_create_calib_descriptor_model= dll.api("T_create_calib_descriptor_model","int(ADDR Template, struct CamParam, struct ReferencePose, struct DetectorType, struct DetectorParamName, struct DetectorParamValue, struct DescriptorParamName, struct DescriptorParamValue, struct Seed, struct& ModelID)");
T_create_uncalib_descriptor_model= dll.api("T_create_uncalib_descriptor_model","int(ADDR Template, struct DetectorType, struct DetectorParamName, struct DetectorParamValue, struct DescriptorParamName, struct DescriptorParamValue, struct Seed, struct& ModelID)");
T_get_descriptor_model_results= dll.api("T_get_descriptor_model_results","int(struct ModelID, struct ObjectID, struct ResultNames, struct& Results)");
get_descriptor_model_results= dll.api("get_descriptor_model_results","int(int ModelID, int ObjectID, string ResultNames, string& Results)");
T_get_descriptor_model_origin= dll.api("T_get_descriptor_model_origin","int(struct ModelID, struct& Row, struct& Column)");
get_descriptor_model_origin= dll.api("get_descriptor_model_origin","int(int ModelID, double& Row, double& Column)");
T_set_descriptor_model_origin= dll.api("T_set_descriptor_model_origin","int(struct ModelID, struct Row, struct Column)");
set_descriptor_model_origin= dll.api("set_descriptor_model_origin","int(int ModelID, double Row, double Column)");
T_get_deformable_model_origin= dll.api("T_get_deformable_model_origin","int(struct ModelID, struct& Row, struct& Column)");
get_deformable_model_origin= dll.api("get_deformable_model_origin","int(int ModelID, double& Row, double& Column)");
T_set_deformable_model_origin= dll.api("T_set_deformable_model_origin","int(struct ModelID, struct Row, struct Column)");
set_deformable_model_origin= dll.api("set_deformable_model_origin","int(int ModelID, double Row, double Column)");
T_set_deformable_model_param= dll.api("T_set_deformable_model_param","int(struct ModelID, struct GenParamName, struct GenParamValue)");
T_get_deformable_model_params= dll.api("T_get_deformable_model_params","int(struct ModelID, struct GenParamName, struct& GenParamValue)");
get_deformable_model_params= dll.api("get_deformable_model_params","int(int ModelID, string GenParamName, string& GenParamValue)");
T_get_deformable_model_contours= dll.api("T_get_deformable_model_contours","int(ADDR& ModelContours, struct ModelID, struct Level)");
get_deformable_model_contours= dll.api("get_deformable_model_contours","int(ADDR& ModelContours, int ModelID, int Level)");
T_determine_deformable_model_params= dll.api("T_determine_deformable_model_params","int(ADDR Template, struct NumLevels, struct AngleStart, struct AngleExtent, struct ScaleMin, struct ScaleMax, struct Optimization, struct Metric, struct Contrast, struct MinContrast, struct GenParamName, struct GenParamValue, struct Parameters, struct& ParameterName, struct& ParameterValue)");
T_deserialize_deformable_model= dll.api("T_deserialize_deformable_model","int(struct SerializedItemHandle, struct& ModelID)");
deserialize_deformable_model= dll.api("deserialize_deformable_model","int(int SerializedItemHandle, int& ModelID)");
T_serialize_deformable_model= dll.api("T_serialize_deformable_model","int(struct ModelID, struct& SerializedItemHandle)");
serialize_deformable_model= dll.api("serialize_deformable_model","int(int ModelID, int& SerializedItemHandle)");
T_read_deformable_model= dll.api("T_read_deformable_model","int(struct FileName, struct& ModelID)");
read_deformable_model= dll.api("read_deformable_model","int(string FileName, int& ModelID)");
T_write_deformable_model= dll.api("T_write_deformable_model","int(struct ModelID, struct FileName)");
write_deformable_model= dll.api("write_deformable_model","int(int ModelID, string FileName)");
T_clear_all_deformable_models= dll.api("T_clear_all_deformable_models","int(void)");
clear_all_deformable_models= dll.api("clear_all_deformable_models","int(void)");
T_clear_deformable_model= dll.api("T_clear_deformable_model","int(struct ModelID)");
clear_deformable_model= dll.api("clear_deformable_model","int(int ModelID)");
T_find_local_deformable_model= dll.api("T_find_local_deformable_model","int(ADDR Image, ADDR& ImageRectified, ADDR& VectorField, ADDR& DeformedContours, struct ModelID, struct AngleStart, struct AngleExtent, struct ScaleRMin, struct ScaleRMax, struct ScaleCMin, struct ScaleCMax, struct MinScore, struct NumMatches, struct MaxOverlap, struct NumLevels, struct Greediness, struct ResultType, struct GenParamName, struct GenParamValue, struct& Score, struct& Row, struct& Column)");
T_find_planar_calib_deformable_model= dll.api("T_find_planar_calib_deformable_model","int(ADDR Image, struct ModelID, struct AngleStart, struct AngleExtent, struct ScaleRMin, struct ScaleRMax, struct ScaleCMin, struct ScaleCMax, struct MinScore, struct NumMatches, struct MaxOverlap, struct NumLevels, struct Greediness, struct GenParamName, struct GenParamValue, struct& Pose, struct& CovPose, struct& Score)");
T_find_planar_uncalib_deformable_model= dll.api("T_find_planar_uncalib_deformable_model","int(ADDR Image, struct ModelID, struct AngleStart, struct AngleExtent, struct ScaleRMin, struct ScaleRMax, struct ScaleCMin, struct ScaleCMax, struct MinScore, struct NumMatches, struct MaxOverlap, struct NumLevels, struct Greediness, struct GenParamName, struct GenParamValue, struct& HomMat2D, struct& Score)");
T_set_local_deformable_model_metric= dll.api("T_set_local_deformable_model_metric","int(ADDR Image, ADDR VectorField, struct ModelID, struct Metric)");
set_local_deformable_model_metric= dll.api("set_local_deformable_model_metric","int(ADDR Image, ADDR VectorField, int ModelID, string Metric)");
T_set_planar_calib_deformable_model_metric= dll.api("T_set_planar_calib_deformable_model_metric","int(ADDR Image, struct ModelID, struct Pose, struct Metric)");
T_set_planar_uncalib_deformable_model_metric= dll.api("T_set_planar_uncalib_deformable_model_metric","int(ADDR Image, struct ModelID, struct HomMat2D, struct Metric)");
T_create_local_deformable_model_xld= dll.api("T_create_local_deformable_model_xld","int(ADDR Contours, struct NumLevels, struct AngleStart, struct AngleExtent, struct AngleStep, struct ScaleRMin, struct ScaleRMax, struct ScaleRStep, struct ScaleCMin, struct ScaleCMax, struct ScaleCStep, struct Optimization, struct Metric, struct MinContrast, struct GenParamName, struct GenParamValue, struct& ModelID)");
T_create_planar_calib_deformable_model_xld= dll.api("T_create_planar_calib_deformable_model_xld","int(ADDR Contours, struct CamParam, struct ReferencePose, struct NumLevels, struct AngleStart, struct AngleExtent, struct AngleStep, struct ScaleRMin, struct ScaleRMax, struct ScaleRStep, struct ScaleCMin, struct ScaleCMax, struct ScaleCStep, struct Optimization, struct Metric, struct MinContrast, struct GenParamName, struct GenParamValue, struct& ModelID)");
T_create_planar_uncalib_deformable_model_xld= dll.api("T_create_planar_uncalib_deformable_model_xld","int(ADDR Contours, struct NumLevels, struct AngleStart, struct AngleExtent, struct AngleStep, struct ScaleRMin, struct ScaleRMax, struct ScaleRStep, struct ScaleCMin, struct ScaleCMax, struct ScaleCStep, struct Optimization, struct Metric, struct MinContrast, struct GenParamName, struct GenParamValue, struct& ModelID)");
T_create_local_deformable_model= dll.api("T_create_local_deformable_model","int(ADDR Template, struct NumLevels, struct AngleStart, struct AngleExtent, struct AngleStep, struct ScaleRMin, struct ScaleRMax, struct ScaleRStep, struct ScaleCMin, struct ScaleCMax, struct ScaleCStep, struct Optimization, struct Metric, struct Contrast, struct MinContrast, struct GenParamName, struct GenParamValue, struct& ModelID)");
T_create_planar_calib_deformable_model= dll.api("T_create_planar_calib_deformable_model","int(ADDR Template, struct CamParam, struct ReferencePose, struct NumLevels, struct AngleStart, struct AngleExtent, struct AngleStep, struct ScaleRMin, struct ScaleRMax, struct ScaleRStep, struct ScaleCMin, struct ScaleCMax, struct ScaleCStep, struct Optimization, struct Metric, struct Contrast, struct MinContrast, struct GenParamName, struct GenParamValue, struct& ModelID)");
T_create_planar_uncalib_deformable_model= dll.api("T_create_planar_uncalib_deformable_model","int(ADDR Template, struct NumLevels, struct AngleStart, struct AngleExtent, struct AngleStep, struct ScaleRMin, struct ScaleRMax, struct ScaleRStep, struct ScaleCMin, struct ScaleCMax, struct ScaleCStep, struct Optimization, struct Metric, struct Contrast, struct MinContrast, struct GenParamName, struct GenParamValue, struct& ModelID)");
T_clear_all_ncc_models= dll.api("T_clear_all_ncc_models","int(void)");
clear_all_ncc_models= dll.api("clear_all_ncc_models","int(void)");
T_clear_ncc_model= dll.api("T_clear_ncc_model","int(struct ModelID)");
clear_ncc_model= dll.api("clear_ncc_model","int(int ModelID)");
T_deserialize_ncc_model= dll.api("T_deserialize_ncc_model","int(struct SerializedItemHandle, struct& ModelID)");
deserialize_ncc_model= dll.api("deserialize_ncc_model","int(int SerializedItemHandle, int& ModelID)");
T_serialize_ncc_model= dll.api("T_serialize_ncc_model","int(struct ModelID, struct& SerializedItemHandle)");
serialize_ncc_model= dll.api("serialize_ncc_model","int(int ModelID, int& SerializedItemHandle)");
T_read_ncc_model= dll.api("T_read_ncc_model","int(struct FileName, struct& ModelID)");
read_ncc_model= dll.api("read_ncc_model","int(string FileName, int& ModelID)");
T_write_ncc_model= dll.api("T_write_ncc_model","int(struct ModelID, struct FileName)");
write_ncc_model= dll.api("write_ncc_model","int(int ModelID, string FileName)");
T_determine_ncc_model_params= dll.api("T_determine_ncc_model_params","int(ADDR Template, struct NumLevels, struct AngleStart, struct AngleExtent, struct Metric, struct Parameters, struct& ParameterName, struct& ParameterValue)");
T_get_ncc_model_params= dll.api("T_get_ncc_model_params","int(struct ModelID, struct& NumLevels, struct& AngleStart, struct& AngleExtent, struct& AngleStep, struct& Metric)");
get_ncc_model_params= dll.api("get_ncc_model_params","int(int ModelID, int& NumLevels, double& AngleStart, double& AngleExtent, double& AngleStep, string& Metric)");
T_get_ncc_model_origin= dll.api("T_get_ncc_model_origin","int(struct ModelID, struct& Row, struct& Column)");
get_ncc_model_origin= dll.api("get_ncc_model_origin","int(int ModelID, double& Row, double& Column)");
T_set_ncc_model_origin= dll.api("T_set_ncc_model_origin","int(struct ModelID, struct Row, struct Column)");
set_ncc_model_origin= dll.api("set_ncc_model_origin","int(int ModelID, double Row, double Column)");
T_find_ncc_model= dll.api("T_find_ncc_model","int(ADDR Image, struct ModelID, struct AngleStart, struct AngleExtent, struct MinScore, struct NumMatches, struct MaxOverlap, struct SubPixel, struct NumLevels, struct& Row, struct& Column, struct& Angle, struct& Score)");
T_set_ncc_model_param= dll.api("T_set_ncc_model_param","int(struct ModelID, struct GenParamName, struct GenParamValue)");
T_create_ncc_model= dll.api("T_create_ncc_model","int(ADDR Template, struct NumLevels, struct AngleStart, struct AngleExtent, struct AngleStep, struct Metric, struct& ModelID)");
create_ncc_model= dll.api("create_ncc_model","int(ADDR Template, int NumLevels, double AngleStart, double AngleExtent, double AngleStep, string Metric, int& ModelID)");
T_get_found_component_model= dll.api("T_get_found_component_model","int(ADDR& FoundComponents, struct ComponentModelID, struct ModelStart, struct ModelEnd, struct RowComp, struct ColumnComp, struct AngleComp, struct ScoreComp, struct ModelComp, struct ModelMatch, struct MarkOrientation, struct& RowCompInst, struct& ColumnCompInst, struct& AngleCompInst, struct& ScoreCompInst)");
get_found_component_model= dll.api("get_found_component_model","int(ADDR& FoundComponents, int ComponentModelID, int ModelStart, int ModelEnd, double RowComp, double ColumnComp, double AngleComp, double ScoreComp, int ModelComp, int ModelMatch, string MarkOrientation, double& RowCompInst, double& ColumnCompInst, double& AngleCompInst, double& ScoreCompInst)");
T_find_component_model= dll.api("T_find_component_model","int(ADDR Image, struct ComponentModelID, struct RootComponent, struct AngleStartRoot, struct AngleExtentRoot, struct MinScore, struct NumMatches, struct MaxOverlap, struct IfRootNotFound, struct IfComponentNotFound, struct PosePrediction, struct MinScoreComp, struct SubPixelComp, struct NumLevelsComp, struct GreedinessComp, struct& ModelStart, struct& ModelEnd, struct& Score, struct& RowComp, struct& ColumnComp, struct& AngleComp, struct& ScoreComp, struct& ModelComp)");
find_component_model= dll.api("find_component_model","int(ADDR Image, int ComponentModelID, int RootComponent, double AngleStartRoot, double AngleExtentRoot, double MinScore, int NumMatches, double MaxOverlap, string IfRootNotFound, string IfComponentNotFound, string PosePrediction, double MinScoreComp, string SubPixelComp, int NumLevelsComp, double GreedinessComp, int& ModelStart, int& ModelEnd, double& Score, double& RowComp, double& ColumnComp, double& AngleComp, double& ScoreComp, int& ModelComp)");
T_clear_all_component_models= dll.api("T_clear_all_component_models","int(void)");
clear_all_component_models= dll.api("clear_all_component_models","int(void)");
T_clear_component_model= dll.api("T_clear_component_model","int(struct ComponentModelID)");
clear_component_model= dll.api("clear_component_model","int(int ComponentModelID)");
T_get_component_model_tree= dll.api("T_get_component_model_tree","int(ADDR& Tree, ADDR& Relations, struct ComponentModelID, struct RootComponent, struct Image, struct& StartNode, struct& EndNode, struct& Row, struct& Column, struct& Phi, struct& Length1, struct& Length2, struct& AngleStart, struct& AngleExtent)");
get_component_model_tree= dll.api("get_component_model_tree","int(ADDR& Tree, ADDR& Relations, int ComponentModelID, int RootComponent, string Image, int& StartNode, int& EndNode, double& Row, double& Column, double& Phi, double& Length1, double& Length2, double& AngleStart, double& AngleExtent)");
T_get_component_model_params= dll.api("T_get_component_model_params","int(struct ComponentModelID, struct& MinScoreComp, struct& RootRanking, struct& ShapeModelIDs)");
get_component_model_params= dll.api("get_component_model_params","int(int ComponentModelID, double& MinScoreComp, int& RootRanking, int& ShapeModelIDs)");
T_deserialize_component_model= dll.api("T_deserialize_component_model","int(struct SerializedItemHandle, struct& ComponentModelID)");
deserialize_component_model= dll.api("deserialize_component_model","int(int SerializedItemHandle, int& ComponentModelID)");
T_serialize_component_model= dll.api("T_serialize_component_model","int(struct ComponentModelID, struct& SerializedItemHandle)");
serialize_component_model= dll.api("serialize_component_model","int(int ComponentModelID, int& SerializedItemHandle)");
T_read_component_model= dll.api("T_read_component_model","int(struct FileName, struct& ComponentModelID)");
read_component_model= dll.api("read_component_model","int(string FileName, int& ComponentModelID)");
T_write_component_model= dll.api("T_write_component_model","int(struct ComponentModelID, struct FileName)");
write_component_model= dll.api("write_component_model","int(int ComponentModelID, string FileName)");
T_create_component_model= dll.api("T_create_component_model","int(ADDR ModelImage, ADDR ComponentRegions, struct VariationRow, struct VariationColumn, struct VariationAngle, struct AngleStart, struct AngleExtent, struct ContrastLowComp, struct ContrastHighComp, struct MinSizeComp, struct MinContrastComp, struct MinScoreComp, struct NumLevelsComp, struct AngleStepComp, struct OptimizationComp, struct MetricComp, struct PregenerationComp, struct& ComponentModelID, struct& RootRanking)");
create_component_model= dll.api("create_component_model","int(ADDR ModelImage, ADDR ComponentRegions, int VariationRow, int VariationColumn, double VariationAngle, double AngleStart, double AngleExtent, int ContrastLowComp, int ContrastHighComp, int MinSizeComp, int MinContrastComp, double MinScoreComp, int NumLevelsComp, double AngleStepComp, string OptimizationComp, string MetricComp, string PregenerationComp, int& ComponentModelID, int& RootRanking)");
T_create_trained_component_model= dll.api("T_create_trained_component_model","int(struct ComponentTrainingID, struct AngleStart, struct AngleExtent, struct MinContrastComp, struct MinScoreComp, struct NumLevelsComp, struct AngleStepComp, struct OptimizationComp, struct MetricComp, struct PregenerationComp, struct& ComponentModelID, struct& RootRanking)");
create_trained_component_model= dll.api("create_trained_component_model","int(int ComponentTrainingID, double AngleStart, double AngleExtent, int MinContrastComp, double MinScoreComp, int NumLevelsComp, double AngleStepComp, string OptimizationComp, string MetricComp, string PregenerationComp, int& ComponentModelID, int& RootRanking)");
T_clear_all_training_components= dll.api("T_clear_all_training_components","int(void)");
clear_all_training_components= dll.api("clear_all_training_components","int(void)");
T_clear_training_components= dll.api("T_clear_training_components","int(struct ComponentTrainingID)");
clear_training_components= dll.api("clear_training_components","int(int ComponentTrainingID)");
T_get_component_relations= dll.api("T_get_component_relations","int(ADDR& Relations, struct ComponentTrainingID, struct ReferenceComponent, struct Image, struct& Row, struct& Column, struct& Phi, struct& Length1, struct& Length2, struct& AngleStart, struct& AngleExtent)");
get_component_relations= dll.api("get_component_relations","int(ADDR& Relations, int ComponentTrainingID, int ReferenceComponent, string Image, double& Row, double& Column, double& Phi, double& Length1, double& Length2, double& AngleStart, double& AngleExtent)");
T_get_training_components= dll.api("T_get_training_components","int(ADDR& TrainingComponents, struct ComponentTrainingID, struct Components, struct Image, struct MarkOrientation, struct& Row, struct& Column, struct& Angle, struct& Score)");
get_training_components= dll.api("get_training_components","int(ADDR& TrainingComponents, int ComponentTrainingID, string Components, string Image, string MarkOrientation, double& Row, double& Column, double& Angle, double& Score)");
T_modify_component_relations= dll.api("T_modify_component_relations","int(struct ComponentTrainingID, struct ReferenceComponent, struct ToleranceComponent, struct PositionTolerance, struct AngleTolerance)");
modify_component_relations= dll.api("modify_component_relations","int(int ComponentTrainingID, string ReferenceComponent, string ToleranceComponent, double PositionTolerance, double AngleTolerance)");
T_deserialize_training_components= dll.api("T_deserialize_training_components","int(struct SerializedItemHandle, struct& ComponentTrainingID)");
deserialize_training_components= dll.api("deserialize_training_components","int(int SerializedItemHandle, int& ComponentTrainingID)");
T_serialize_training_components= dll.api("T_serialize_training_components","int(struct ComponentTrainingID, struct& SerializedItemHandle)");
serialize_training_components= dll.api("serialize_training_components","int(int ComponentTrainingID, int& SerializedItemHandle)");
T_read_training_components= dll.api("T_read_training_components","int(struct FileName, struct& ComponentTrainingID)");
read_training_components= dll.api("read_training_components","int(string FileName, int& ComponentTrainingID)");
T_write_training_components= dll.api("T_write_training_components","int(struct ComponentTrainingID, struct FileName)");
write_training_components= dll.api("write_training_components","int(int ComponentTrainingID, string FileName)");
T_cluster_model_components= dll.api("T_cluster_model_components","int(ADDR TrainingImages, ADDR& ModelComponents, struct ComponentTrainingID, struct AmbiguityCriterion, struct MaxContourOverlap, struct ClusterThreshold)");
cluster_model_components= dll.api("cluster_model_components","int(ADDR TrainingImages, ADDR& ModelComponents, int ComponentTrainingID, string AmbiguityCriterion, double MaxContourOverlap, double ClusterThreshold)");
T_inspect_clustered_components= dll.api("T_inspect_clustered_components","int(ADDR& ModelComponents, struct ComponentTrainingID, struct AmbiguityCriterion, struct MaxContourOverlap, struct ClusterThreshold)");
inspect_clustered_components= dll.api("inspect_clustered_components","int(ADDR& ModelComponents, int ComponentTrainingID, string AmbiguityCriterion, double MaxContourOverlap, double ClusterThreshold)");
T_train_model_components= dll.api("T_train_model_components","int(ADDR ModelImage, ADDR InitialComponents, ADDR TrainingImages, ADDR& ModelComponents, struct ContrastLow, struct ContrastHigh, struct MinSize, struct MinScore, struct SearchRowTol, struct SearchColumnTol, struct SearchAngleTol, struct TrainingEmphasis, struct AmbiguityCriterion, struct MaxContourOverlap, struct ClusterThreshold, struct& ComponentTrainingID)");
train_model_components= dll.api("train_model_components","int(ADDR ModelImage, ADDR InitialComponents, ADDR TrainingImages, ADDR& ModelComponents, int ContrastLow, int ContrastHigh, int MinSize, double MinScore, int SearchRowTol, int SearchColumnTol, double SearchAngleTol, string TrainingEmphasis, string AmbiguityCriterion, double MaxContourOverlap, double ClusterThreshold, int& ComponentTrainingID)");
T_gen_initial_components= dll.api("T_gen_initial_components","int(ADDR ModelImage, ADDR& InitialComponents, struct ContrastLow, struct ContrastHigh, struct MinSize, struct Mode, struct GenericName, struct GenericValue)");
gen_initial_components= dll.api("gen_initial_components","int(ADDR ModelImage, ADDR& InitialComponents, int ContrastLow, int ContrastHigh, int MinSize, string Mode, string GenericName, double GenericValue)");
T_get_deformable_surface_matching_result= dll.api("T_get_deformable_surface_matching_result","int(struct DeformableSurfaceMatchingResult, struct ResultName, struct ResultIndex, struct& ResultValue)");
get_deformable_surface_matching_result= dll.api("get_deformable_surface_matching_result","int(int DeformableSurfaceMatchingResult, string ResultName, int ResultIndex, int& ResultValue)");
T_clear_deformable_surface_matching_result= dll.api("T_clear_deformable_surface_matching_result","int(struct DeformableSurfaceMatchingResult)");
clear_deformable_surface_matching_result= dll.api("clear_deformable_surface_matching_result","int(int DeformableSurfaceMatchingResult)");
T_clear_deformable_surface_model= dll.api("T_clear_deformable_surface_model","int(struct DeformableSurfaceModel)");
clear_deformable_surface_model= dll.api("clear_deformable_surface_model","int(int DeformableSurfaceModel)");
T_deserialize_deformable_surface_model= dll.api("T_deserialize_deformable_surface_model","int(struct SerializedItemHandle, struct& DeformableSurfaceModel)");
deserialize_deformable_surface_model= dll.api("deserialize_deformable_surface_model","int(int SerializedItemHandle, int& DeformableSurfaceModel)");
T_serialize_deformable_surface_model= dll.api("T_serialize_deformable_surface_model","int(struct DeformableSurfaceModel, struct& SerializedItemHandle)");
serialize_deformable_surface_model= dll.api("serialize_deformable_surface_model","int(int DeformableSurfaceModel, int& SerializedItemHandle)");
T_read_deformable_surface_model= dll.api("T_read_deformable_surface_model","int(struct FileName, struct& DeformableSurfaceModel)");
read_deformable_surface_model= dll.api("read_deformable_surface_model","int(string FileName, int& DeformableSurfaceModel)");
T_write_deformable_surface_model= dll.api("T_write_deformable_surface_model","int(struct DeformableSurfaceModel, struct FileName)");
write_deformable_surface_model= dll.api("write_deformable_surface_model","int(int DeformableSurfaceModel, string FileName)");
T_refine_deformable_surface_model= dll.api("T_refine_deformable_surface_model","int(struct DeformableSurfaceModel, struct ObjectModel3D, struct RelSamplingDistance, struct InitialDeformationObjectModel3D, struct GenParamName, struct GenParamValue, struct& Score, struct& DeformableSurfaceMatchingResult)");
refine_deformable_surface_model= dll.api("refine_deformable_surface_model","int(int DeformableSurfaceModel, int ObjectModel3D, double RelSamplingDistance, int InitialDeformationObjectModel3D, string GenParamName, string GenParamValue, double& Score, int& DeformableSurfaceMatchingResult)");
T_find_deformable_surface_model= dll.api("T_find_deformable_surface_model","int(struct DeformableSurfaceModel, struct ObjectModel3D, struct RelSamplingDistance, struct MinScore, struct GenParamName, struct GenParamValue, struct& Score, struct& DeformableSurfaceMatchingResult)");
T_get_deformable_surface_model_param= dll.api("T_get_deformable_surface_model_param","int(struct DeformableSurfaceModel, struct GenParamName, struct& GenParamValue)");
get_deformable_surface_model_param= dll.api("get_deformable_surface_model_param","int(int DeformableSurfaceModel, string GenParamName, double& GenParamValue)");
T_add_deformable_surface_model_reference_point= dll.api("T_add_deformable_surface_model_reference_point","int(struct DeformableSurfaceModel, struct ReferencePointX, struct ReferencePointY, struct ReferencePointZ, struct& ReferencePointIndex)");
add_deformable_surface_model_reference_point= dll.api("add_deformable_surface_model_reference_point","int(int DeformableSurfaceModel, double ReferencePointX, double ReferencePointY, double ReferencePointZ, int& ReferencePointIndex)");
T_add_deformable_surface_model_sample= dll.api("T_add_deformable_surface_model_sample","int(struct DeformableSurfaceModel, struct ObjectModel3D)");
add_deformable_surface_model_sample= dll.api("add_deformable_surface_model_sample","int(int DeformableSurfaceModel, int ObjectModel3D)");
T_create_deformable_surface_model= dll.api("T_create_deformable_surface_model","int(struct ObjectModel3D, struct RelSamplingDistance, struct GenParamName, struct GenParamValue, struct& DeformableSurfaceModel)");
create_deformable_surface_model= dll.api("create_deformable_surface_model","int(int ObjectModel3D, double RelSamplingDistance, string GenParamName, string GenParamValue, int& DeformableSurfaceModel)");
T_get_surface_matching_result= dll.api("T_get_surface_matching_result","int(struct SurfaceMatchingResultID, struct ResultName, struct ResultIndex, struct& ResultValue)");
get_surface_matching_result= dll.api("get_surface_matching_result","int(int SurfaceMatchingResultID, string ResultName, int ResultIndex, int& ResultValue)");
T_clear_all_surface_matching_results= dll.api("T_clear_all_surface_matching_results","int(void)");
clear_all_surface_matching_results= dll.api("clear_all_surface_matching_results","int(void)");
T_clear_surface_matching_result= dll.api("T_clear_surface_matching_result","int(struct SurfaceMatchingResultID)");
clear_surface_matching_result= dll.api("clear_surface_matching_result","int(int SurfaceMatchingResultID)");
T_clear_all_surface_models= dll.api("T_clear_all_surface_models","int(void)");
clear_all_surface_models= dll.api("clear_all_surface_models","int(void)");
T_clear_surface_model= dll.api("T_clear_surface_model","int(struct SurfaceModelID)");
clear_surface_model= dll.api("clear_surface_model","int(int SurfaceModelID)");
T_deserialize_surface_model= dll.api("T_deserialize_surface_model","int(struct SerializedItemHandle, struct& SurfaceModelID)");
deserialize_surface_model= dll.api("deserialize_surface_model","int(int SerializedItemHandle, int& SurfaceModelID)");
T_serialize_surface_model= dll.api("T_serialize_surface_model","int(struct SurfaceModelID, struct& SerializedItemHandle)");
serialize_surface_model= dll.api("serialize_surface_model","int(int SurfaceModelID, int& SerializedItemHandle)");
T_read_surface_model= dll.api("T_read_surface_model","int(struct FileName, struct& SurfaceModelID)");
read_surface_model= dll.api("read_surface_model","int(string FileName, int& SurfaceModelID)");
T_write_surface_model= dll.api("T_write_surface_model","int(struct SurfaceModelID, struct FileName)");
write_surface_model= dll.api("write_surface_model","int(int SurfaceModelID, string FileName)");
T_refine_surface_model_pose= dll.api("T_refine_surface_model_pose","int(struct SurfaceModelID, struct ObjectModel3D, struct InitialPose, struct MinScore, struct ReturnResultHandle, struct GenParamName, struct GenParamValue, struct& Pose, struct& Score, struct& SurfaceMatchingResultID)");
T_find_surface_model= dll.api("T_find_surface_model","int(struct SurfaceModelID, struct ObjectModel3D, struct RelSamplingDistance, struct KeyPointFraction, struct MinScore, struct ReturnResultHandle, struct GenParamName, struct GenParamValue, struct& Pose, struct& Score, struct& SurfaceMatchingResultID)");
T_get_surface_model_param= dll.api("T_get_surface_model_param","int(struct SurfaceModelID, struct GenParamName, struct& GenParamValue)");
get_surface_model_param= dll.api("get_surface_model_param","int(int SurfaceModelID, string GenParamName, double& GenParamValue)");
T_create_surface_model= dll.api("T_create_surface_model","int(struct ObjectModel3D, struct RelSamplingDistance, struct GenParamName, struct GenParamValue, struct& SurfaceModelID)");
create_surface_model= dll.api("create_surface_model","int(int ObjectModel3D, double RelSamplingDistance, string GenParamName, string GenParamValue, int& SurfaceModelID)");
T_create_cam_pose_look_at_point= dll.api("T_create_cam_pose_look_at_point","int(struct CamPosX, struct CamPosY, struct CamPosZ, struct LookAtX, struct LookAtY, struct LookAtZ, struct RefPlaneNormal, struct CamRoll, struct& CamPose)");
T_convert_point_3d_spher_to_cart= dll.api("T_convert_point_3d_spher_to_cart","int(struct Longitude, struct Latitude, struct Radius, struct EquatPlaneNormal, struct ZeroMeridian, struct& X, struct& Y, struct& Z)");
convert_point_3d_spher_to_cart= dll.api("convert_point_3d_spher_to_cart","int(double Longitude, double Latitude, double Radius, string EquatPlaneNormal, string ZeroMeridian, double& X, double& Y, double& Z)");
T_convert_point_3d_cart_to_spher= dll.api("T_convert_point_3d_cart_to_spher","int(struct X, struct Y, struct Z, struct EquatPlaneNormal, struct ZeroMeridian, struct& Longitude, struct& Latitude, struct& Radius)");
convert_point_3d_cart_to_spher= dll.api("convert_point_3d_cart_to_spher","int(double X, double Y, double Z, string EquatPlaneNormal, string ZeroMeridian, double& Longitude, double& Latitude, double& Radius)");
T_clear_all_shape_model_3d= dll.api("T_clear_all_shape_model_3d","int(void)");
clear_all_shape_model_3d= dll.api("clear_all_shape_model_3d","int(void)");
T_clear_shape_model_3d= dll.api("T_clear_shape_model_3d","int(struct ShapeModel3DID)");
clear_shape_model_3d= dll.api("clear_shape_model_3d","int(int ShapeModel3DID)");
T_deserialize_shape_model_3d= dll.api("T_deserialize_shape_model_3d","int(struct SerializedItemHandle, struct& ShapeModel3DID)");
deserialize_shape_model_3d= dll.api("deserialize_shape_model_3d","int(int SerializedItemHandle, int& ShapeModel3DID)");
T_serialize_shape_model_3d= dll.api("T_serialize_shape_model_3d","int(struct ShapeModel3DID, struct& SerializedItemHandle)");
serialize_shape_model_3d= dll.api("serialize_shape_model_3d","int(int ShapeModel3DID, int& SerializedItemHandle)");
T_read_shape_model_3d= dll.api("T_read_shape_model_3d","int(struct FileName, struct& ShapeModel3DID)");
read_shape_model_3d= dll.api("read_shape_model_3d","int(string FileName, int& ShapeModel3DID)");
T_write_shape_model_3d= dll.api("T_write_shape_model_3d","int(struct ShapeModel3DID, struct FileName)");
write_shape_model_3d= dll.api("write_shape_model_3d","int(int ShapeModel3DID, string FileName)");
T_trans_pose_shape_model_3d= dll.api("T_trans_pose_shape_model_3d","int(struct ShapeModel3DID, struct PoseIn, struct Transformation, struct& PoseOut)");
T_project_shape_model_3d= dll.api("T_project_shape_model_3d","int(ADDR& ModelContours, struct ShapeModel3DID, struct CamParam, struct Pose, struct HiddenSurfaceRemoval, struct MinFaceAngle)");
T_get_shape_model_3d_contours= dll.api("T_get_shape_model_3d_contours","int(ADDR& ModelContours, struct ShapeModel3DID, struct Level, struct View, struct& ViewPose)");
T_get_shape_model_3d_params= dll.api("T_get_shape_model_3d_params","int(struct ShapeModel3DID, struct GenParamName, struct& GenParamValue)");
get_shape_model_3d_params= dll.api("get_shape_model_3d_params","int(int ShapeModel3DID, string GenParamName, string& GenParamValue)");
T_find_shape_model_3d= dll.api("T_find_shape_model_3d","int(ADDR Image, struct ShapeModel3DID, struct MinScore, struct Greediness, struct NumLevels, struct GenParamName, struct GenParamValue, struct& Pose, struct& CovPose, struct& Score)");
T_create_shape_model_3d= dll.api("T_create_shape_model_3d","int(struct ObjectModel3D, struct CamParam, struct RefRotX, struct RefRotY, struct RefRotZ, struct OrderOfRotation, struct LongitudeMin, struct LongitudeMax, struct LatitudeMin, struct LatitudeMax, struct CamRollMin, struct CamRollMax, struct DistMin, struct DistMax, struct MinContrast, struct GenParamName, struct GenParamValue, struct& ShapeModel3DID)");
T_simplify_object_model_3d= dll.api("T_simplify_object_model_3d","int(struct ObjectModel3D, struct Method, struct Amount, struct GenParamName, struct GenParamValue, struct& SimplifiedObjectModel3D)");
T_distance_object_model_3d= dll.api("T_distance_object_model_3d","int(struct ObjectModel3DFrom, struct ObjectModel3DTo, struct Pose, struct MaxDistance, struct GenParamName, struct GenParamValue)");
T_union_object_model_3d= dll.api("T_union_object_model_3d","int(struct ObjectModels3D, struct Method, struct& UnionObjectModel3D)");
union_object_model_3d= dll.api("union_object_model_3d","int(int ObjectModels3D, string Method, int& UnionObjectModel3D)");
T_set_object_model_3d_attrib_mod= dll.api("T_set_object_model_3d_attrib_mod","int(struct ObjectModel3D, struct AttribName, struct AttachExtAttribTo, struct AttribValues)");
set_object_model_3d_attrib_mod= dll.api("set_object_model_3d_attrib_mod","int(int ObjectModel3D, string AttribName, string AttachExtAttribTo, double AttribValues)");
T_set_object_model_3d_attrib= dll.api("T_set_object_model_3d_attrib","int(struct ObjectModel3D, struct AttribName, struct AttachExtAttribTo, struct AttribValues, struct& ObjectModel3DOut)");
set_object_model_3d_attrib= dll.api("set_object_model_3d_attrib","int(int ObjectModel3D, string AttribName, string AttachExtAttribTo, double AttribValues, int& ObjectModel3DOut)");
T_gen_empty_object_model_3d= dll.api("T_gen_empty_object_model_3d","int(struct& EmptyObjectModel3D)");
gen_empty_object_model_3d= dll.api("gen_empty_object_model_3d","int(int& EmptyObjectModel3D)");
T_sample_object_model_3d= dll.api("T_sample_object_model_3d","int(struct ObjectModel3D, struct Method, struct SampleDistance, struct GenParamName, struct GenParamValue, struct& SampledObjectModel3D)");
T_register_object_model_3d_global= dll.api("T_register_object_model_3d_global","int(struct ObjectModels3D, struct HomMats3D, struct From, struct To, struct GenParamName, struct GenParamValue, struct& HomMats3DOut, struct& Scores)");
T_register_object_model_3d_pair= dll.api("T_register_object_model_3d_pair","int(struct ObjectModel3D1, struct ObjectModel3D2, struct Method, struct GenParamName, struct GenParamValue, struct& Pose, struct& Score)");
T_gen_object_model_3d_from_points= dll.api("T_gen_object_model_3d_from_points","int(struct X, struct Y, struct Z, struct& ObjectModel3D)");
gen_object_model_3d_from_points= dll.api("gen_object_model_3d_from_points","int(double X, double Y, double Z, int& ObjectModel3D)");
T_gen_box_object_model_3d= dll.api("T_gen_box_object_model_3d","int(struct Pose, struct LengthX, struct LengthY, struct LengthZ, struct& ObjectModel3D)");
T_gen_plane_object_model_3d= dll.api("T_gen_plane_object_model_3d","int(struct Pose, struct XExtent, struct YExtent, struct& ObjectModel3D)");
T_gen_sphere_object_model_3d_center= dll.api("T_gen_sphere_object_model_3d_center","int(struct X, struct Y, struct Z, struct Radius, struct& ObjectModel3D)");
gen_sphere_object_model_3d_center= dll.api("gen_sphere_object_model_3d_center","int(double X, double Y, double Z, double Radius, int& ObjectModel3D)");
T_gen_sphere_object_model_3d= dll.api("T_gen_sphere_object_model_3d","int(struct Pose, struct Radius, struct& ObjectModel3D)");
T_gen_cylinder_object_model_3d= dll.api("T_gen_cylinder_object_model_3d","int(struct Pose, struct Radius, struct MinExtent, struct MaxExtent, struct& ObjectModel3D)");
T_smallest_bounding_box_object_model_3d= dll.api("T_smallest_bounding_box_object_model_3d","int(struct ObjectModel3D, struct Type, struct& Pose, struct& Length1, struct& Length2, struct& Length3)");
T_smallest_sphere_object_model_3d= dll.api("T_smallest_sphere_object_model_3d","int(struct ObjectModel3D, struct& CenterPoint, struct& Radius)");
T_intersect_plane_object_model_3d= dll.api("T_intersect_plane_object_model_3d","int(struct ObjectModel3D, struct Plane, struct& ObjectModel3DIntersection)");
T_convex_hull_object_model_3d= dll.api("T_convex_hull_object_model_3d","int(struct ObjectModel3D, struct& ObjectModel3DConvexHull)");
convex_hull_object_model_3d= dll.api("convex_hull_object_model_3d","int(int ObjectModel3D, int& ObjectModel3DConvexHull)");
T_select_object_model_3d= dll.api("T_select_object_model_3d","int(struct ObjectModel3D, struct Feature, struct Operation, struct MinValue, struct MaxValue, struct& ObjectModel3DSelected)");
select_object_model_3d= dll.api("select_object_model_3d","int(int ObjectModel3D, string Feature, string Operation, double MinValue, double MaxValue, int& ObjectModel3DSelected)");
T_area_object_model_3d= dll.api("T_area_object_model_3d","int(struct ObjectModel3D, struct& Area)");
area_object_model_3d= dll.api("area_object_model_3d","int(int ObjectModel3D, double& Area)");
T_max_diameter_object_model_3d= dll.api("T_max_diameter_object_model_3d","int(struct ObjectModel3D, struct& Diameter)");
max_diameter_object_model_3d= dll.api("max_diameter_object_model_3d","int(int ObjectModel3D, double& Diameter)");
T_moments_object_model_3d= dll.api("T_moments_object_model_3d","int(struct ObjectModel3D, struct MomentsToCalculate, struct& Moments)");
moments_object_model_3d= dll.api("moments_object_model_3d","int(int ObjectModel3D, string MomentsToCalculate, double& Moments)");
T_volume_object_model_3d_relative_to_plane= dll.api("T_volume_object_model_3d_relative_to_plane","int(struct ObjectModel3D, struct Plane, struct Mode, struct UseFaceOrientation, struct& Volume)");
T_reduce_object_model_3d_by_view= dll.api("T_reduce_object_model_3d_by_view","int(ADDR Region, struct ObjectModel3D, struct CamParam, struct Pose, struct& ObjectModel3DReduced)");
T_connection_object_model_3d= dll.api("T_connection_object_model_3d","int(struct ObjectModel3D, struct Feature, struct Value, struct& ObjectModel3DConnected)");
T_select_points_object_model_3d= dll.api("T_select_points_object_model_3d","int(struct ObjectModel3D, struct Attrib, struct MinValue, struct MaxValue, struct& ObjectModel3DThresholded)");
select_points_object_model_3d= dll.api("select_points_object_model_3d","int(int ObjectModel3D, string Attrib, double MinValue, double MaxValue, int& ObjectModel3DThresholded)");
T_get_disp_object_model_3d_info= dll.api("T_get_disp_object_model_3d_info","int(struct WindowHandle, struct Row, struct Column, struct Information, struct& Value)");
get_disp_object_model_3d_info= dll.api("get_disp_object_model_3d_info","int(int WindowHandle, double Row, double Column, string Information, int& Value)");
T_render_object_model_3d= dll.api("T_render_object_model_3d","int(ADDR& Image, struct ObjectModel3D, struct CamParam, struct Pose, struct GenParamName, struct GenParamValue)");
T_disp_object_model_3d= dll.api("T_disp_object_model_3d","int(struct WindowHandle, struct ObjectModel3D, struct CamParam, struct Pose, struct GenParamName, struct GenParamValue)");
T_copy_object_model_3d= dll.api("T_copy_object_model_3d","int(struct ObjectModel3D, struct Attributes, struct& CopiedObjectModel3D)");
copy_object_model_3d= dll.api("copy_object_model_3d","int(int ObjectModel3D, string Attributes, int& CopiedObjectModel3D)");
T_prepare_object_model_3d= dll.api("T_prepare_object_model_3d","int(struct ObjectModel3D, struct Purpose, struct OverwriteData, struct GenParamName, struct GenParamValue)");
T_object_model_3d_to_xyz= dll.api("T_object_model_3d_to_xyz","int(ADDR& X, ADDR& Y, ADDR& Z, struct ObjectModel3D, struct Type, struct CamParam, struct Pose)");
T_xyz_to_object_model_3d= dll.api("T_xyz_to_object_model_3d","int(ADDR X, ADDR Y, ADDR Z, struct& ObjectModel3D)");
xyz_to_object_model_3d= dll.api("xyz_to_object_model_3d","int(ADDR X, ADDR Y, ADDR Z, int& ObjectModel3D)");
T_get_object_model_3d_params= dll.api("T_get_object_model_3d_params","int(struct ObjectModel3D, struct GenParamName, struct& GenParamValue)");
T_project_object_model_3d= dll.api("T_project_object_model_3d","int(ADDR& ModelContours, struct ObjectModel3D, struct CamParam, struct Pose, struct GenParamName, struct GenParamValue)");
T_rigid_trans_object_model_3d= dll.api("T_rigid_trans_object_model_3d","int(struct ObjectModel3D, struct Pose, struct& ObjectModel3DRigidTrans)");
T_projective_trans_object_model_3d= dll.api("T_projective_trans_object_model_3d","int(struct ObjectModel3D, struct HomMat3D, struct& ObjectModel3DProjectiveTrans)");
T_affine_trans_object_model_3d= dll.api("T_affine_trans_object_model_3d","int(struct ObjectModel3D, struct HomMat3D, struct& ObjectModel3DAffineTrans)");
T_clear_all_object_model_3d= dll.api("T_clear_all_object_model_3d","int(void)");
clear_all_object_model_3d= dll.api("clear_all_object_model_3d","int(void)");
T_clear_object_model_3d= dll.api("T_clear_object_model_3d","int(struct ObjectModel3D)");
clear_object_model_3d= dll.api("clear_object_model_3d","int(int ObjectModel3D)");
T_serialize_object_model_3d= dll.api("T_serialize_object_model_3d","int(struct ObjectModel3D, struct& SerializedItemHandle)");
serialize_object_model_3d= dll.api("serialize_object_model_3d","int(int ObjectModel3D, int& SerializedItemHandle)");
T_deserialize_object_model_3d= dll.api("T_deserialize_object_model_3d","int(struct SerializedItemHandle, struct& ObjectModel3D)");
deserialize_object_model_3d= dll.api("deserialize_object_model_3d","int(int SerializedItemHandle, int& ObjectModel3D)");
T_write_object_model_3d= dll.api("T_write_object_model_3d","int(struct ObjectModel3D, struct FileType, struct FileName, struct GenParamName, struct GenParamValue)");
write_object_model_3d= dll.api("write_object_model_3d","int(int ObjectModel3D, string FileType, string FileName, string GenParamName, string GenParamValue)");
T_read_object_model_3d= dll.api("T_read_object_model_3d","int(struct FileName, struct Scale, struct GenParamName, struct GenParamValue, struct& ObjectModel3D, struct& Status)");
read_object_model_3d= dll.api("read_object_model_3d","int(string FileName, string Scale, string GenParamName, string GenParamValue, int& ObjectModel3D, string& Status)");
T_read_kalman= dll.api("T_read_kalman","int(struct FileName, struct& Dimension, struct& Model, struct& Measurement, struct& Prediction)");
T_update_kalman= dll.api("T_update_kalman","int(struct FileName, struct DimensionIn, struct ModelIn, struct MeasurementIn, struct& DimensionOut, struct& ModelOut, struct& MeasurementOut)");
T_filter_kalman= dll.api("T_filter_kalman","int(struct Dimension, struct Model, struct Measurement, struct PredictionIn, struct& PredictionOut, struct& Estimate)");
T_query_operator_info= dll.api("T_query_operator_info","int(struct& Slots)");
T_query_param_info= dll.api("T_query_param_info","int(struct& Slots)");
T_get_operator_name= dll.api("T_get_operator_name","int(struct Pattern, struct& OperatorNames)");
T_get_param_types= dll.api("T_get_param_types","int(struct OperatorName, struct& InpCtrlParType, struct& OutpCtrlParType)");
T_get_param_num= dll.api("T_get_param_num","int(struct OperatorName, struct& CName, struct& InpObjPar, struct& OutpObjPar, struct& InpCtrlPar, struct& OutpCtrlPar, struct& Type)");
get_param_num= dll.api("get_param_num","int(string OperatorName, string& CName, int& InpObjPar, int& OutpObjPar, int& InpCtrlPar, int& OutpCtrlPar, string& Type)");
T_get_param_names= dll.api("T_get_param_names","int(struct OperatorName, struct& InpObjPar, struct& OutpObjPar, struct& InpCtrlPar, struct& OutpCtrlPar)");
T_get_operator_info= dll.api("T_get_operator_info","int(struct OperatorName, struct Slot, struct& Information)");
get_operator_info= dll.api("get_operator_info","int(string OperatorName, string Slot, string& Information)");
T_get_param_info= dll.api("T_get_param_info","int(struct OperatorName, struct ParamName, struct Slot, struct& Information)");
get_param_info= dll.api("get_param_info","int(string OperatorName, string ParamName, string Slot, string& Information)");
T_search_operator= dll.api("T_search_operator","int(struct Keyword, struct& OperatorNames)");
T_get_keywords= dll.api("T_get_keywords","int(struct OperatorName, struct& Keywords)");
T_get_chapter_info= dll.api("T_get_chapter_info","int(struct Chapter, struct& Info)");
T_channels_to_image= dll.api("T_channels_to_image","int(ADDR Images, ADDR& MultiChannelImage)");
channels_to_image= dll.api("channels_to_image","int(ADDR Images, ADDR& MultiChannelImage)");
T_image_to_channels= dll.api("T_image_to_channels","int(ADDR MultiChannelImage, ADDR& Images)");
image_to_channels= dll.api("image_to_channels","int(ADDR MultiChannelImage, ADDR& Images)");
T_compose7= dll.api("T_compose7","int(ADDR Image1, ADDR Image2, ADDR Image3, ADDR Image4, ADDR Image5, ADDR Image6, ADDR Image7, ADDR& MultiChannelImage)");
compose7= dll.api("compose7","int(ADDR Image1, ADDR Image2, ADDR Image3, ADDR Image4, ADDR Image5, ADDR Image6, ADDR Image7, ADDR& MultiChannelImage)");
T_compose6= dll.api("T_compose6","int(ADDR Image1, ADDR Image2, ADDR Image3, ADDR Image4, ADDR Image5, ADDR Image6, ADDR& MultiChannelImage)");
compose6= dll.api("compose6","int(ADDR Image1, ADDR Image2, ADDR Image3, ADDR Image4, ADDR Image5, ADDR Image6, ADDR& MultiChannelImage)");
T_compose5= dll.api("T_compose5","int(ADDR Image1, ADDR Image2, ADDR Image3, ADDR Image4, ADDR Image5, ADDR& MultiChannelImage)");
compose5= dll.api("compose5","int(ADDR Image1, ADDR Image2, ADDR Image3, ADDR Image4, ADDR Image5, ADDR& MultiChannelImage)");
T_compose4= dll.api("T_compose4","int(ADDR Image1, ADDR Image2, ADDR Image3, ADDR Image4, ADDR& MultiChannelImage)");
compose4= dll.api("compose4","int(ADDR Image1, ADDR Image2, ADDR Image3, ADDR Image4, ADDR& MultiChannelImage)");
T_compose3= dll.api("T_compose3","int(ADDR Image1, ADDR Image2, ADDR Image3, ADDR& MultiChannelImage)");
compose3= dll.api("compose3","int(ADDR Image1, ADDR Image2, ADDR Image3, ADDR& MultiChannelImage)");
T_compose2= dll.api("T_compose2","int(ADDR Image1, ADDR Image2, ADDR& MultiChannelImage)");
compose2= dll.api("compose2","int(ADDR Image1, ADDR Image2, ADDR& MultiChannelImage)");
T_decompose7= dll.api("T_decompose7","int(ADDR MultiChannelImage, ADDR& Image1, ADDR& Image2, ADDR& Image3, ADDR& Image4, ADDR& Image5, ADDR& Image6, ADDR& Image7)");
decompose7= dll.api("decompose7","int(ADDR MultiChannelImage, ADDR& Image1, ADDR& Image2, ADDR& Image3, ADDR& Image4, ADDR& Image5, ADDR& Image6, ADDR& Image7)");
T_decompose6= dll.api("T_decompose6","int(ADDR MultiChannelImage, ADDR& Image1, ADDR& Image2, ADDR& Image3, ADDR& Image4, ADDR& Image5, ADDR& Image6)");
decompose6= dll.api("decompose6","int(ADDR MultiChannelImage, ADDR& Image1, ADDR& Image2, ADDR& Image3, ADDR& Image4, ADDR& Image5, ADDR& Image6)");
T_decompose5= dll.api("T_decompose5","int(ADDR MultiChannelImage, ADDR& Image1, ADDR& Image2, ADDR& Image3, ADDR& Image4, ADDR& Image5)");
decompose5= dll.api("decompose5","int(ADDR MultiChannelImage, ADDR& Image1, ADDR& Image2, ADDR& Image3, ADDR& Image4, ADDR& Image5)");
T_decompose4= dll.api("T_decompose4","int(ADDR MultiChannelImage, ADDR& Image1, ADDR& Image2, ADDR& Image3, ADDR& Image4)");
decompose4= dll.api("decompose4","int(ADDR MultiChannelImage, ADDR& Image1, ADDR& Image2, ADDR& Image3, ADDR& Image4)");
T_decompose3= dll.api("T_decompose3","int(ADDR MultiChannelImage, ADDR& Image1, ADDR& Image2, ADDR& Image3)");
decompose3= dll.api("decompose3","int(ADDR MultiChannelImage, ADDR& Image1, ADDR& Image2, ADDR& Image3)");
T_decompose2= dll.api("T_decompose2","int(ADDR MultiChannelImage, ADDR& Image1, ADDR& Image2)");
decompose2= dll.api("decompose2","int(ADDR MultiChannelImage, ADDR& Image1, ADDR& Image2)");
T_count_channels= dll.api("T_count_channels","int(ADDR MultiChannelImage, struct& Channels)");
count_channels= dll.api("count_channels","int(ADDR MultiChannelImage, int& Channels)");
T_append_channel= dll.api("T_append_channel","int(ADDR MultiChannelImage, ADDR Image, ADDR& ImageExtended)");
append_channel= dll.api("append_channel","int(ADDR MultiChannelImage, ADDR Image, ADDR& ImageExtended)");
T_access_channel= dll.api("T_access_channel","int(ADDR MultiChannelImage, ADDR& Image, struct Channel)");
access_channel= dll.api("access_channel","int(ADDR MultiChannelImage, ADDR& Image, int Channel)");
T_tile_images_offset= dll.api("T_tile_images_offset","int(ADDR Images, ADDR& TiledImage, struct OffsetRow, struct OffsetCol, struct Row1, struct Col1, struct Row2, struct Col2, struct Width, struct Height)");
tile_images_offset= dll.api("tile_images_offset","int(ADDR Images, ADDR& TiledImage, int OffsetRow, int OffsetCol, int Row1, int Col1, int Row2, int Col2, int Width, int Height)");
T_tile_images= dll.api("T_tile_images","int(ADDR Images, ADDR& TiledImage, struct NumColumns, struct TileOrder)");
tile_images= dll.api("tile_images","int(ADDR Images, ADDR& TiledImage, int NumColumns, string TileOrder)");
T_tile_channels= dll.api("T_tile_channels","int(ADDR Image, ADDR& TiledImage, struct NumColumns, struct TileOrder)");
tile_channels= dll.api("tile_channels","int(ADDR Image, ADDR& TiledImage, int NumColumns, string TileOrder)");
T_crop_domain= dll.api("T_crop_domain","int(ADDR Image, ADDR& ImagePart)");
crop_domain= dll.api("crop_domain","int(ADDR Image, ADDR& ImagePart)");
T_crop_rectangle1= dll.api("T_crop_rectangle1","int(ADDR Image, ADDR& ImagePart, struct Row1, struct Column1, struct Row2, struct Column2)");
crop_rectangle1= dll.api("crop_rectangle1","int(ADDR Image, ADDR& ImagePart, int Row1, int Column1, int Row2, int Column2)");
T_crop_part= dll.api("T_crop_part","int(ADDR Image, ADDR& ImagePart, struct Row, struct Column, struct Width, struct Height)");
crop_part= dll.api("crop_part","int(ADDR Image, ADDR& ImagePart, int Row, int Column, int Width, int Height)");
T_change_format= dll.api("T_change_format","int(ADDR Image, ADDR& ImagePart, struct Width, struct Height)");
change_format= dll.api("change_format","int(ADDR Image, ADDR& ImagePart, int Width, int Height)");
T_change_domain= dll.api("T_change_domain","int(ADDR Image, ADDR NewDomain, ADDR& ImageNew)");
change_domain= dll.api("change_domain","int(ADDR Image, ADDR NewDomain, ADDR& ImageNew)");
T_add_channels= dll.api("T_add_channels","int(ADDR Regions, ADDR Image, ADDR& GrayRegions)");
add_channels= dll.api("add_channels","int(ADDR Regions, ADDR Image, ADDR& GrayRegions)");
T_rectangle1_domain= dll.api("T_rectangle1_domain","int(ADDR Image, ADDR& ImageReduced, struct Row1, struct Column1, struct Row2, struct Column2)");
rectangle1_domain= dll.api("rectangle1_domain","int(ADDR Image, ADDR& ImageReduced, int Row1, int Column1, int Row2, int Column2)");
T_reduce_domain= dll.api("T_reduce_domain","int(ADDR Image, ADDR Region, ADDR& ImageReduced)");
reduce_domain= dll.api("reduce_domain","int(ADDR Image, ADDR Region, ADDR& ImageReduced)");
T_full_domain= dll.api("T_full_domain","int(ADDR Image, ADDR& ImageFull)");
full_domain= dll.api("full_domain","int(ADDR Image, ADDR& ImageFull)");
T_get_domain= dll.api("T_get_domain","int(ADDR Image, ADDR& Domain)");
get_domain= dll.api("get_domain","int(ADDR Image, ADDR& Domain)");
T_hough_circles= dll.api("T_hough_circles","int(ADDR RegionIn, ADDR& RegionOut, struct Radius, struct Percent, struct Mode)");
hough_circles= dll.api("hough_circles","int(ADDR RegionIn, ADDR& RegionOut, int Radius, int Percent, int Mode)");
T_hough_circle_trans= dll.api("T_hough_circle_trans","int(ADDR Region, ADDR& HoughImage, struct Radius)");
hough_circle_trans= dll.api("hough_circle_trans","int(ADDR Region, ADDR& HoughImage, int Radius)");
T_hough_lines_dir= dll.api("T_hough_lines_dir","int(ADDR ImageDir, ADDR& HoughImage, ADDR& Lines, struct DirectionUncertainty, struct AngleResolution, struct Smoothing, struct FilterSize, struct Threshold, struct AngleGap, struct DistGap, struct GenLines, struct& Angle, struct& Dist)");
T_hough_line_trans_dir= dll.api("T_hough_line_trans_dir","int(ADDR ImageDir, ADDR& HoughImage, struct DirectionUncertainty, struct AngleResolution)");
hough_line_trans_dir= dll.api("hough_line_trans_dir","int(ADDR ImageDir, ADDR& HoughImage, int DirectionUncertainty, int AngleResolution)");
T_hough_lines= dll.api("T_hough_lines","int(ADDR RegionIn, struct AngleResolution, struct Threshold, struct AngleGap, struct DistGap, struct& Angle, struct& Dist)");
T_hough_line_trans= dll.api("T_hough_line_trans","int(ADDR Region, ADDR& HoughImage, struct AngleResolution)");
hough_line_trans= dll.api("hough_line_trans","int(ADDR Region, ADDR& HoughImage, int AngleResolution)");
T_select_matching_lines= dll.api("T_select_matching_lines","int(ADDR RegionIn, ADDR& RegionLines, struct AngleIn, struct DistIn, struct LineWidth, struct Thresh, struct& AngleOut, struct& DistOut)");
select_matching_lines= dll.api("select_matching_lines","int(ADDR RegionIn, ADDR& RegionLines, double AngleIn, double DistIn, int LineWidth, int Thresh, double& AngleOut, double& DistOut)");
T_find_rectification_grid= dll.api("T_find_rectification_grid","int(ADDR Image, ADDR& GridRegion, struct MinContrast, struct Radius)");
find_rectification_grid= dll.api("find_rectification_grid","int(ADDR Image, ADDR& GridRegion, double MinContrast, double Radius)");
T_create_rectification_grid= dll.api("T_create_rectification_grid","int(struct Width, struct NumSquares, struct GridFile)");
create_rectification_grid= dll.api("create_rectification_grid","int(double Width, int NumSquares, string GridFile)");
T_connect_grid_points= dll.api("T_connect_grid_points","int(ADDR Image, ADDR& ConnectingLines, struct Row, struct Column, struct Sigma, struct MaxDist)");
T_gen_grid_rectification_map= dll.api("T_gen_grid_rectification_map","int(ADDR Image, ADDR ConnectingLines, ADDR& Map, ADDR& Meshes, struct GridSpacing, struct Rotation, struct Row, struct Column, struct MapType)");
T_gen_arbitrary_distortion_map= dll.api("T_gen_arbitrary_distortion_map","int(ADDR& Map, struct GridSpacing, struct Row, struct Column, struct GridWidth, struct ImageWidth, struct ImageHeight, struct MapType)");
T_get_window_background_image= dll.api("T_get_window_background_image","int(ADDR& BackgroundImage, struct WindowHandle)");
get_window_background_image= dll.api("get_window_background_image","int(ADDR& BackgroundImage, int WindowHandle)");
T_set_drawing_object_callback= dll.api("T_set_drawing_object_callback","int(struct DrawID, struct DrawObjectEvent, struct CallbackFunction)");
set_drawing_object_callback= dll.api("set_drawing_object_callback","int(int DrawID, string DrawObjectEvent, int CallbackFunction)");
T_detach_background_from_window= dll.api("T_detach_background_from_window","int(struct WindowHandle)");
detach_background_from_window= dll.api("detach_background_from_window","int(int WindowHandle)");
T_attach_background_to_window= dll.api("T_attach_background_to_window","int(ADDR Image, struct WindowHandle)");
attach_background_to_window= dll.api("attach_background_to_window","int(ADDR Image, int WindowHandle)");
T_detach_drawing_object_from_window= dll.api("T_detach_drawing_object_from_window","int(struct WindowHandle, struct DrawID)");
detach_drawing_object_from_window= dll.api("detach_drawing_object_from_window","int(int WindowHandle, int DrawID)");
T_attach_drawing_object_to_window= dll.api("T_attach_drawing_object_to_window","int(struct WindowHandle, struct DrawID)");
attach_drawing_object_to_window= dll.api("attach_drawing_object_to_window","int(int WindowHandle, int DrawID)");
T_update_window_pose= dll.api("T_update_window_pose","int(struct WindowHandle, struct LastRow, struct LastCol, struct CurrentRow, struct CurrentCol, struct Mode)");
update_window_pose= dll.api("update_window_pose","int(int WindowHandle, double LastRow, double LastCol, double CurrentRow, double CurrentCol, string Mode)");
T_unproject_coordinates= dll.api("T_unproject_coordinates","int(ADDR Image, struct WindowHandle, struct Row, struct Column, struct& ImageRow, struct& ImageColumn, struct& Height)");
unproject_coordinates= dll.api("unproject_coordinates","int(ADDR Image, int WindowHandle, double Row, double Column, int& ImageRow, int& ImageColumn, int& Height)");
T_get_os_window_handle= dll.api("T_get_os_window_handle","int(struct WindowHandle, struct& OSWindowHandle, struct& OSDisplayHandle)");
get_os_window_handle= dll.api("get_os_window_handle","int(int WindowHandle, int& OSWindowHandle, int& OSDisplayHandle)");
T_set_window_dc= dll.api("T_set_window_dc","int(struct WindowHandle, struct WINHDC)");
set_window_dc= dll.api("set_window_dc","int(int WindowHandle, int WINHDC)");
T_new_extern_window= dll.api("T_new_extern_window","int(struct WINHWnd, struct Row, struct Column, struct Width, struct Height, struct& WindowHandle)");
new_extern_window= dll.api("new_extern_window","int(int WINHWnd, int Row, int Column, int Width, int Height, int& WindowHandle)");
T_slide_image= dll.api("T_slide_image","int(struct WindowHandleSource1, struct WindowHandleSource2, struct WindowHandle)");
slide_image= dll.api("slide_image","int(int WindowHandleSource1, int WindowHandleSource2, int WindowHandle)");
T_set_window_type= dll.api("T_set_window_type","int(struct WindowType)");
set_window_type= dll.api("set_window_type","int(string WindowType)");
T_set_window_extents= dll.api("T_set_window_extents","int(struct WindowHandle, struct Row, struct Column, struct Width, struct Height)");
set_window_extents= dll.api("set_window_extents","int(int WindowHandle, int Row, int Column, int Width, int Height)");
T_get_window_attr= dll.api("T_get_window_attr","int(struct AttributeName, struct& AttributeValue)");
get_window_attr= dll.api("get_window_attr","int(string AttributeName, string& AttributeValue)");
T_set_window_attr= dll.api("T_set_window_attr","int(struct AttributeName, struct AttributeValue)");
set_window_attr= dll.api("set_window_attr","int(string AttributeName, string AttributeValue)");
T_query_window_type= dll.api("T_query_window_type","int(struct& WindowTypes)");
T_open_window= dll.api("T_open_window","int(struct Row, struct Column, struct Width, struct Height, struct FatherWindow, struct Mode, struct Machine, struct& WindowHandle)");
open_window= dll.api("open_window","int(int Row, int Column, int Width, int Height, int FatherWindow, string Mode, string Machine, int& WindowHandle)");
T_open_textwindow= dll.api("T_open_textwindow","int(struct Row, struct Column, struct Width, struct Height, struct BorderWidth, struct BorderColor, struct BackgroundColor, struct FatherWindow, struct Mode, struct Machine, struct& WindowHandle)");
open_textwindow= dll.api("open_textwindow","int(int Row, int Column, int Width, int Height, int BorderWidth, string BorderColor, string BackgroundColor, int FatherWindow, string Mode, string Machine, int& WindowHandle)");
T_move_rectangle= dll.api("T_move_rectangle","int(struct WindowHandle, struct Row1, struct Column1, struct Row2, struct Column2, struct DestRow, struct DestColumn)");
move_rectangle= dll.api("move_rectangle","int(int WindowHandle, int Row1, int Column1, int Row2, int Column2, int DestRow, int DestColumn)");
T_get_window_type= dll.api("T_get_window_type","int(struct WindowHandle, struct& WindowType)");
get_window_type= dll.api("get_window_type","int(int WindowHandle, string& WindowType)");
T_get_window_pointer3= dll.api("T_get_window_pointer3","int(struct WindowHandle, struct& ImageRed, struct& ImageGreen, struct& ImageBlue, struct& Width, struct& Height)");
get_window_pointer3= dll.api("get_window_pointer3","int(int WindowHandle, int& ImageRed, int& ImageGreen, int& ImageBlue, int& Width, int& Height)");
T_get_window_extents= dll.api("T_get_window_extents","int(struct WindowHandle, struct& Row, struct& Column, struct& Width, struct& Height)");
get_window_extents= dll.api("get_window_extents","int(int WindowHandle, int& Row, int& Column, int& Width, int& Height)");
T_dump_window_image= dll.api("T_dump_window_image","int(ADDR& Image, struct WindowHandle)");
dump_window_image= dll.api("dump_window_image","int(ADDR& Image, int WindowHandle)");
T_dump_window= dll.api("T_dump_window","int(struct WindowHandle, struct Device, struct FileName)");
dump_window= dll.api("dump_window","int(int WindowHandle, string Device, string FileName)");
T_copy_rectangle= dll.api("T_copy_rectangle","int(struct WindowHandleSource, struct WindowHandleDestination, struct Row1, struct Column1, struct Row2, struct Column2, struct DestRow, struct DestColumn)");
copy_rectangle= dll.api("copy_rectangle","int(int WindowHandleSource, int WindowHandleDestination, int Row1, int Column1, int Row2, int Column2, int DestRow, int DestColumn)");
T_close_window= dll.api("T_close_window","int(struct WindowHandle)");
close_window= dll.api("close_window","int(int WindowHandle)");
T_clear_window= dll.api("T_clear_window","int(struct WindowHandle)");
clear_window= dll.api("clear_window","int(int WindowHandle)");
T_clear_rectangle= dll.api("T_clear_rectangle","int(struct WindowHandle, struct Row1, struct Column1, struct Row2, struct Column2)");
clear_rectangle= dll.api("clear_rectangle","int(int WindowHandle, int Row1, int Column1, int Row2, int Column2)");
T_write_string= dll.api("T_write_string","int(struct WindowHandle, struct String)");
write_string= dll.api("write_string","int(int WindowHandle, string String)");
T_set_tshape= dll.api("T_set_tshape","int(struct WindowHandle, struct TextCursor)");
set_tshape= dll.api("set_tshape","int(int WindowHandle, string TextCursor)");
T_set_tposition= dll.api("T_set_tposition","int(struct WindowHandle, struct Row, struct Column)");
set_tposition= dll.api("set_tposition","int(int WindowHandle, int Row, int Column)");
T_read_string= dll.api("T_read_string","int(struct WindowHandle, struct InString, struct Length, struct& OutString)");
read_string= dll.api("read_string","int(int WindowHandle, string InString, int Length, string& OutString)");
T_read_char= dll.api("T_read_char","int(struct WindowHandle, struct& Char, struct& Code)");
read_char= dll.api("read_char","int(int WindowHandle, string& Char, string& Code)");
T_new_line= dll.api("T_new_line","int(struct WindowHandle)");
new_line= dll.api("new_line","int(int WindowHandle)");
T_get_tshape= dll.api("T_get_tshape","int(struct WindowHandle, struct& TextCursor)");
get_tshape= dll.api("get_tshape","int(int WindowHandle, string& TextCursor)");
T_get_tposition= dll.api("T_get_tposition","int(struct WindowHandle, struct& Row, struct& Column)");
get_tposition= dll.api("get_tposition","int(int WindowHandle, int& Row, int& Column)");
T_get_font_extents= dll.api("T_get_font_extents","int(struct WindowHandle, struct& MaxAscent, struct& MaxDescent, struct& MaxWidth, struct& MaxHeight)");
get_font_extents= dll.api("get_font_extents","int(int WindowHandle, int& MaxAscent, int& MaxDescent, int& MaxWidth, int& MaxHeight)");
T_get_string_extents= dll.api("T_get_string_extents","int(struct WindowHandle, struct Values, struct& Ascent, struct& Descent, struct& Width, struct& Height)");
get_string_extents= dll.api("get_string_extents","int(int WindowHandle, string Values, int& Ascent, int& Descent, int& Width, int& Height)");
T_query_font= dll.api("T_query_font","int(struct WindowHandle, struct& Font)");
T_query_tshape= dll.api("T_query_tshape","int(struct WindowHandle, struct& TextCursor)");
T_set_font= dll.api("T_set_font","int(struct WindowHandle, struct Font)");
set_font= dll.api("set_font","int(int WindowHandle, string Font)");
T_get_font= dll.api("T_get_font","int(struct WindowHandle, struct& Font)");
get_font= dll.api("get_font","int(int WindowHandle, string& Font)");
T_get_display_scene_3d_info= dll.api("T_get_display_scene_3d_info","int(struct WindowHandle, struct Scene3D, struct Row, struct Column, struct Information, struct& Value)");
get_display_scene_3d_info= dll.api("get_display_scene_3d_info","int(int WindowHandle, int Scene3D, double Row, double Column, string Information, int& Value)");
T_set_scene_3d_to_world_pose= dll.api("T_set_scene_3d_to_world_pose","int(struct Scene3D, struct ToWorldPose)");
set_scene_3d_to_world_pose= dll.api("set_scene_3d_to_world_pose","int(int Scene3D, double ToWorldPose)");
T_set_scene_3d_param= dll.api("T_set_scene_3d_param","int(struct Scene3D, struct GenParamName, struct GenParamValue)");
set_scene_3d_param= dll.api("set_scene_3d_param","int(int Scene3D, string GenParamName, string GenParamValue)");
T_set_scene_3d_light_param= dll.api("T_set_scene_3d_light_param","int(struct Scene3D, struct LightIndex, struct GenParamName, struct GenParamValue)");
set_scene_3d_light_param= dll.api("set_scene_3d_light_param","int(int Scene3D, int LightIndex, string GenParamName, string GenParamValue)");
T_set_scene_3d_instance_pose= dll.api("T_set_scene_3d_instance_pose","int(struct Scene3D, struct InstanceIndex, struct Pose)");
set_scene_3d_instance_pose= dll.api("set_scene_3d_instance_pose","int(int Scene3D, int InstanceIndex, double Pose)");
T_set_scene_3d_instance_param= dll.api("T_set_scene_3d_instance_param","int(struct Scene3D, struct InstanceIndex, struct GenParamName, struct GenParamValue)");
T_set_scene_3d_camera_pose= dll.api("T_set_scene_3d_camera_pose","int(struct Scene3D, struct CameraIndex, struct Pose)");
set_scene_3d_camera_pose= dll.api("set_scene_3d_camera_pose","int(int Scene3D, int CameraIndex, double Pose)");
T_render_scene_3d= dll.api("T_render_scene_3d","int(ADDR& Image, struct Scene3D, struct CameraIndex)");
render_scene_3d= dll.api("render_scene_3d","int(ADDR& Image, int Scene3D, int CameraIndex)");
T_remove_scene_3d_light= dll.api("T_remove_scene_3d_light","int(struct Scene3D, struct LightIndex)");
remove_scene_3d_light= dll.api("remove_scene_3d_light","int(int Scene3D, int LightIndex)");
T_remove_scene_3d_instance= dll.api("T_remove_scene_3d_instance","int(struct Scene3D, struct InstanceIndex)");
remove_scene_3d_instance= dll.api("remove_scene_3d_instance","int(int Scene3D, int InstanceIndex)");
T_remove_scene_3d_camera= dll.api("T_remove_scene_3d_camera","int(struct Scene3D, struct CameraIndex)");
remove_scene_3d_camera= dll.api("remove_scene_3d_camera","int(int Scene3D, int CameraIndex)");
T_display_scene_3d= dll.api("T_display_scene_3d","int(struct WindowHandle, struct Scene3D, struct CameraIndex)");
display_scene_3d= dll.api("display_scene_3d","int(int WindowHandle, int Scene3D, string CameraIndex)");
T_add_scene_3d_light= dll.api("T_add_scene_3d_light","int(struct Scene3D, struct LightPosition, struct LightKind, struct& LightIndex)");
T_add_scene_3d_instance= dll.api("T_add_scene_3d_instance","int(struct Scene3D, struct ObjectModel3D, struct Pose, struct& InstanceIndex)");
T_add_scene_3d_camera= dll.api("T_add_scene_3d_camera","int(struct Scene3D, struct CameraParam, struct& CameraIndex)");
T_clear_scene_3d= dll.api("T_clear_scene_3d","int(struct Scene3D)");
clear_scene_3d= dll.api("clear_scene_3d","int(int Scene3D)");
T_create_scene_3d= dll.api("T_create_scene_3d","int(struct& Scene3D)");
create_scene_3d= dll.api("create_scene_3d","int(int& Scene3D)");
T_get_window_param= dll.api("T_get_window_param","int(struct WindowHandle, struct Param, struct& Value)");
get_window_param= dll.api("get_window_param","int(int WindowHandle, string Param, string& Value)");
T_set_window_param= dll.api("T_set_window_param","int(struct WindowHandle, struct Param, struct Value)");
set_window_param= dll.api("set_window_param","int(int WindowHandle, string Param, string Value)");
T_set_shape= dll.api("T_set_shape","int(struct WindowHandle, struct Shape)");
set_shape= dll.api("set_shape","int(int WindowHandle, string Shape)");
T_set_rgb= dll.api("T_set_rgb","int(struct WindowHandle, struct Red, struct Green, struct Blue)");
set_rgb= dll.api("set_rgb","int(int WindowHandle, int Red, int Green, int Blue)");
T_set_pixel= dll.api("T_set_pixel","int(struct WindowHandle, struct Pixel)");
set_pixel= dll.api("set_pixel","int(int WindowHandle, int Pixel)");
T_set_part_style= dll.api("T_set_part_style","int(struct WindowHandle, struct Style)");
set_part_style= dll.api("set_part_style","int(int WindowHandle, int Style)");
T_set_part= dll.api("T_set_part","int(struct WindowHandle, struct Row1, struct Column1, struct Row2, struct Column2)");
set_part= dll.api("set_part","int(int WindowHandle, int Row1, int Column1, int Row2, int Column2)");
T_set_paint= dll.api("T_set_paint","int(struct WindowHandle, struct Mode)");
T_set_line_width= dll.api("T_set_line_width","int(struct WindowHandle, struct Width)");
set_line_width= dll.api("set_line_width","int(int WindowHandle, double Width)");
T_set_line_style= dll.api("T_set_line_style","int(struct WindowHandle, struct Style)");
T_set_line_approx= dll.api("T_set_line_approx","int(struct WindowHandle, struct Approximation)");
set_line_approx= dll.api("set_line_approx","int(int WindowHandle, int Approximation)");
T_set_insert= dll.api("T_set_insert","int(struct WindowHandle, struct Mode)");
set_insert= dll.api("set_insert","int(int WindowHandle, string Mode)");
T_set_hsi= dll.api("T_set_hsi","int(struct WindowHandle, struct Hue, struct Saturation, struct Intensity)");
set_hsi= dll.api("set_hsi","int(int WindowHandle, int Hue, int Saturation, int Intensity)");
T_set_gray= dll.api("T_set_gray","int(struct WindowHandle, struct GrayValues)");
set_gray= dll.api("set_gray","int(int WindowHandle, int GrayValues)");
T_set_draw= dll.api("T_set_draw","int(struct WindowHandle, struct Mode)");
set_draw= dll.api("set_draw","int(int WindowHandle, string Mode)");
T_set_comprise= dll.api("T_set_comprise","int(struct WindowHandle, struct Mode)");
set_comprise= dll.api("set_comprise","int(int WindowHandle, string Mode)");
T_set_colored= dll.api("T_set_colored","int(struct WindowHandle, struct NumberOfColors)");
set_colored= dll.api("set_colored","int(int WindowHandle, int NumberOfColors)");
T_set_color= dll.api("T_set_color","int(struct WindowHandle, struct Color)");
set_color= dll.api("set_color","int(int WindowHandle, string Color)");
T_get_shape= dll.api("T_get_shape","int(struct WindowHandle, struct& DisplayShape)");
get_shape= dll.api("get_shape","int(int WindowHandle, string& DisplayShape)");
T_get_rgb= dll.api("T_get_rgb","int(struct WindowHandle, struct& Red, struct& Green, struct& Blue)");
T_get_pixel= dll.api("T_get_pixel","int(struct WindowHandle, struct& Pixel)");
T_get_part_style= dll.api("T_get_part_style","int(struct WindowHandle, struct& Style)");
get_part_style= dll.api("get_part_style","int(int WindowHandle, int& Style)");
T_get_part= dll.api("T_get_part","int(struct WindowHandle, struct& Row1, struct& Column1, struct& Row2, struct& Column2)");
get_part= dll.api("get_part","int(int WindowHandle, int& Row1, int& Column1, int& Row2, int& Column2)");
T_get_paint= dll.api("T_get_paint","int(struct WindowHandle, struct& Mode)");
T_get_line_width= dll.api("T_get_line_width","int(struct WindowHandle, struct& Width)");
get_line_width= dll.api("get_line_width","int(int WindowHandle, double& Width)");
T_get_line_style= dll.api("T_get_line_style","int(struct WindowHandle, struct& Style)");
T_get_line_approx= dll.api("T_get_line_approx","int(struct WindowHandle, struct& Approximation)");
get_line_approx= dll.api("get_line_approx","int(int WindowHandle, int& Approximation)");
T_get_insert= dll.api("T_get_insert","int(struct WindowHandle, struct& Mode)");
get_insert= dll.api("get_insert","int(int WindowHandle, string& Mode)");
T_get_hsi= dll.api("T_get_hsi","int(struct WindowHandle, struct& Hue, struct& Saturation, struct& Intensity)");
T_get_draw= dll.api("T_get_draw","int(struct WindowHandle, struct& Mode)");
get_draw= dll.api("get_draw","int(int WindowHandle, string& Mode)");
T_get_comprise= dll.api("T_get_comprise","int(struct WindowHandle, struct& Mode)");
get_comprise= dll.api("get_comprise","int(int WindowHandle, string& Mode)");
T_query_shape= dll.api("T_query_shape","int(struct& DisplayShape)");
T_query_paint= dll.api("T_query_paint","int(struct WindowHandle, struct& Mode)");
T_query_line_width= dll.api("T_query_line_width","int(struct& Min, struct& Max)");
query_line_width= dll.api("query_line_width","int(int& Min, int& Max)");
T_query_insert= dll.api("T_query_insert","int(struct WindowHandle, struct& Mode)");
T_query_gray= dll.api("T_query_gray","int(struct WindowHandle, struct& Grayval)");
T_query_colored= dll.api("T_query_colored","int(struct& PossibleNumberOfColors)");
T_query_all_colors= dll.api("T_query_all_colors","int(struct WindowHandle, struct& Colors)");
T_query_color= dll.api("T_query_color","int(struct WindowHandle, struct& Colors)");
T_get_icon= dll.api("T_get_icon","int(ADDR& Icon, struct WindowHandle)");
get_icon= dll.api("get_icon","int(ADDR& Icon, int WindowHandle)");
T_set_icon= dll.api("T_set_icon","int(ADDR Icon, struct WindowHandle)");
set_icon= dll.api("set_icon","int(ADDR Icon, int WindowHandle)");
T_disp_region= dll.api("T_disp_region","int(ADDR DispRegions, struct WindowHandle)");
disp_region= dll.api("disp_region","int(ADDR DispRegions, int WindowHandle)");
T_disp_rectangle2= dll.api("T_disp_rectangle2","int(struct WindowHandle, struct CenterRow, struct CenterCol, struct Phi, struct Length1, struct Length2)");
disp_rectangle2= dll.api("disp_rectangle2","int(int WindowHandle, double CenterRow, double CenterCol, double Phi, double Length1, double Length2)");
T_disp_rectangle1= dll.api("T_disp_rectangle1","int(struct WindowHandle, struct Row1, struct Column1, struct Row2, struct Column2)");
disp_rectangle1= dll.api("disp_rectangle1","int(int WindowHandle, double Row1, double Column1, double Row2, double Column2)");
T_disp_polygon= dll.api("T_disp_polygon","int(struct WindowHandle, struct Row, struct Column)");
T_disp_line= dll.api("T_disp_line","int(struct WindowHandle, struct Row1, struct Column1, struct Row2, struct Column2)");
disp_line= dll.api("disp_line","int(int WindowHandle, double Row1, double Column1, double Row2, double Column2)");
T_disp_cross= dll.api("T_disp_cross","int(struct WindowHandle, struct Row, struct Column, struct Size, struct Angle)");
disp_cross= dll.api("disp_cross","int(int WindowHandle, double Row, double Column, double Size, double Angle)");
T_disp_image= dll.api("T_disp_image","int(ADDR Image, struct WindowHandle)");
disp_image= dll.api("disp_image","int(ADDR Image, int WindowHandle)");
T_disp_channel= dll.api("T_disp_channel","int(ADDR MultichannelImage, struct WindowHandle, struct Channel)");
disp_channel= dll.api("disp_channel","int(ADDR MultichannelImage, int WindowHandle, int Channel)");
T_disp_color= dll.api("T_disp_color","int(ADDR ColorImage, struct WindowHandle)");
disp_color= dll.api("disp_color","int(ADDR ColorImage, int WindowHandle)");
T_disp_ellipse= dll.api("T_disp_ellipse","int(struct WindowHandle, struct CenterRow, struct CenterCol, struct Phi, struct Radius1, struct Radius2)");
disp_ellipse= dll.api("disp_ellipse","int(int WindowHandle, int CenterRow, int CenterCol, double Phi, double Radius1, double Radius2)");
T_disp_distribution= dll.api("T_disp_distribution","int(struct WindowHandle, struct Distribution, struct Row, struct Column, struct Scale)");
T_disp_circle= dll.api("T_disp_circle","int(struct WindowHandle, struct Row, struct Column, struct Radius)");
disp_circle= dll.api("disp_circle","int(int WindowHandle, double Row, double Column, double Radius)");
T_disp_arrow= dll.api("T_disp_arrow","int(struct WindowHandle, struct Row1, struct Column1, struct Row2, struct Column2, struct Size)");
disp_arrow= dll.api("disp_arrow","int(int WindowHandle, double Row1, double Column1, double Row2, double Column2, double Size)");
T_disp_arc= dll.api("T_disp_arc","int(struct WindowHandle, struct CenterRow, struct CenterCol, struct Angle, struct BeginRow, struct BeginCol)");
disp_arc= dll.api("disp_arc","int(int WindowHandle, double CenterRow, double CenterCol, double Angle, int BeginRow, int BeginCol)");
T_disp_obj= dll.api("T_disp_obj","int(ADDR Object, struct WindowHandle)");
disp_obj= dll.api("disp_obj","int(ADDR Object, int WindowHandle)");
T_set_mshape= dll.api("T_set_mshape","int(struct WindowHandle, struct Cursor)");
set_mshape= dll.api("set_mshape","int(int WindowHandle, string Cursor)");
T_get_mshape= dll.api("T_get_mshape","int(struct WindowHandle, struct& Cursor)");
get_mshape= dll.api("get_mshape","int(int WindowHandle, string& Cursor)");
T_query_mshape= dll.api("T_query_mshape","int(struct WindowHandle, struct& ShapeNames)");
T_get_mposition_sub_pix= dll.api("T_get_mposition_sub_pix","int(struct WindowHandle, struct& Row, struct& Column, struct& Button)");
get_mposition_sub_pix= dll.api("get_mposition_sub_pix","int(int WindowHandle, double& Row, double& Column, int& Button)");
T_get_mposition= dll.api("T_get_mposition","int(struct WindowHandle, struct& Row, struct& Column, struct& Button)");
get_mposition= dll.api("get_mposition","int(int WindowHandle, int& Row, int& Column, int& Button)");
T_get_mbutton_sub_pix= dll.api("T_get_mbutton_sub_pix","int(struct WindowHandle, struct& Row, struct& Column, struct& Button)");
get_mbutton_sub_pix= dll.api("get_mbutton_sub_pix","int(int WindowHandle, double& Row, double& Column, int& Button)");
T_get_mbutton= dll.api("T_get_mbutton","int(struct WindowHandle, struct& Row, struct& Column, struct& Button)");
get_mbutton= dll.api("get_mbutton","int(int WindowHandle, int& Row, int& Column, int& Button)");
T_write_lut= dll.api("T_write_lut","int(struct WindowHandle, struct FileName)");
write_lut= dll.api("write_lut","int(int WindowHandle, string FileName)");
T_disp_lut= dll.api("T_disp_lut","int(struct WindowHandle, struct Row, struct Column, struct Scale)");
disp_lut= dll.api("disp_lut","int(int WindowHandle, int Row, int Column, int Scale)");
T_query_lut= dll.api("T_query_lut","int(struct WindowHandle, struct& LookUpTable)");
T_get_lut_style= dll.api("T_get_lut_style","int(struct WindowHandle, struct& Hue, struct& Saturation, struct& Intensity)");
get_lut_style= dll.api("get_lut_style","int(int WindowHandle, double& Hue, double& Saturation, double& Intensity)");
T_set_lut_style= dll.api("T_set_lut_style","int(struct WindowHandle, struct Hue, struct Saturation, struct Intensity)");
set_lut_style= dll.api("set_lut_style","int(int WindowHandle, double Hue, double Saturation, double Intensity)");
T_get_lut= dll.api("T_get_lut","int(struct WindowHandle, struct& LookUpTable)");
T_set_lut= dll.api("T_set_lut","int(struct WindowHandle, struct LookUpTable)");
set_lut= dll.api("set_lut","int(int WindowHandle, string LookUpTable)");
T_get_fix= dll.api("T_get_fix","int(struct WindowHandle, struct& Mode)");
get_fix= dll.api("get_fix","int(int WindowHandle, string& Mode)");
T_set_fix= dll.api("T_set_fix","int(struct WindowHandle, struct Mode)");
set_fix= dll.api("set_fix","int(int WindowHandle, string Mode)");
T_get_fixed_lut= dll.api("T_get_fixed_lut","int(struct WindowHandle, struct& Mode)");
get_fixed_lut= dll.api("get_fixed_lut","int(int WindowHandle, string& Mode)");
T_set_fixed_lut= dll.api("T_set_fixed_lut","int(struct WindowHandle, struct Mode)");
set_fixed_lut= dll.api("set_fixed_lut","int(int WindowHandle, string Mode)");
T_gnuplot_plot_funct_1d= dll.api("T_gnuplot_plot_funct_1d","int(struct GnuplotFileID, struct Function)");
T_gnuplot_plot_ctrl= dll.api("T_gnuplot_plot_ctrl","int(struct GnuplotFileID, struct Values)");
T_gnuplot_plot_image= dll.api("T_gnuplot_plot_image","int(ADDR Image, struct GnuplotFileID, struct SamplesX, struct SamplesY, struct ViewRotX, struct ViewRotZ, struct Hidden3D)");
gnuplot_plot_image= dll.api("gnuplot_plot_image","int(ADDR Image, int GnuplotFileID, int SamplesX, int SamplesY, double ViewRotX, double ViewRotZ, string Hidden3D)");
T_gnuplot_close= dll.api("T_gnuplot_close","int(struct GnuplotFileID)");
gnuplot_close= dll.api("gnuplot_close","int(int GnuplotFileID)");
T_gnuplot_open_file= dll.api("T_gnuplot_open_file","int(struct FileName, struct& GnuplotFileID)");
gnuplot_open_file= dll.api("gnuplot_open_file","int(string FileName, int& GnuplotFileID)");
T_gnuplot_open_pipe= dll.api("T_gnuplot_open_pipe","int(struct& GnuplotFileID)");
gnuplot_open_pipe= dll.api("gnuplot_open_pipe","int(int& GnuplotFileID)");
T_create_drawing_object_text= dll.api("T_create_drawing_object_text","int(struct Row, struct Column, struct String, struct& DrawID)");
create_drawing_object_text= dll.api("create_drawing_object_text","int(int Row, int Column, string String, int& DrawID)");
T_get_drawing_object_iconic= dll.api("T_get_drawing_object_iconic","int(ADDR& Object, struct DrawID)");
get_drawing_object_iconic= dll.api("get_drawing_object_iconic","int(ADDR& Object, int DrawID)");
T_clear_drawing_object= dll.api("T_clear_drawing_object","int(struct DrawID)");
clear_drawing_object= dll.api("clear_drawing_object","int(int DrawID)");
T_set_drawing_object_params= dll.api("T_set_drawing_object_params","int(struct DrawID, struct GenParamName, struct GenParamValue)");
set_drawing_object_params= dll.api("set_drawing_object_params","int(int DrawID, string GenParamName, double GenParamValue)");
T_get_drawing_object_params= dll.api("T_get_drawing_object_params","int(struct DrawID, struct GenParamName, struct& GenParamValue)");
get_drawing_object_params= dll.api("get_drawing_object_params","int(int DrawID, string GenParamName, double& GenParamValue)");
T_set_drawing_object_xld= dll.api("T_set_drawing_object_xld","int(ADDR Contour, struct DrawID)");
set_drawing_object_xld= dll.api("set_drawing_object_xld","int(ADDR Contour, int DrawID)");
T_create_drawing_object_xld= dll.api("T_create_drawing_object_xld","int(struct Row, struct Column, struct& DrawID)");
T_create_drawing_object_circle_sector= dll.api("T_create_drawing_object_circle_sector","int(struct Row, struct Column, struct Radius, struct StartAngle, struct EndAngle, struct& DrawID)");
create_drawing_object_circle_sector= dll.api("create_drawing_object_circle_sector","int(double Row, double Column, double Radius, double StartAngle, double EndAngle, int& DrawID)");
T_create_drawing_object_ellipse_sector= dll.api("T_create_drawing_object_ellipse_sector","int(struct Row, struct Column, struct Phi, struct Radius1, struct Radius2, struct StartAngle, struct EndAngle, struct& DrawID)");
create_drawing_object_ellipse_sector= dll.api("create_drawing_object_ellipse_sector","int(double Row, double Column, double Phi, double Radius1, double Radius2, double StartAngle, double EndAngle, int& DrawID)");
T_create_drawing_object_line= dll.api("T_create_drawing_object_line","int(struct Row1, struct Column1, struct Row2, struct Column2, struct& DrawID)");
create_drawing_object_line= dll.api("create_drawing_object_line","int(double Row1, double Column1, double Row2, double Column2, int& DrawID)");
T_create_drawing_object_circle= dll.api("T_create_drawing_object_circle","int(struct Row, struct Column, struct Radius, struct& DrawID)");
create_drawing_object_circle= dll.api("create_drawing_object_circle","int(double Row, double Column, double Radius, int& DrawID)");
T_create_drawing_object_ellipse= dll.api("T_create_drawing_object_ellipse","int(struct Row, struct Column, struct Phi, struct Radius1, struct Radius2, struct& DrawID)");
create_drawing_object_ellipse= dll.api("create_drawing_object_ellipse","int(double Row, double Column, double Phi, double Radius1, double Radius2, int& DrawID)");
T_create_drawing_object_rectangle2= dll.api("T_create_drawing_object_rectangle2","int(struct Row, struct Column, struct Phi, struct Length1, struct Length2, struct& DrawID)");
create_drawing_object_rectangle2= dll.api("create_drawing_object_rectangle2","int(double Row, double Column, double Phi, double Length1, double Length2, int& DrawID)");
T_create_drawing_object_rectangle1= dll.api("T_create_drawing_object_rectangle1","int(struct Row1, struct Column1, struct Row2, struct Column2, struct& DrawID)");
create_drawing_object_rectangle1= dll.api("create_drawing_object_rectangle1","int(double Row1, double Column1, double Row2, double Column2, int& DrawID)");
T_drag_region3= dll.api("T_drag_region3","int(ADDR SourceRegion, ADDR MaskRegion, ADDR& DestinationRegion, struct WindowHandle, struct Row, struct Column)");
drag_region3= dll.api("drag_region3","int(ADDR SourceRegion, ADDR MaskRegion, ADDR& DestinationRegion, int WindowHandle, int Row, int Column)");
T_drag_region2= dll.api("T_drag_region2","int(ADDR SourceRegion, ADDR& DestinationRegion, struct WindowHandle, struct Row, struct Column)");
drag_region2= dll.api("drag_region2","int(ADDR SourceRegion, ADDR& DestinationRegion, int WindowHandle, int Row, int Column)");
T_drag_region1= dll.api("T_drag_region1","int(ADDR SourceRegion, ADDR& DestinationRegion, struct WindowHandle)");
drag_region1= dll.api("drag_region1","int(ADDR SourceRegion, ADDR& DestinationRegion, int WindowHandle)");
T_draw_nurbs_interp_mod= dll.api("T_draw_nurbs_interp_mod","int(ADDR& ContOut, struct WindowHandle, struct Rotate, struct Move, struct Scale, struct KeepRatio, struct Edit, struct Degree, struct RowsIn, struct ColsIn, struct TangentsIn, struct& ControlRows, struct& ControlCols, struct& Knots, struct& Rows, struct& Cols, struct& Tangents)");
T_draw_nurbs_interp= dll.api("T_draw_nurbs_interp","int(ADDR& ContOut, struct WindowHandle, struct Rotate, struct Move, struct Scale, struct KeepRatio, struct Degree, struct& ControlRows, struct& ControlCols, struct& Knots, struct& Rows, struct& Cols, struct& Tangents)");
T_draw_nurbs_mod= dll.api("T_draw_nurbs_mod","int(ADDR& ContOut, struct WindowHandle, struct Rotate, struct Move, struct Scale, struct KeepRatio, struct Edit, struct Degree, struct RowsIn, struct ColsIn, struct WeightsIn, struct& Rows, struct& Cols, struct& Weights)");
T_draw_nurbs= dll.api("T_draw_nurbs","int(ADDR& ContOut, struct WindowHandle, struct Rotate, struct Move, struct Scale, struct KeepRatio, struct Degree, struct& Rows, struct& Cols, struct& Weights)");
T_draw_xld_mod= dll.api("T_draw_xld_mod","int(ADDR ContIn, ADDR& ContOut, struct WindowHandle, struct Rotate, struct Move, struct Scale, struct KeepRatio, struct Edit)");
draw_xld_mod= dll.api("draw_xld_mod","int(ADDR ContIn, ADDR& ContOut, int WindowHandle, string Rotate, string Move, string Scale, string KeepRatio, string Edit)");
T_draw_xld= dll.api("T_draw_xld","int(ADDR& ContOut, struct WindowHandle, struct Rotate, struct Move, struct Scale, struct KeepRatio)");
draw_xld= dll.api("draw_xld","int(ADDR& ContOut, int WindowHandle, string Rotate, string Move, string Scale, string KeepRatio)");
T_draw_rectangle2_mod= dll.api("T_draw_rectangle2_mod","int(struct WindowHandle, struct RowIn, struct ColumnIn, struct PhiIn, struct Length1In, struct Length2In, struct& Row, struct& Column, struct& Phi, struct& Length1, struct& Length2)");
draw_rectangle2_mod= dll.api("draw_rectangle2_mod","int(int WindowHandle, double RowIn, double ColumnIn, double PhiIn, double Length1In, double Length2In, double& Row, double& Column, double& Phi, double& Length1, double& Length2)");
T_draw_rectangle2= dll.api("T_draw_rectangle2","int(struct WindowHandle, struct& Row, struct& Column, struct& Phi, struct& Length1, struct& Length2)");
draw_rectangle2= dll.api("draw_rectangle2","int(int WindowHandle, double& Row, double& Column, double& Phi, double& Length1, double& Length2)");
T_draw_rectangle1_mod= dll.api("T_draw_rectangle1_mod","int(struct WindowHandle, struct Row1In, struct Column1In, struct Row2In, struct Column2In, struct& Row1, struct& Column1, struct& Row2, struct& Column2)");
draw_rectangle1_mod= dll.api("draw_rectangle1_mod","int(int WindowHandle, double Row1In, double Column1In, double Row2In, double Column2In, double& Row1, double& Column1, double& Row2, double& Column2)");
T_draw_rectangle1= dll.api("T_draw_rectangle1","int(struct WindowHandle, struct& Row1, struct& Column1, struct& Row2, struct& Column2)");
draw_rectangle1= dll.api("draw_rectangle1","int(int WindowHandle, double& Row1, double& Column1, double& Row2, double& Column2)");
T_draw_point_mod= dll.api("T_draw_point_mod","int(struct WindowHandle, struct RowIn, struct ColumnIn, struct& Row, struct& Column)");
draw_point_mod= dll.api("draw_point_mod","int(int WindowHandle, double RowIn, double ColumnIn, double& Row, double& Column)");
T_draw_point= dll.api("T_draw_point","int(struct WindowHandle, struct& Row, struct& Column)");
draw_point= dll.api("draw_point","int(int WindowHandle, double& Row, double& Column)");
T_draw_line_mod= dll.api("T_draw_line_mod","int(struct WindowHandle, struct Row1In, struct Column1In, struct Row2In, struct Column2In, struct& Row1, struct& Column1, struct& Row2, struct& Column2)");
draw_line_mod= dll.api("draw_line_mod","int(int WindowHandle, double Row1In, double Column1In, double Row2In, double Column2In, double& Row1, double& Column1, double& Row2, double& Column2)");
T_draw_line= dll.api("T_draw_line","int(struct WindowHandle, struct& Row1, struct& Column1, struct& Row2, struct& Column2)");
draw_line= dll.api("draw_line","int(int WindowHandle, double& Row1, double& Column1, double& Row2, double& Column2)");
T_draw_ellipse_mod= dll.api("T_draw_ellipse_mod","int(struct WindowHandle, struct RowIn, struct ColumnIn, struct PhiIn, struct Radius1In, struct Radius2In, struct& Row, struct& Column, struct& Phi, struct& Radius1, struct& Radius2)");
draw_ellipse_mod= dll.api("draw_ellipse_mod","int(int WindowHandle, double RowIn, double ColumnIn, double PhiIn, double Radius1In, double Radius2In, double& Row, double& Column, double& Phi, double& Radius1, double& Radius2)");
T_draw_ellipse= dll.api("T_draw_ellipse","int(struct WindowHandle, struct& Row, struct& Column, struct& Phi, struct& Radius1, struct& Radius2)");
draw_ellipse= dll.api("draw_ellipse","int(int WindowHandle, double& Row, double& Column, double& Phi, double& Radius1, double& Radius2)");
T_draw_circle_mod= dll.api("T_draw_circle_mod","int(struct WindowHandle, struct RowIn, struct ColumnIn, struct RadiusIn, struct& Row, struct& Column, struct& Radius)");
draw_circle_mod= dll.api("draw_circle_mod","int(int WindowHandle, double RowIn, double ColumnIn, double RadiusIn, double& Row, double& Column, double& Radius)");
T_draw_circle= dll.api("T_draw_circle","int(struct WindowHandle, struct& Row, struct& Column, struct& Radius)");
draw_circle= dll.api("draw_circle","int(int WindowHandle, double& Row, double& Column, double& Radius)");
T_draw_region= dll.api("T_draw_region","int(ADDR& Region, struct WindowHandle)");
draw_region= dll.api("draw_region","int(ADDR& Region, int WindowHandle)");
T_draw_polygon= dll.api("T_draw_polygon","int(ADDR& PolygonRegion, struct WindowHandle)");
draw_polygon= dll.api("draw_polygon","int(ADDR& PolygonRegion, int WindowHandle)");
T_projection_pl= dll.api("T_projection_pl","int(struct Row, struct Column, struct Row1, struct Column1, struct Row2, struct Column2, struct& RowProj, struct& ColProj)");
projection_pl= dll.api("projection_pl","int(double Row, double Column, double Row1, double Column1, double Row2, double Column2, double& RowProj, double& ColProj)");
T_get_points_ellipse= dll.api("T_get_points_ellipse","int(struct Angle, struct Row, struct Column, struct Phi, struct Radius1, struct Radius2, struct& RowPoint, struct& ColPoint)");
get_points_ellipse= dll.api("get_points_ellipse","int(double Angle, double Row, double Column, double Phi, double Radius1, double Radius2, double& RowPoint, double& ColPoint)");
T_intersection_ll= dll.api("T_intersection_ll","int(struct RowA1, struct ColumnA1, struct RowA2, struct ColumnA2, struct RowB1, struct ColumnB1, struct RowB2, struct ColumnB2, struct& Row, struct& Column, struct& IsParallel)");
intersection_ll= dll.api("intersection_ll","int(double RowA1, double ColumnA1, double RowA2, double ColumnA2, double RowB1, double ColumnB1, double RowB2, double ColumnB2, double& Row, double& Column, int& IsParallel)");
T_intersection_contours_xld= dll.api("T_intersection_contours_xld","int(ADDR Contour1, ADDR Contour2, struct IntersectionType, struct& Row, struct& Column, struct& IsOverlapping)");
intersection_contours_xld= dll.api("intersection_contours_xld","int(ADDR Contour1, ADDR Contour2, string IntersectionType, double& Row, double& Column, int& IsOverlapping)");
T_intersection_circle_contour_xld= dll.api("T_intersection_circle_contour_xld","int(ADDR Contour, struct CircleRow, struct CircleColumn, struct CircleRadius, struct CircleStartPhi, struct CircleEndPhi, struct CirclePointOrder, struct& Row, struct& Column)");
intersection_circle_contour_xld= dll.api("intersection_circle_contour_xld","int(ADDR Contour, double CircleRow, double CircleColumn, double CircleRadius, double CircleStartPhi, double CircleEndPhi, string CirclePointOrder, double& Row, double& Column)");
T_intersection_circles= dll.api("T_intersection_circles","int(struct Circle1Row, struct Circle1Column, struct Circle1Radius, struct Circle1StartPhi, struct Circle1EndPhi, struct Circle1PointOrder, struct Circle2Row, struct Circle2Column, struct Circle2Radius, struct Circle2StartPhi, struct Circle2EndPhi, struct Circle2PointOrder, struct& Row, struct& Column, struct& IsOverlapping)");
intersection_circles= dll.api("intersection_circles","int(double Circle1Row, double Circle1Column, double Circle1Radius, double Circle1StartPhi, double Circle1EndPhi, string Circle1PointOrder, double Circle2Row, double Circle2Column, double Circle2Radius, double Circle2StartPhi, double Circle2EndPhi, string Circle2PointOrder, double& Row, double& Column, int& IsOverlapping)");
T_intersection_line_contour_xld= dll.api("T_intersection_line_contour_xld","int(ADDR Contour, struct LineRow1, struct LineColumn1, struct LineRow2, struct LineColumn2, struct& Row, struct& Column, struct& IsOverlapping)");
intersection_line_contour_xld= dll.api("intersection_line_contour_xld","int(ADDR Contour, double LineRow1, double LineColumn1, double LineRow2, double LineColumn2, double& Row, double& Column, int& IsOverlapping)");
T_intersection_line_circle= dll.api("T_intersection_line_circle","int(struct LineRow1, struct LineColumn1, struct LineRow2, struct LineColumn2, struct CircleRow, struct CircleColumn, struct CircleRadius, struct CircleStartPhi, struct CircleEndPhi, struct CirclePointOrder, struct& Row, struct& Column)");
intersection_line_circle= dll.api("intersection_line_circle","int(double LineRow1, double LineColumn1, double LineRow2, double LineColumn2, double CircleRow, double CircleColumn, double CircleRadius, double CircleStartPhi, double CircleEndPhi, string CirclePointOrder, double& Row, double& Column)");
T_intersection_lines= dll.api("T_intersection_lines","int(struct Line1Row1, struct Line1Column1, struct Line1Row2, struct Line1Column2, struct Line2Row1, struct Line2Column1, struct Line2Row2, struct Line2Column2, struct& Row, struct& Column, struct& IsOverlapping)");
intersection_lines= dll.api("intersection_lines","int(double Line1Row1, double Line1Column1, double Line1Row2, double Line1Column2, double Line2Row1, double Line2Column1, double Line2Row2, double Line2Column2, double& Row, double& Column, int& IsOverlapping)");
T_intersection_segment_contour_xld= dll.api("T_intersection_segment_contour_xld","int(ADDR Contour, struct SegmentRow1, struct SegmentColumn1, struct SegmentRow2, struct SegmentColumn2, struct& Row, struct& Column, struct& IsOverlapping)");
intersection_segment_contour_xld= dll.api("intersection_segment_contour_xld","int(ADDR Contour, double SegmentRow1, double SegmentColumn1, double SegmentRow2, double SegmentColumn2, double& Row, double& Column, int& IsOverlapping)");
T_intersection_segment_circle= dll.api("T_intersection_segment_circle","int(struct SegmentRow1, struct SegmentColumn1, struct SegmentRow2, struct SegmentColumn2, struct CircleRow, struct CircleColumn, struct CircleRadius, struct CircleStartPhi, struct CircleEndPhi, struct CirclePointOrder, struct& Row, struct& Column)");
intersection_segment_circle= dll.api("intersection_segment_circle","int(double SegmentRow1, double SegmentColumn1, double SegmentRow2, double SegmentColumn2, double CircleRow, double CircleColumn, double CircleRadius, double CircleStartPhi, double CircleEndPhi, string CirclePointOrder, double& Row, double& Column)");
T_intersection_segment_line= dll.api("T_intersection_segment_line","int(struct SegmentRow1, struct SegmentColumn1, struct SegmentRow2, struct SegmentColumn2, struct LineRow1, struct LineColumn1, struct LineRow2, struct LineColumn2, struct& Row, struct& Column, struct& IsOverlapping)");
intersection_segment_line= dll.api("intersection_segment_line","int(double SegmentRow1, double SegmentColumn1, double SegmentRow2, double SegmentColumn2, double LineRow1, double LineColumn1, double LineRow2, double LineColumn2, double& Row, double& Column, int& IsOverlapping)");
T_intersection_segments= dll.api("T_intersection_segments","int(struct Segment1Row1, struct Segment1Column1, struct Segment1Row2, struct Segment1Column2, struct Segment2Row1, struct Segment2Column1, struct Segment2Row2, struct Segment2Column2, struct& Row, struct& Column, struct& IsOverlapping)");
intersection_segments= dll.api("intersection_segments","int(double Segment1Row1, double Segment1Column1, double Segment1Row2, double Segment1Column2, double Segment2Row1, double Segment2Column1, double Segment2Row2, double Segment2Column2, double& Row, double& Column, int& IsOverlapping)");
T_clear_distance_transform_xld= dll.api("T_clear_distance_transform_xld","int(struct DistanceTransformID)");
clear_distance_transform_xld= dll.api("clear_distance_transform_xld","int(int DistanceTransformID)");
T_apply_distance_transform_xld= dll.api("T_apply_distance_transform_xld","int(ADDR Contour, ADDR& ContourOut, struct DistanceTransformID)");
apply_distance_transform_xld= dll.api("apply_distance_transform_xld","int(ADDR Contour, ADDR& ContourOut, int DistanceTransformID)");
T_read_distance_transform_xld= dll.api("T_read_distance_transform_xld","int(struct FileName, struct& DistanceTransformID)");
read_distance_transform_xld= dll.api("read_distance_transform_xld","int(string FileName, int& DistanceTransformID)");
T_deserialize_distance_transform_xld= dll.api("T_deserialize_distance_transform_xld","int(struct SerializedItemHandle, struct& DistanceTransformID)");
deserialize_distance_transform_xld= dll.api("deserialize_distance_transform_xld","int(int SerializedItemHandle, int& DistanceTransformID)");
T_serialize_distance_transform_xld= dll.api("T_serialize_distance_transform_xld","int(struct DistanceTransformID, struct& SerializedItemHandle)");
serialize_distance_transform_xld= dll.api("serialize_distance_transform_xld","int(int DistanceTransformID, int& SerializedItemHandle)");
T_write_distance_transform_xld= dll.api("T_write_distance_transform_xld","int(struct DistanceTransformID, struct FileName)");
write_distance_transform_xld= dll.api("write_distance_transform_xld","int(int DistanceTransformID, string FileName)");
T_set_distance_transform_xld_param= dll.api("T_set_distance_transform_xld_param","int(struct DistanceTransformID, struct GenParamName, struct GenParamValue)");
set_distance_transform_xld_param= dll.api("set_distance_transform_xld_param","int(int DistanceTransformID, string GenParamName, string GenParamValue)");
T_get_distance_transform_xld_param= dll.api("T_get_distance_transform_xld_param","int(struct DistanceTransformID, struct GenParamName, struct& GenParamValue)");
get_distance_transform_xld_param= dll.api("get_distance_transform_xld_param","int(int DistanceTransformID, string GenParamName, string& GenParamValue)");
T_get_distance_transform_xld_contour= dll.api("T_get_distance_transform_xld_contour","int(ADDR& Contour, struct DistanceTransformID)");
get_distance_transform_xld_contour= dll.api("get_distance_transform_xld_contour","int(ADDR& Contour, int DistanceTransformID)");
T_create_distance_transform_xld= dll.api("T_create_distance_transform_xld","int(ADDR Contour, struct Mode, struct MaxDistance, struct& DistanceTransformID)");
create_distance_transform_xld= dll.api("create_distance_transform_xld","int(ADDR Contour, string Mode, double MaxDistance, int& DistanceTransformID)");
T_distance_contours_xld= dll.api("T_distance_contours_xld","int(ADDR ContourFrom, ADDR ContourTo, ADDR& ContourOut, struct Mode)");
distance_contours_xld= dll.api("distance_contours_xld","int(ADDR ContourFrom, ADDR ContourTo, ADDR& ContourOut, string Mode)");
T_distance_cc_min= dll.api("T_distance_cc_min","int(ADDR Contour1, ADDR Contour2, struct Mode, struct& DistanceMin)");
distance_cc_min= dll.api("distance_cc_min","int(ADDR Contour1, ADDR Contour2, string Mode, double& DistanceMin)");
T_distance_cc= dll.api("T_distance_cc","int(ADDR Contour1, ADDR Contour2, struct Mode, struct& DistanceMin, struct& DistanceMax)");
distance_cc= dll.api("distance_cc","int(ADDR Contour1, ADDR Contour2, string Mode, double& DistanceMin, double& DistanceMax)");
T_distance_sc= dll.api("T_distance_sc","int(ADDR Contour, struct Row1, struct Column1, struct Row2, struct Column2, struct& DistanceMin, struct& DistanceMax)");
distance_sc= dll.api("distance_sc","int(ADDR Contour, double Row1, double Column1, double Row2, double Column2, double& DistanceMin, double& DistanceMax)");
T_distance_lc= dll.api("T_distance_lc","int(ADDR Contour, struct Row1, struct Column1, struct Row2, struct Column2, struct& DistanceMin, struct& DistanceMax)");
distance_lc= dll.api("distance_lc","int(ADDR Contour, double Row1, double Column1, double Row2, double Column2, double& DistanceMin, double& DistanceMax)");
T_distance_pc= dll.api("T_distance_pc","int(ADDR Contour, struct Row, struct Column, struct& DistanceMin, struct& DistanceMax)");
distance_pc= dll.api("distance_pc","int(ADDR Contour, double Row, double Column, double& DistanceMin, double& DistanceMax)");
T_distance_sr= dll.api("T_distance_sr","int(ADDR Region, struct Row1, struct Column1, struct Row2, struct Column2, struct& DistanceMin, struct& DistanceMax)");
distance_sr= dll.api("distance_sr","int(ADDR Region, double Row1, double Column1, double Row2, double Column2, double& DistanceMin, double& DistanceMax)");
T_distance_lr= dll.api("T_distance_lr","int(ADDR Region, struct Row1, struct Column1, struct Row2, struct Column2, struct& DistanceMin, struct& DistanceMax)");
distance_lr= dll.api("distance_lr","int(ADDR Region, double Row1, double Column1, double Row2, double Column2, double& DistanceMin, double& DistanceMax)");
T_distance_pr= dll.api("T_distance_pr","int(ADDR Region, struct Row, struct Column, struct& DistanceMin, struct& DistanceMax)");
distance_pr= dll.api("distance_pr","int(ADDR Region, double Row, double Column, double& DistanceMin, double& DistanceMax)");
T_angle_lx= dll.api("T_angle_lx","int(struct Row1, struct Column1, struct Row2, struct Column2, struct& Angle)");
angle_lx= dll.api("angle_lx","int(double Row1, double Column1, double Row2, double Column2, double& Angle)");
T_angle_ll= dll.api("T_angle_ll","int(struct RowA1, struct ColumnA1, struct RowA2, struct ColumnA2, struct RowB1, struct ColumnB1, struct RowB2, struct ColumnB2, struct& Angle)");
angle_ll= dll.api("angle_ll","int(double RowA1, double ColumnA1, double RowA2, double ColumnA2, double RowB1, double ColumnB1, double RowB2, double ColumnB2, double& Angle)");
T_distance_sl= dll.api("T_distance_sl","int(struct RowA1, struct ColumnA1, struct RowA2, struct ColumnA2, struct RowB1, struct ColumnB1, struct RowB2, struct ColumnB2, struct& DistanceMin, struct& DistanceMax)");
distance_sl= dll.api("distance_sl","int(double RowA1, double ColumnA1, double RowA2, double ColumnA2, double RowB1, double ColumnB1, double RowB2, double ColumnB2, double& DistanceMin, double& DistanceMax)");
T_distance_ss= dll.api("T_distance_ss","int(struct RowA1, struct ColumnA1, struct RowA2, struct ColumnA2, struct RowB1, struct ColumnB1, struct RowB2, struct ColumnB2, struct& DistanceMin, struct& DistanceMax)");
distance_ss= dll.api("distance_ss","int(double RowA1, double ColumnA1, double RowA2, double ColumnA2, double RowB1, double ColumnB1, double RowB2, double ColumnB2, double& DistanceMin, double& DistanceMax)");
T_distance_ps= dll.api("T_distance_ps","int(struct Row, struct Column, struct Row1, struct Column1, struct Row2, struct Column2, struct& DistanceMin, struct& DistanceMax)");
distance_ps= dll.api("distance_ps","int(double Row, double Column, double Row1, double Column1, double Row2, double Column2, double& DistanceMin, double& DistanceMax)");
T_distance_pl= dll.api("T_distance_pl","int(struct Row, struct Column, struct Row1, struct Column1, struct Row2, struct Column2, struct& Distance)");
distance_pl= dll.api("distance_pl","int(double Row, double Column, double Row1, double Column1, double Row2, double Column2, double& Distance)");
T_distance_pp= dll.api("T_distance_pp","int(struct Row1, struct Column1, struct Row2, struct Column2, struct& Distance)");
distance_pp= dll.api("distance_pp","int(double Row1, double Column1, double Row2, double Column2, double& Distance)");
T_compose_funct_1d= dll.api("T_compose_funct_1d","int(struct Function1, struct Function2, struct Border, struct& ComposedFunction)");
T_invert_funct_1d= dll.api("T_invert_funct_1d","int(struct Function, struct& InverseFunction)");
T_derivate_funct_1d= dll.api("T_derivate_funct_1d","int(struct Function, struct Mode, struct& Derivative)");
T_local_min_max_funct_1d= dll.api("T_local_min_max_funct_1d","int(struct Function, struct Mode, struct Interpolation, struct& Min, struct& Max)");
T_zero_crossings_funct_1d= dll.api("T_zero_crossings_funct_1d","int(struct Function, struct& ZeroCrossings)");
T_scale_y_funct_1d= dll.api("T_scale_y_funct_1d","int(struct Function, struct Mult, struct Add, struct& FunctionScaled)");
T_negate_funct_1d= dll.api("T_negate_funct_1d","int(struct Function, struct& FunctionInverted)");
T_abs_funct_1d= dll.api("T_abs_funct_1d","int(struct Function, struct& FunctionAbsolute)");
T_get_y_value_funct_1d= dll.api("T_get_y_value_funct_1d","int(struct Function, struct X, struct Border, struct& Y)");
T_get_pair_funct_1d= dll.api("T_get_pair_funct_1d","int(struct Function, struct Index, struct& X, struct& Y)");
T_num_points_funct_1d= dll.api("T_num_points_funct_1d","int(struct Function, struct& Length)");
T_y_range_funct_1d= dll.api("T_y_range_funct_1d","int(struct Function, struct& YMin, struct& YMax)");
T_x_range_funct_1d= dll.api("T_x_range_funct_1d","int(struct Function, struct& XMin, struct& XMax)");
T_funct_1d_to_pairs= dll.api("T_funct_1d_to_pairs","int(struct Function, struct& XValues, struct& YValues)");
T_sample_funct_1d= dll.api("T_sample_funct_1d","int(struct Function, struct XMin, struct XMax, struct XDist, struct Border, struct& SampledFunction)");
T_transform_funct_1d= dll.api("T_transform_funct_1d","int(struct Function, struct Params, struct& TransformedFunction)");
T_match_funct_1d_trans= dll.api("T_match_funct_1d_trans","int(struct Function1, struct Function2, struct Border, struct ParamsConst, struct UseParams, struct& Params, struct& ChiSquare, struct& Covar)");
T_distance_funct_1d= dll.api("T_distance_funct_1d","int(struct Function1, struct Function2, struct Mode, struct Sigma, struct& Distance)");
T_smooth_funct_1d_gauss= dll.api("T_smooth_funct_1d_gauss","int(struct Function, struct Sigma, struct& SmoothedFunction)");
T_integrate_funct_1d= dll.api("T_integrate_funct_1d","int(struct Function, struct& Positive, struct& Negative)");
T_read_funct_1d= dll.api("T_read_funct_1d","int(struct FileName, struct& Function)");
read_funct_1d= dll.api("read_funct_1d","int(string FileName, double& Function)");
T_write_funct_1d= dll.api("T_write_funct_1d","int(struct Function, struct FileName)");
T_create_funct_1d_array= dll.api("T_create_funct_1d_array","int(struct YValues, struct& Function)");
T_create_funct_1d_pairs= dll.api("T_create_funct_1d_pairs","int(struct XValues, struct YValues, struct& Function)");
T_smooth_funct_1d_mean= dll.api("T_smooth_funct_1d_mean","int(struct Function, struct SmoothSize, struct Iterations, struct& SmoothedFunction)");
T_texture_laws= dll.api("T_texture_laws","int(ADDR Image, ADDR& ImageTexture, struct FilterTypes, struct Shift, struct FilterSize)");
texture_laws= dll.api("texture_laws","int(ADDR Image, ADDR& ImageTexture, string FilterTypes, int Shift, int FilterSize)");
T_deviation_image= dll.api("T_deviation_image","int(ADDR Image, ADDR& ImageDeviation, struct Width, struct Height)");
deviation_image= dll.api("deviation_image","int(ADDR Image, ADDR& ImageDeviation, int Width, int Height)");
T_entropy_image= dll.api("T_entropy_image","int(ADDR Image, ADDR& ImageEntropy, struct Width, struct Height)");
entropy_image= dll.api("entropy_image","int(ADDR Image, ADDR& ImageEntropy, int Width, int Height)");
T_isotropic_diffusion= dll.api("T_isotropic_diffusion","int(ADDR Image, ADDR& SmoothedImage, struct Sigma, struct Iterations)");
isotropic_diffusion= dll.api("isotropic_diffusion","int(ADDR Image, ADDR& SmoothedImage, double Sigma, int Iterations)");
T_anisotropic_diffusion= dll.api("T_anisotropic_diffusion","int(ADDR Image, ADDR& ImageAniso, struct Mode, struct Contrast, struct Theta, struct Iterations)");
anisotropic_diffusion= dll.api("anisotropic_diffusion","int(ADDR Image, ADDR& ImageAniso, string Mode, double Contrast, double Theta, int Iterations)");
T_smooth_image= dll.api("T_smooth_image","int(ADDR Image, ADDR& ImageSmooth, struct Filter, struct Alpha)");
smooth_image= dll.api("smooth_image","int(ADDR Image, ADDR& ImageSmooth, string Filter, double Alpha)");
T_sigma_image= dll.api("T_sigma_image","int(ADDR Image, ADDR& ImageSigma, struct MaskHeight, struct MaskWidth, struct Sigma)");
sigma_image= dll.api("sigma_image","int(ADDR Image, ADDR& ImageSigma, int MaskHeight, int MaskWidth, int Sigma)");
T_midrange_image= dll.api("T_midrange_image","int(ADDR Image, ADDR Mask, ADDR& ImageMidrange, struct Margin)");
midrange_image= dll.api("midrange_image","int(ADDR Image, ADDR Mask, ADDR& ImageMidrange, string Margin)");
T_trimmed_mean= dll.api("T_trimmed_mean","int(ADDR Image, ADDR Mask, ADDR& ImageTMean, struct Number, struct Margin)");
trimmed_mean= dll.api("trimmed_mean","int(ADDR Image, ADDR Mask, ADDR& ImageTMean, int Number, string Margin)");
T_median_separate= dll.api("T_median_separate","int(ADDR Image, ADDR& ImageSMedian, struct MaskWidth, struct MaskHeight, struct Margin)");
median_separate= dll.api("median_separate","int(ADDR Image, ADDR& ImageSMedian, int MaskWidth, int MaskHeight, string Margin)");
T_median_rect= dll.api("T_median_rect","int(ADDR Image, ADDR& ImageMedian, struct MaskWidth, struct MaskHeight)");
median_rect= dll.api("median_rect","int(ADDR Image, ADDR& ImageMedian, int MaskWidth, int MaskHeight)");
T_median_image= dll.api("T_median_image","int(ADDR Image, ADDR& ImageMedian, struct MaskType, struct Radius, struct Margin)");
median_image= dll.api("median_image","int(ADDR Image, ADDR& ImageMedian, string MaskType, int Radius, string Margin)");
T_median_weighted= dll.api("T_median_weighted","int(ADDR Image, ADDR& ImageWMedian, struct MaskType, struct MaskSize)");
median_weighted= dll.api("median_weighted","int(ADDR Image, ADDR& ImageWMedian, string MaskType, int MaskSize)");
T_rank_rect= dll.api("T_rank_rect","int(ADDR Image, ADDR& ImageRank, struct MaskWidth, struct MaskHeight, struct Rank)");
rank_rect= dll.api("rank_rect","int(ADDR Image, ADDR& ImageRank, int MaskWidth, int MaskHeight, int Rank)");
T_rank_image= dll.api("T_rank_image","int(ADDR Image, ADDR Mask, ADDR& ImageRank, struct Rank, struct Margin)");
rank_image= dll.api("rank_image","int(ADDR Image, ADDR Mask, ADDR& ImageRank, int Rank, string Margin)");
T_dual_rank= dll.api("T_dual_rank","int(ADDR Image, ADDR& ImageRank, struct MaskType, struct Radius, struct ModePercent, struct Margin)");
dual_rank= dll.api("dual_rank","int(ADDR Image, ADDR& ImageRank, string MaskType, int Radius, int ModePercent, string Margin)");
T_mean_image= dll.api("T_mean_image","int(ADDR Image, ADDR& ImageMean, struct MaskWidth, struct MaskHeight)");
mean_image= dll.api("mean_image","int(ADDR Image, ADDR& ImageMean, int MaskWidth, int MaskHeight)");
T_info_smooth= dll.api("T_info_smooth","int(struct Filter, struct Alpha, struct& Size, struct& Coeffs)");
T_binomial_filter= dll.api("T_binomial_filter","int(ADDR Image, ADDR& ImageBinomial, struct MaskWidth, struct MaskHeight)");
binomial_filter= dll.api("binomial_filter","int(ADDR Image, ADDR& ImageBinomial, int MaskWidth, int MaskHeight)");
T_gauss_image= dll.api("T_gauss_image","int(ADDR Image, ADDR& ImageGauss, struct Size)");
gauss_image= dll.api("gauss_image","int(ADDR Image, ADDR& ImageGauss, int Size)");
T_gauss_filter= dll.api("T_gauss_filter","int(ADDR Image, ADDR& ImageGauss, struct Size)");
gauss_filter= dll.api("gauss_filter","int(ADDR Image, ADDR& ImageGauss, int Size)");
T_eliminate_min_max= dll.api("T_eliminate_min_max","int(ADDR Image, ADDR& FilteredImage, struct MaskWidth, struct MaskHeight, struct Gap, struct Mode)");
eliminate_min_max= dll.api("eliminate_min_max","int(ADDR Image, ADDR& FilteredImage, int MaskWidth, int MaskHeight, double Gap, int Mode)");
T_fill_interlace= dll.api("T_fill_interlace","int(ADDR ImageCamera, ADDR& ImageFilled, struct Mode)");
fill_interlace= dll.api("fill_interlace","int(ADDR ImageCamera, ADDR& ImageFilled, string Mode)");
T_rank_n= dll.api("T_rank_n","int(ADDR Image, ADDR& RankImage, struct RankIndex)");
rank_n= dll.api("rank_n","int(ADDR Image, ADDR& RankImage, int RankIndex)");
T_mean_n= dll.api("T_mean_n","int(ADDR Image, ADDR& ImageMean)");
mean_n= dll.api("mean_n","int(ADDR Image, ADDR& ImageMean)");
T_eliminate_sp= dll.api("T_eliminate_sp","int(ADDR Image, ADDR& ImageFillSP, struct MaskWidth, struct MaskHeight, struct MinThresh, struct MaxThresh)");
eliminate_sp= dll.api("eliminate_sp","int(ADDR Image, ADDR& ImageFillSP, int MaskWidth, int MaskHeight, int MinThresh, int MaxThresh)");
T_mean_sp= dll.api("T_mean_sp","int(ADDR Image, ADDR& ImageSPMean, struct MaskWidth, struct MaskHeight, struct MinThresh, struct MaxThresh)");
mean_sp= dll.api("mean_sp","int(ADDR Image, ADDR& ImageSPMean, int MaskWidth, int MaskHeight, int MinThresh, int MaxThresh)");
T_points_sojka= dll.api("T_points_sojka","int(ADDR Image, struct MaskSize, struct SigmaW, struct SigmaD, struct MinGrad, struct MinApparentness, struct MinAngle, struct Subpix, struct& Row, struct& Column)");
T_dots_image= dll.api("T_dots_image","int(ADDR Image, ADDR& DotImage, struct Diameter, struct FilterType, struct PixelShift)");
dots_image= dll.api("dots_image","int(ADDR Image, ADDR& DotImage, int Diameter, string FilterType, int PixelShift)");
T_local_min_sub_pix= dll.api("T_local_min_sub_pix","int(ADDR Image, struct Filter, struct Sigma, struct Threshold, struct& Row, struct& Column)");
T_local_max_sub_pix= dll.api("T_local_max_sub_pix","int(ADDR Image, struct Filter, struct Sigma, struct Threshold, struct& Row, struct& Column)");
T_saddle_points_sub_pix= dll.api("T_saddle_points_sub_pix","int(ADDR Image, struct Filter, struct Sigma, struct Threshold, struct& Row, struct& Column)");
T_critical_points_sub_pix= dll.api("T_critical_points_sub_pix","int(ADDR Image, struct Filter, struct Sigma, struct Threshold, struct& RowMin, struct& ColumnMin, struct& RowMax, struct& ColumnMax, struct& RowSaddle, struct& ColumnSaddle)");
T_points_harris= dll.api("T_points_harris","int(ADDR Image, struct SigmaGrad, struct SigmaSmooth, struct Alpha, struct Threshold, struct& Row, struct& Column)");
T_points_harris_binomial= dll.api("T_points_harris_binomial","int(ADDR Image, struct MaskSizeGrad, struct MaskSizeSmooth, struct Alpha, struct Threshold, struct Subpix, struct& Row, struct& Column)");
T_points_lepetit= dll.api("T_points_lepetit","int(ADDR Image, struct Radius, struct CheckNeighbor, struct MinCheckNeighborDiff, struct MinScore, struct Subpix, struct& Row, struct& Column)");
T_points_foerstner= dll.api("T_points_foerstner","int(ADDR Image, struct SigmaGrad, struct SigmaInt, struct SigmaPoints, struct ThreshInhom, struct ThreshShape, struct Smoothing, struct EliminateDoublets, struct& RowJunctions, struct& ColumnJunctions, struct& CoRRJunctions, struct& CoRCJunctions, struct& CoCCJunctions, struct& RowArea, struct& ColumnArea, struct& CoRRArea, struct& CoRCArea, struct& CoCCArea)");
T_estimate_noise= dll.api("T_estimate_noise","int(ADDR Image, struct Method, struct Percent, struct& Sigma)");
estimate_noise= dll.api("estimate_noise","int(ADDR Image, string Method, double Percent, double& Sigma)");
T_noise_distribution_mean= dll.api("T_noise_distribution_mean","int(ADDR ConstRegion, ADDR Image, struct FilterSize, struct& Distribution)");
T_add_noise_white= dll.api("T_add_noise_white","int(ADDR Image, ADDR& ImageNoise, struct Amp)");
add_noise_white= dll.api("add_noise_white","int(ADDR Image, ADDR& ImageNoise, double Amp)");
T_add_noise_distribution= dll.api("T_add_noise_distribution","int(ADDR Image, ADDR& ImageNoise, struct Distribution)");
T_gauss_distribution= dll.api("T_gauss_distribution","int(struct Sigma, struct& Distribution)");
T_sp_distribution= dll.api("T_sp_distribution","int(struct PercentSalt, struct PercentPepper, struct& Distribution)");
T_deviation_n= dll.api("T_deviation_n","int(ADDR Image, ADDR& ImageDeviation)");
deviation_n= dll.api("deviation_n","int(ADDR Image, ADDR& ImageDeviation)");
T_inpainting_texture= dll.api("T_inpainting_texture","int(ADDR Image, ADDR Region, ADDR& InpaintedImage, struct MaskSize, struct SearchSize, struct Anisotropy, struct PostIteration, struct Smoothness)");
inpainting_texture= dll.api("inpainting_texture","int(ADDR Image, ADDR Region, ADDR& InpaintedImage, int MaskSize, int SearchSize, double Anisotropy, string PostIteration, double Smoothness)");
T_inpainting_ct= dll.api("T_inpainting_ct","int(ADDR Image, ADDR Region, ADDR& InpaintedImage, struct Epsilon, struct Kappa, struct Sigma, struct Rho, struct ChannelCoefficients)");
inpainting_ct= dll.api("inpainting_ct","int(ADDR Image, ADDR Region, ADDR& InpaintedImage, double Epsilon, double Kappa, double Sigma, double Rho, double ChannelCoefficients)");
T_inpainting_mcf= dll.api("T_inpainting_mcf","int(ADDR Image, ADDR Region, ADDR& InpaintedImage, struct Sigma, struct Theta, struct Iterations)");
inpainting_mcf= dll.api("inpainting_mcf","int(ADDR Image, ADDR Region, ADDR& InpaintedImage, double Sigma, double Theta, int Iterations)");
T_inpainting_ced= dll.api("T_inpainting_ced","int(ADDR Image, ADDR Region, ADDR& InpaintedImage, struct Sigma, struct Rho, struct Theta, struct Iterations)");
inpainting_ced= dll.api("inpainting_ced","int(ADDR Image, ADDR Region, ADDR& InpaintedImage, double Sigma, double Rho, double Theta, int Iterations)");
T_inpainting_aniso= dll.api("T_inpainting_aniso","int(ADDR Image, ADDR Region, ADDR& InpaintedImage, struct Mode, struct Contrast, struct Theta, struct Iterations, struct Rho)");
inpainting_aniso= dll.api("inpainting_aniso","int(ADDR Image, ADDR Region, ADDR& InpaintedImage, string Mode, double Contrast, double Theta, int Iterations, double Rho)");
T_harmonic_interpolation= dll.api("T_harmonic_interpolation","int(ADDR Image, ADDR Region, ADDR& InpaintedImage, struct Precision)");
harmonic_interpolation= dll.api("harmonic_interpolation","int(ADDR Image, ADDR Region, ADDR& InpaintedImage, double Precision)");
T_expand_domain_gray= dll.api("T_expand_domain_gray","int(ADDR InputImage, ADDR& ExpandedImage, struct ExpansionRange)");
expand_domain_gray= dll.api("expand_domain_gray","int(ADDR InputImage, ADDR& ExpandedImage, int ExpansionRange)");
T_topographic_sketch= dll.api("T_topographic_sketch","int(ADDR Image, ADDR& Sketch)");
topographic_sketch= dll.api("topographic_sketch","int(ADDR Image, ADDR& Sketch)");
T_linear_trans_color= dll.api("T_linear_trans_color","int(ADDR Image, ADDR& ImageTrans, struct TransMat)");
T_gen_principal_comp_trans= dll.api("T_gen_principal_comp_trans","int(ADDR MultichannelImage, struct& Trans, struct& TransInv, struct& Mean, struct& Cov, struct& InfoPerComp)");
T_principal_comp= dll.api("T_principal_comp","int(ADDR MultichannelImage, ADDR& PCAImage, struct& InfoPerComp)");
T_fuzzy_entropy= dll.api("T_fuzzy_entropy","int(ADDR Regions, ADDR Image, struct Apar, struct Cpar, struct& Entropy)");
fuzzy_entropy= dll.api("fuzzy_entropy","int(ADDR Regions, ADDR Image, int Apar, int Cpar, double& Entropy)");
T_fuzzy_perimeter= dll.api("T_fuzzy_perimeter","int(ADDR Regions, ADDR Image, struct Apar, struct Cpar, struct& Perimeter)");
fuzzy_perimeter= dll.api("fuzzy_perimeter","int(ADDR Regions, ADDR Image, int Apar, int Cpar, double& Perimeter)");
T_gray_closing_shape= dll.api("T_gray_closing_shape","int(ADDR Image, ADDR& ImageClosing, struct MaskHeight, struct MaskWidth, struct MaskShape)");
gray_closing_shape= dll.api("gray_closing_shape","int(ADDR Image, ADDR& ImageClosing, double MaskHeight, double MaskWidth, string MaskShape)");
T_gray_opening_shape= dll.api("T_gray_opening_shape","int(ADDR Image, ADDR& ImageOpening, struct MaskHeight, struct MaskWidth, struct MaskShape)");
gray_opening_shape= dll.api("gray_opening_shape","int(ADDR Image, ADDR& ImageOpening, double MaskHeight, double MaskWidth, string MaskShape)");
T_gray_erosion_shape= dll.api("T_gray_erosion_shape","int(ADDR Image, ADDR& ImageMin, struct MaskHeight, struct MaskWidth, struct MaskShape)");
gray_erosion_shape= dll.api("gray_erosion_shape","int(ADDR Image, ADDR& ImageMin, double MaskHeight, double MaskWidth, string MaskShape)");
T_gray_dilation_shape= dll.api("T_gray_dilation_shape","int(ADDR Image, ADDR& ImageMax, struct MaskHeight, struct MaskWidth, struct MaskShape)");
gray_dilation_shape= dll.api("gray_dilation_shape","int(ADDR Image, ADDR& ImageMax, double MaskHeight, double MaskWidth, string MaskShape)");
T_gray_range_rect= dll.api("T_gray_range_rect","int(ADDR Image, ADDR& ImageResult, struct MaskHeight, struct MaskWidth)");
gray_range_rect= dll.api("gray_range_rect","int(ADDR Image, ADDR& ImageResult, int MaskHeight, int MaskWidth)");
T_gray_closing_rect= dll.api("T_gray_closing_rect","int(ADDR Image, ADDR& ImageClosing, struct MaskHeight, struct MaskWidth)");
gray_closing_rect= dll.api("gray_closing_rect","int(ADDR Image, ADDR& ImageClosing, int MaskHeight, int MaskWidth)");
T_gray_opening_rect= dll.api("T_gray_opening_rect","int(ADDR Image, ADDR& ImageOpening, struct MaskHeight, struct MaskWidth)");
gray_opening_rect= dll.api("gray_opening_rect","int(ADDR Image, ADDR& ImageOpening, int MaskHeight, int MaskWidth)");
T_gray_erosion_rect= dll.api("T_gray_erosion_rect","int(ADDR Image, ADDR& ImageMin, struct MaskHeight, struct MaskWidth)");
gray_erosion_rect= dll.api("gray_erosion_rect","int(ADDR Image, ADDR& ImageMin, int MaskHeight, int MaskWidth)");
T_gray_dilation_rect= dll.api("T_gray_dilation_rect","int(ADDR Image, ADDR& ImageMax, struct MaskHeight, struct MaskWidth)");
gray_dilation_rect= dll.api("gray_dilation_rect","int(ADDR Image, ADDR& ImageMax, int MaskHeight, int MaskWidth)");
T_gray_skeleton= dll.api("T_gray_skeleton","int(ADDR Image, ADDR& GraySkeleton)");
gray_skeleton= dll.api("gray_skeleton","int(ADDR Image, ADDR& GraySkeleton)");
T_lut_trans= dll.api("T_lut_trans","int(ADDR Image, ADDR& ImageResult, struct Lut)");
T_convol_image= dll.api("T_convol_image","int(ADDR Image, ADDR& ImageResult, struct FilterMask, struct Margin)");
convol_image= dll.api("convol_image","int(ADDR Image, ADDR& ImageResult, string FilterMask, string Margin)");
T_convert_image_type= dll.api("T_convert_image_type","int(ADDR Image, ADDR& ImageConverted, struct NewType)");
convert_image_type= dll.api("convert_image_type","int(ADDR Image, ADDR& ImageConverted, string NewType)");
T_real_to_vector_field= dll.api("T_real_to_vector_field","int(ADDR Row, ADDR Col, ADDR& VectorField, struct Type)");
real_to_vector_field= dll.api("real_to_vector_field","int(ADDR Row, ADDR Col, ADDR& VectorField, string Type)");
T_vector_field_to_real= dll.api("T_vector_field_to_real","int(ADDR VectorField, ADDR& Row, ADDR& Col)");
vector_field_to_real= dll.api("vector_field_to_real","int(ADDR VectorField, ADDR& Row, ADDR& Col)");
T_real_to_complex= dll.api("T_real_to_complex","int(ADDR ImageReal, ADDR ImageImaginary, ADDR& ImageComplex)");
real_to_complex= dll.api("real_to_complex","int(ADDR ImageReal, ADDR ImageImaginary, ADDR& ImageComplex)");
T_complex_to_real= dll.api("T_complex_to_real","int(ADDR ImageComplex, ADDR& ImageReal, ADDR& ImageImaginary)");
complex_to_real= dll.api("complex_to_real","int(ADDR ImageComplex, ADDR& ImageReal, ADDR& ImageImaginary)");
T_region_to_mean= dll.api("T_region_to_mean","int(ADDR Regions, ADDR Image, ADDR& ImageMean)");
region_to_mean= dll.api("region_to_mean","int(ADDR Regions, ADDR Image, ADDR& ImageMean)");
T_gray_inside= dll.api("T_gray_inside","int(ADDR Image, ADDR& ImageDist)");
gray_inside= dll.api("gray_inside","int(ADDR Image, ADDR& ImageDist)");
T_symmetry= dll.api("T_symmetry","int(ADDR Image, ADDR& ImageSymmetry, struct MaskSize, struct Direction, struct Exponent)");
symmetry= dll.api("symmetry","int(ADDR Image, ADDR& ImageSymmetry, int MaskSize, double Direction, double Exponent)");
T_select_grayvalues_from_channels= dll.api("T_select_grayvalues_from_channels","int(ADDR MultichannelImage, ADDR IndexImage, ADDR& Selected)");
select_grayvalues_from_channels= dll.api("select_grayvalues_from_channels","int(ADDR MultichannelImage, ADDR IndexImage, ADDR& Selected)");
T_depth_from_focus= dll.api("T_depth_from_focus","int(ADDR MultiFocusImage, ADDR& Depth, ADDR& Confidence, struct Filter, struct Selection)");
depth_from_focus= dll.api("depth_from_focus","int(ADDR MultiFocusImage, ADDR& Depth, ADDR& Confidence, string Filter, string Selection)");
T_scene_flow_calib= dll.api("T_scene_flow_calib","int(ADDR ImageRect1T1, ADDR ImageRect2T1, ADDR ImageRect1T2, ADDR ImageRect2T2, ADDR Disparity, struct SmoothingFlow, struct SmoothingDisparity, struct GenParamName, struct GenParamValue, struct CamParamRect1, struct CamParamRect2, struct RelPoseRect, struct& ObjectModel3D)");
T_scene_flow_uncalib= dll.api("T_scene_flow_uncalib","int(ADDR ImageRect1T1, ADDR ImageRect2T1, ADDR ImageRect1T2, ADDR ImageRect2T2, ADDR Disparity, ADDR& OpticalFlow, ADDR& DisparityChange, struct SmoothingFlow, struct SmoothingDisparity, struct GenParamName, struct GenParamValue)");
scene_flow_uncalib= dll.api("scene_flow_uncalib","int(ADDR ImageRect1T1, ADDR ImageRect2T1, ADDR ImageRect1T2, ADDR ImageRect2T2, ADDR Disparity, ADDR& OpticalFlow, ADDR& DisparityChange, double SmoothingFlow, double SmoothingDisparity, string GenParamName, string GenParamValue)");
T_unwarp_image_vector_field= dll.api("T_unwarp_image_vector_field","int(ADDR Image, ADDR VectorField, ADDR& ImageUnwarped)");
unwarp_image_vector_field= dll.api("unwarp_image_vector_field","int(ADDR Image, ADDR VectorField, ADDR& ImageUnwarped)");
T_derivate_vector_field= dll.api("T_derivate_vector_field","int(ADDR VectorField, ADDR& Result, struct Sigma, struct Component)");
derivate_vector_field= dll.api("derivate_vector_field","int(ADDR VectorField, ADDR& Result, double Sigma, string Component)");
T_vector_field_length= dll.api("T_vector_field_length","int(ADDR VectorField, ADDR& Length, struct Mode)");
vector_field_length= dll.api("vector_field_length","int(ADDR VectorField, ADDR& Length, string Mode)");
T_optical_flow_mg= dll.api("T_optical_flow_mg","int(ADDR ImageT1, ADDR ImageT2, ADDR& VectorField, struct Algorithm, struct SmoothingSigma, struct IntegrationSigma, struct FlowSmoothness, struct GradientConstancy, struct MGParamName, struct MGParamValue)");
optical_flow_mg= dll.api("optical_flow_mg","int(ADDR ImageT1, ADDR ImageT2, ADDR& VectorField, string Algorithm, double SmoothingSigma, double IntegrationSigma, double FlowSmoothness, double GradientConstancy, string MGParamName, string MGParamValue)");
T_exhaustive_match_mg= dll.api("T_exhaustive_match_mg","int(ADDR Image, ADDR ImageTemplate, ADDR& ImageMatch, struct Mode, struct Level, struct Threshold)");
exhaustive_match_mg= dll.api("exhaustive_match_mg","int(ADDR Image, ADDR ImageTemplate, ADDR& ImageMatch, string Mode, int Level, int Threshold)");
T_create_template_rot= dll.api("T_create_template_rot","int(ADDR Template, struct NumLevel, struct AngleStart, struct AngleExtend, struct AngleStep, struct Optimize, struct GrayValues, struct& TemplateID)");
create_template_rot= dll.api("create_template_rot","int(ADDR Template, int NumLevel, double AngleStart, double AngleExtend, double AngleStep, string Optimize, string GrayValues, int& TemplateID)");
T_create_template= dll.api("T_create_template","int(ADDR Template, struct FirstError, struct NumLevel, struct Optimize, struct GrayValues, struct& TemplateID)");
create_template= dll.api("create_template","int(ADDR Template, int FirstError, int NumLevel, string Optimize, string GrayValues, int& TemplateID)");
T_serialize_template= dll.api("T_serialize_template","int(struct TemplateID, struct& SerializedItemHandle)");
serialize_template= dll.api("serialize_template","int(int TemplateID, int& SerializedItemHandle)");
T_deserialize_template= dll.api("T_deserialize_template","int(struct SerializedItemHandle, struct& TemplateID)");
deserialize_template= dll.api("deserialize_template","int(int SerializedItemHandle, int& TemplateID)");
T_write_template= dll.api("T_write_template","int(struct TemplateID, struct FileName)");
write_template= dll.api("write_template","int(int TemplateID, string FileName)");
T_read_template= dll.api("T_read_template","int(struct FileName, struct& TemplateID)");
read_template= dll.api("read_template","int(string FileName, int& TemplateID)");
T_clear_all_templates= dll.api("T_clear_all_templates","int(void)");
clear_all_templates= dll.api("clear_all_templates","int(void)");
T_clear_template= dll.api("T_clear_template","int(struct TemplateID)");
clear_template= dll.api("clear_template","int(int TemplateID)");
T_set_offset_template= dll.api("T_set_offset_template","int(struct TemplateID, struct GrayOffset)");
set_offset_template= dll.api("set_offset_template","int(int TemplateID, int GrayOffset)");
T_set_reference_template= dll.api("T_set_reference_template","int(struct TemplateID, struct Row, struct Column)");
set_reference_template= dll.api("set_reference_template","int(int TemplateID, double Row, double Column)");
T_adapt_template= dll.api("T_adapt_template","int(ADDR Image, struct TemplateID)");
adapt_template= dll.api("adapt_template","int(ADDR Image, int TemplateID)");
T_fast_match_mg= dll.api("T_fast_match_mg","int(ADDR Image, ADDR& Matches, struct TemplateID, struct MaxError, struct NumLevel)");
fast_match_mg= dll.api("fast_match_mg","int(ADDR Image, ADDR& Matches, int TemplateID, double MaxError, int NumLevel)");
T_best_match_pre_mg= dll.api("T_best_match_pre_mg","int(ADDR ImagePyramid, struct TemplateID, struct MaxError, struct SubPixel, struct NumLevels, struct WhichLevels, struct& Row, struct& Column, struct& Error)");
best_match_pre_mg= dll.api("best_match_pre_mg","int(ADDR ImagePyramid, int TemplateID, double MaxError, string SubPixel, int NumLevels, int WhichLevels, double& Row, double& Column, double& Error)");
T_best_match_mg= dll.api("T_best_match_mg","int(ADDR Image, struct TemplateID, struct MaxError, struct SubPixel, struct NumLevels, struct WhichLevels, struct& Row, struct& Column, struct& Error)");
best_match_mg= dll.api("best_match_mg","int(ADDR Image, int TemplateID, double MaxError, string SubPixel, int NumLevels, int WhichLevels, double& Row, double& Column, double& Error)");
T_fast_match= dll.api("T_fast_match","int(ADDR Image, ADDR& Matches, struct TemplateID, struct MaxError)");
fast_match= dll.api("fast_match","int(ADDR Image, ADDR& Matches, int TemplateID, double MaxError)");
T_best_match_rot_mg= dll.api("T_best_match_rot_mg","int(ADDR Image, struct TemplateID, struct AngleStart, struct AngleExtend, struct MaxError, struct SubPixel, struct NumLevels, struct& Row, struct& Column, struct& Angle, struct& Error)");
best_match_rot_mg= dll.api("best_match_rot_mg","int(ADDR Image, int TemplateID, double AngleStart, double AngleExtend, double MaxError, string SubPixel, int NumLevels, double& Row, double& Column, double& Angle, double& Error)");
T_best_match_rot= dll.api("T_best_match_rot","int(ADDR Image, struct TemplateID, struct AngleStart, struct AngleExtend, struct MaxError, struct SubPixel, struct& Row, struct& Column, struct& Angle, struct& Error)");
best_match_rot= dll.api("best_match_rot","int(ADDR Image, int TemplateID, double AngleStart, double AngleExtend, double MaxError, string SubPixel, double& Row, double& Column, double& Angle, double& Error)");
T_best_match= dll.api("T_best_match","int(ADDR Image, struct TemplateID, struct MaxError, struct SubPixel, struct& Row, struct& Column, struct& Error)");
best_match= dll.api("best_match","int(ADDR Image, int TemplateID, double MaxError, string SubPixel, double& Row, double& Column, double& Error)");
T_exhaustive_match= dll.api("T_exhaustive_match","int(ADDR Image, ADDR RegionOfInterest, ADDR ImageTemplate, ADDR& ImageMatch, struct Mode)");
exhaustive_match= dll.api("exhaustive_match","int(ADDR Image, ADDR RegionOfInterest, ADDR ImageTemplate, ADDR& ImageMatch, string Mode)");
T_corner_response= dll.api("T_corner_response","int(ADDR Image, ADDR& ImageCorner, struct Size, struct Weight)");
corner_response= dll.api("corner_response","int(ADDR Image, ADDR& ImageCorner, int Size, double Weight)");
T_gen_gauss_pyramid= dll.api("T_gen_gauss_pyramid","int(ADDR Image, ADDR& ImagePyramid, struct Mode, struct Scale)");
gen_gauss_pyramid= dll.api("gen_gauss_pyramid","int(ADDR Image, ADDR& ImagePyramid, string Mode, double Scale)");
T_monotony= dll.api("T_monotony","int(ADDR Image, ADDR& ImageMonotony)");
monotony= dll.api("monotony","int(ADDR Image, ADDR& ImageMonotony)");
T_bandpass_image= dll.api("T_bandpass_image","int(ADDR Image, ADDR& ImageBandpass, struct FilterType)");
bandpass_image= dll.api("bandpass_image","int(ADDR Image, ADDR& ImageBandpass, string FilterType)");
T_lines_color= dll.api("T_lines_color","int(ADDR Image, ADDR& Lines, struct Sigma, struct Low, struct High, struct ExtractWidth, struct CompleteJunctions)");
lines_color= dll.api("lines_color","int(ADDR Image, ADDR& Lines, double Sigma, double Low, double High, string ExtractWidth, string CompleteJunctions)");
T_lines_gauss= dll.api("T_lines_gauss","int(ADDR Image, ADDR& Lines, struct Sigma, struct Low, struct High, struct LightDark, struct ExtractWidth, struct LineModel, struct CompleteJunctions)");
lines_gauss= dll.api("lines_gauss","int(ADDR Image, ADDR& Lines, double Sigma, double Low, double High, string LightDark, string ExtractWidth, string LineModel, string CompleteJunctions)");
T_lines_facet= dll.api("T_lines_facet","int(ADDR Image, ADDR& Lines, struct MaskSize, struct Low, struct High, struct LightDark)");
lines_facet= dll.api("lines_facet","int(ADDR Image, ADDR& Lines, int MaskSize, double Low, double High, string LightDark)");
T_gen_filter_mask= dll.api("T_gen_filter_mask","int(ADDR& ImageFilter, struct FilterMask, struct Scale, struct Width, struct Height)");
gen_filter_mask= dll.api("gen_filter_mask","int(ADDR& ImageFilter, string FilterMask, double Scale, int Width, int Height)");
T_gen_mean_filter= dll.api("T_gen_mean_filter","int(ADDR& ImageMean, struct MaskShape, struct Diameter1, struct Diameter2, struct Phi, struct Norm, struct Mode, struct Width, struct Height)");
gen_mean_filter= dll.api("gen_mean_filter","int(ADDR& ImageMean, string MaskShape, double Diameter1, double Diameter2, double Phi, string Norm, string Mode, int Width, int Height)");
T_gen_gauss_filter= dll.api("T_gen_gauss_filter","int(ADDR& ImageGauss, struct Sigma1, struct Sigma2, struct Phi, struct Norm, struct Mode, struct Width, struct Height)");
gen_gauss_filter= dll.api("gen_gauss_filter","int(ADDR& ImageGauss, double Sigma1, double Sigma2, double Phi, string Norm, string Mode, int Width, int Height)");
T_gen_derivative_filter= dll.api("T_gen_derivative_filter","int(ADDR& ImageDerivative, struct Derivative, struct Exponent, struct Norm, struct Mode, struct Width, struct Height)");
gen_derivative_filter= dll.api("gen_derivative_filter","int(ADDR& ImageDerivative, string Derivative, int Exponent, string Norm, string Mode, int Width, int Height)");
T_gen_std_bandpass= dll.api("T_gen_std_bandpass","int(ADDR& ImageFilter, struct Frequency, struct Sigma, struct Type, struct Norm, struct Mode, struct Width, struct Height)");
gen_std_bandpass= dll.api("gen_std_bandpass","int(ADDR& ImageFilter, double Frequency, double Sigma, string Type, string Norm, string Mode, int Width, int Height)");
T_gen_sin_bandpass= dll.api("T_gen_sin_bandpass","int(ADDR& ImageFilter, struct Frequency, struct Norm, struct Mode, struct Width, struct Height)");
gen_sin_bandpass= dll.api("gen_sin_bandpass","int(ADDR& ImageFilter, double Frequency, string Norm, string Mode, int Width, int Height)");
T_gen_bandfilter= dll.api("T_gen_bandfilter","int(ADDR& ImageFilter, struct MinFrequency, struct MaxFrequency, struct Norm, struct Mode, struct Width, struct Height)");
gen_bandfilter= dll.api("gen_bandfilter","int(ADDR& ImageFilter, double MinFrequency, double MaxFrequency, string Norm, string Mode, int Width, int Height)");
T_gen_bandpass= dll.api("T_gen_bandpass","int(ADDR& ImageBandpass, struct MinFrequency, struct MaxFrequency, struct Norm, struct Mode, struct Width, struct Height)");
gen_bandpass= dll.api("gen_bandpass","int(ADDR& ImageBandpass, double MinFrequency, double MaxFrequency, string Norm, string Mode, int Width, int Height)");
T_gen_lowpass= dll.api("T_gen_lowpass","int(ADDR& ImageLowpass, struct Frequency, struct Norm, struct Mode, struct Width, struct Height)");
gen_lowpass= dll.api("gen_lowpass","int(ADDR& ImageLowpass, double Frequency, string Norm, string Mode, int Width, int Height)");
T_gen_highpass= dll.api("T_gen_highpass","int(ADDR& ImageHighpass, struct Frequency, struct Norm, struct Mode, struct Width, struct Height)");
gen_highpass= dll.api("gen_highpass","int(ADDR& ImageHighpass, double Frequency, string Norm, string Mode, int Width, int Height)");
T_power_ln= dll.api("T_power_ln","int(ADDR Image, ADDR& ImageResult)");
power_ln= dll.api("power_ln","int(ADDR Image, ADDR& ImageResult)");
T_power_real= dll.api("T_power_real","int(ADDR Image, ADDR& ImageResult)");
power_real= dll.api("power_real","int(ADDR Image, ADDR& ImageResult)");
T_power_byte= dll.api("T_power_byte","int(ADDR Image, ADDR& PowerByte)");
power_byte= dll.api("power_byte","int(ADDR Image, ADDR& PowerByte)");
T_phase_deg= dll.api("T_phase_deg","int(ADDR ImageComplex, ADDR& ImagePhase)");
phase_deg= dll.api("phase_deg","int(ADDR ImageComplex, ADDR& ImagePhase)");
T_phase_rad= dll.api("T_phase_rad","int(ADDR ImageComplex, ADDR& ImagePhase)");
phase_rad= dll.api("phase_rad","int(ADDR ImageComplex, ADDR& ImagePhase)");
T_energy_gabor= dll.api("T_energy_gabor","int(ADDR ImageGabor, ADDR ImageHilbert, ADDR& Energy)");
energy_gabor= dll.api("energy_gabor","int(ADDR ImageGabor, ADDR ImageHilbert, ADDR& Energy)");
T_convol_gabor= dll.api("T_convol_gabor","int(ADDR ImageFFT, ADDR GaborFilter, ADDR& ImageResultGabor, ADDR& ImageResultHilbert)");
convol_gabor= dll.api("convol_gabor","int(ADDR ImageFFT, ADDR GaborFilter, ADDR& ImageResultGabor, ADDR& ImageResultHilbert)");
T_gen_gabor= dll.api("T_gen_gabor","int(ADDR& ImageFilter, struct Angle, struct Frequency, struct Bandwidth, struct Orientation, struct Norm, struct Mode, struct Width, struct Height)");
gen_gabor= dll.api("gen_gabor","int(ADDR& ImageFilter, double Angle, double Frequency, double Bandwidth, double Orientation, string Norm, string Mode, int Width, int Height)");
T_phase_correlation_fft= dll.api("T_phase_correlation_fft","int(ADDR ImageFFT1, ADDR ImageFFT2, ADDR& ImagePhaseCorrelation)");
phase_correlation_fft= dll.api("phase_correlation_fft","int(ADDR ImageFFT1, ADDR ImageFFT2, ADDR& ImagePhaseCorrelation)");
T_correlation_fft= dll.api("T_correlation_fft","int(ADDR ImageFFT1, ADDR ImageFFT2, ADDR& ImageCorrelation)");
correlation_fft= dll.api("correlation_fft","int(ADDR ImageFFT1, ADDR ImageFFT2, ADDR& ImageCorrelation)");
T_convol_fft= dll.api("T_convol_fft","int(ADDR ImageFFT, ADDR ImageFilter, ADDR& ImageConvol)");
convol_fft= dll.api("convol_fft","int(ADDR ImageFFT, ADDR ImageFilter, ADDR& ImageConvol)");
T_deserialize_fft_optimization_data= dll.api("T_deserialize_fft_optimization_data","int(struct SerializedItemHandle)");
deserialize_fft_optimization_data= dll.api("deserialize_fft_optimization_data","int(int SerializedItemHandle)");
T_serialize_fft_optimization_data= dll.api("T_serialize_fft_optimization_data","int(struct& SerializedItemHandle)");
serialize_fft_optimization_data= dll.api("serialize_fft_optimization_data","int(int& SerializedItemHandle)");
T_read_fft_optimization_data= dll.api("T_read_fft_optimization_data","int(struct FileName)");
read_fft_optimization_data= dll.api("read_fft_optimization_data","int(string FileName)");
T_write_fft_optimization_data= dll.api("T_write_fft_optimization_data","int(struct FileName)");
write_fft_optimization_data= dll.api("write_fft_optimization_data","int(string FileName)");
T_optimize_rft_speed= dll.api("T_optimize_rft_speed","int(struct Width, struct Height, struct Mode)");
optimize_rft_speed= dll.api("optimize_rft_speed","int(int Width, int Height, string Mode)");
T_optimize_fft_speed= dll.api("T_optimize_fft_speed","int(struct Width, struct Height, struct Mode)");
optimize_fft_speed= dll.api("optimize_fft_speed","int(int Width, int Height, string Mode)");
T_rft_generic= dll.api("T_rft_generic","int(ADDR Image, ADDR& ImageFFT, struct Direction, struct Norm, struct ResultType, struct Width)");
rft_generic= dll.api("rft_generic","int(ADDR Image, ADDR& ImageFFT, string Direction, string Norm, string ResultType, int Width)");
T_fft_image_inv= dll.api("T_fft_image_inv","int(ADDR Image, ADDR& ImageFFTInv)");
fft_image_inv= dll.api("fft_image_inv","int(ADDR Image, ADDR& ImageFFTInv)");
T_fft_image= dll.api("T_fft_image","int(ADDR Image, ADDR& ImageFFT)");
fft_image= dll.api("fft_image","int(ADDR Image, ADDR& ImageFFT)");
T_fft_generic= dll.api("T_fft_generic","int(ADDR Image, ADDR& ImageFFT, struct Direction, struct Exponent, struct Norm, struct Mode, struct ResultType)");
fft_generic= dll.api("fft_generic","int(ADDR Image, ADDR& ImageFFT, string Direction, int Exponent, string Norm, string Mode, string ResultType)");
T_shock_filter= dll.api("T_shock_filter","int(ADDR Image, ADDR& SharpenedImage, struct Theta, struct Iterations, struct Mode, struct Sigma)");
shock_filter= dll.api("shock_filter","int(ADDR Image, ADDR& SharpenedImage, double Theta, int Iterations, string Mode, double Sigma)");
T_mean_curvature_flow= dll.api("T_mean_curvature_flow","int(ADDR Image, ADDR& ImageMCF, struct Sigma, struct Theta, struct Iterations)");
mean_curvature_flow= dll.api("mean_curvature_flow","int(ADDR Image, ADDR& ImageMCF, double Sigma, double Theta, int Iterations)");
T_coherence_enhancing_diff= dll.api("T_coherence_enhancing_diff","int(ADDR Image, ADDR& ImageCED, struct Sigma, struct Rho, struct Theta, struct Iterations)");
coherence_enhancing_diff= dll.api("coherence_enhancing_diff","int(ADDR Image, ADDR& ImageCED, double Sigma, double Rho, double Theta, int Iterations)");
T_equ_histo_image= dll.api("T_equ_histo_image","int(ADDR Image, ADDR& ImageEquHisto)");
equ_histo_image= dll.api("equ_histo_image","int(ADDR Image, ADDR& ImageEquHisto)");
T_illuminate= dll.api("T_illuminate","int(ADDR Image, ADDR& ImageIlluminate, struct MaskWidth, struct MaskHeight, struct Factor)");
illuminate= dll.api("illuminate","int(ADDR Image, ADDR& ImageIlluminate, int MaskWidth, int MaskHeight, double Factor)");
T_emphasize= dll.api("T_emphasize","int(ADDR Image, ADDR& ImageEmphasize, struct MaskWidth, struct MaskHeight, struct Factor)");
emphasize= dll.api("emphasize","int(ADDR Image, ADDR& ImageEmphasize, int MaskWidth, int MaskHeight, double Factor)");
T_scale_image_max= dll.api("T_scale_image_max","int(ADDR Image, ADDR& ImageScaleMax)");
scale_image_max= dll.api("scale_image_max","int(ADDR Image, ADDR& ImageScaleMax)");
T_robinson_dir= dll.api("T_robinson_dir","int(ADDR Image, ADDR& ImageEdgeAmp, ADDR& ImageEdgeDir)");
robinson_dir= dll.api("robinson_dir","int(ADDR Image, ADDR& ImageEdgeAmp, ADDR& ImageEdgeDir)");
T_robinson_amp= dll.api("T_robinson_amp","int(ADDR Image, ADDR& ImageEdgeAmp)");
robinson_amp= dll.api("robinson_amp","int(ADDR Image, ADDR& ImageEdgeAmp)");
T_kirsch_dir= dll.api("T_kirsch_dir","int(ADDR Image, ADDR& ImageEdgeAmp, ADDR& ImageEdgeDir)");
kirsch_dir= dll.api("kirsch_dir","int(ADDR Image, ADDR& ImageEdgeAmp, ADDR& ImageEdgeDir)");
T_kirsch_amp= dll.api("T_kirsch_amp","int(ADDR Image, ADDR& ImageEdgeAmp)");
kirsch_amp= dll.api("kirsch_amp","int(ADDR Image, ADDR& ImageEdgeAmp)");
T_frei_dir= dll.api("T_frei_dir","int(ADDR Image, ADDR& ImageEdgeAmp, ADDR& ImageEdgeDir)");
frei_dir= dll.api("frei_dir","int(ADDR Image, ADDR& ImageEdgeAmp, ADDR& ImageEdgeDir)");
T_frei_amp= dll.api("T_frei_amp","int(ADDR Image, ADDR& ImageEdgeAmp)");
frei_amp= dll.api("frei_amp","int(ADDR Image, ADDR& ImageEdgeAmp)");
T_prewitt_dir= dll.api("T_prewitt_dir","int(ADDR Image, ADDR& ImageEdgeAmp, ADDR& ImageEdgeDir)");
prewitt_dir= dll.api("prewitt_dir","int(ADDR Image, ADDR& ImageEdgeAmp, ADDR& ImageEdgeDir)");
T_prewitt_amp= dll.api("T_prewitt_amp","int(ADDR Image, ADDR& ImageEdgeAmp)");
prewitt_amp= dll.api("prewitt_amp","int(ADDR Image, ADDR& ImageEdgeAmp)");
T_sobel_amp= dll.api("T_sobel_amp","int(ADDR Image, ADDR& EdgeAmplitude, struct FilterType, struct Size)");
sobel_amp= dll.api("sobel_amp","int(ADDR Image, ADDR& EdgeAmplitude, string FilterType, int Size)");
T_sobel_dir= dll.api("T_sobel_dir","int(ADDR Image, ADDR& EdgeAmplitude, ADDR& EdgeDirection, struct FilterType, struct Size)");
sobel_dir= dll.api("sobel_dir","int(ADDR Image, ADDR& EdgeAmplitude, ADDR& EdgeDirection, string FilterType, int Size)");
T_roberts= dll.api("T_roberts","int(ADDR Image, ADDR& ImageRoberts, struct FilterType)");
roberts= dll.api("roberts","int(ADDR Image, ADDR& ImageRoberts, string FilterType)");
T_laplace= dll.api("T_laplace","int(ADDR Image, ADDR& ImageLaplace, struct ResultType, struct MaskSize, struct FilterMask)");
laplace= dll.api("laplace","int(ADDR Image, ADDR& ImageLaplace, string ResultType, int MaskSize, string FilterMask)");
T_highpass_image= dll.api("T_highpass_image","int(ADDR Image, ADDR& Highpass, struct Width, struct Height)");
highpass_image= dll.api("highpass_image","int(ADDR Image, ADDR& Highpass, int Width, int Height)");
T_info_edges= dll.api("T_info_edges","int(struct Filter, struct Mode, struct Alpha, struct& Size, struct& Coeffs)");
T_edges_color_sub_pix= dll.api("T_edges_color_sub_pix","int(ADDR Image, ADDR& Edges, struct Filter, struct Alpha, struct Low, struct High)");
edges_color_sub_pix= dll.api("edges_color_sub_pix","int(ADDR Image, ADDR& Edges, string Filter, double Alpha, double Low, double High)");
T_edges_color= dll.api("T_edges_color","int(ADDR Image, ADDR& ImaAmp, ADDR& ImaDir, struct Filter, struct Alpha, struct NMS, struct Low, struct High)");
edges_color= dll.api("edges_color","int(ADDR Image, ADDR& ImaAmp, ADDR& ImaDir, string Filter, double Alpha, string NMS, int Low, int High)");
T_edges_sub_pix= dll.api("T_edges_sub_pix","int(ADDR Image, ADDR& Edges, struct Filter, struct Alpha, struct Low, struct High)");
edges_sub_pix= dll.api("edges_sub_pix","int(ADDR Image, ADDR& Edges, string Filter, double Alpha, int Low, int High)");
T_edges_image= dll.api("T_edges_image","int(ADDR Image, ADDR& ImaAmp, ADDR& ImaDir, struct Filter, struct Alpha, struct NMS, struct Low, struct High)");
edges_image= dll.api("edges_image","int(ADDR Image, ADDR& ImaAmp, ADDR& ImaDir, string Filter, double Alpha, string NMS, int Low, int High)");
T_derivate_gauss= dll.api("T_derivate_gauss","int(ADDR Image, ADDR& DerivGauss, struct Sigma, struct Component)");
derivate_gauss= dll.api("derivate_gauss","int(ADDR Image, ADDR& DerivGauss, double Sigma, string Component)");
T_laplace_of_gauss= dll.api("T_laplace_of_gauss","int(ADDR Image, ADDR& ImageLaplace, struct Sigma)");
laplace_of_gauss= dll.api("laplace_of_gauss","int(ADDR Image, ADDR& ImageLaplace, double Sigma)");
T_diff_of_gauss= dll.api("T_diff_of_gauss","int(ADDR Image, ADDR& DiffOfGauss, struct Sigma, struct SigFactor)");
diff_of_gauss= dll.api("diff_of_gauss","int(ADDR Image, ADDR& DiffOfGauss, double Sigma, double SigFactor)");
T_close_edges_length= dll.api("T_close_edges_length","int(ADDR Edges, ADDR Gradient, ADDR& ClosedEdges, struct MinAmplitude, struct MaxGapLength)");
close_edges_length= dll.api("close_edges_length","int(ADDR Edges, ADDR Gradient, ADDR& ClosedEdges, int MinAmplitude, int MaxGapLength)");
T_close_edges= dll.api("T_close_edges","int(ADDR Edges, ADDR EdgeImage, ADDR& RegionResult, struct MinAmplitude)");
close_edges= dll.api("close_edges","int(ADDR Edges, ADDR EdgeImage, ADDR& RegionResult, int MinAmplitude)");
T_detect_edge_segments= dll.api("T_detect_edge_segments","int(ADDR Image, struct SobelSize, struct MinAmplitude, struct MaxDistance, struct MinLength, struct& BeginRow, struct& BeginCol, struct& EndRow, struct& EndCol)");
T_clear_all_color_trans_luts= dll.api("T_clear_all_color_trans_luts","int(void)");
clear_all_color_trans_luts= dll.api("clear_all_color_trans_luts","int(void)");
T_clear_color_trans_lut= dll.api("T_clear_color_trans_lut","int(struct ColorTransLUTHandle)");
clear_color_trans_lut= dll.api("clear_color_trans_lut","int(int ColorTransLUTHandle)");
T_apply_color_trans_lut= dll.api("T_apply_color_trans_lut","int(ADDR Image1, ADDR Image2, ADDR Image3, ADDR& ImageResult1, ADDR& ImageResult2, ADDR& ImageResult3, struct ColorTransLUTHandle)");
apply_color_trans_lut= dll.api("apply_color_trans_lut","int(ADDR Image1, ADDR Image2, ADDR Image3, ADDR& ImageResult1, ADDR& ImageResult2, ADDR& ImageResult3, int ColorTransLUTHandle)");
T_create_color_trans_lut= dll.api("T_create_color_trans_lut","int(struct ColorSpace, struct TransDirection, struct NumBits, struct& ColorTransLUTHandle)");
create_color_trans_lut= dll.api("create_color_trans_lut","int(string ColorSpace, string TransDirection, int NumBits, int& ColorTransLUTHandle)");
T_cfa_to_rgb= dll.api("T_cfa_to_rgb","int(ADDR CFAImage, ADDR& RGBImage, struct CFAType, struct Interpolation)");
cfa_to_rgb= dll.api("cfa_to_rgb","int(ADDR CFAImage, ADDR& RGBImage, string CFAType, string Interpolation)");
T_rgb1_to_gray= dll.api("T_rgb1_to_gray","int(ADDR RGBImage, ADDR& GrayImage)");
rgb1_to_gray= dll.api("rgb1_to_gray","int(ADDR RGBImage, ADDR& GrayImage)");
T_rgb3_to_gray= dll.api("T_rgb3_to_gray","int(ADDR ImageRed, ADDR ImageGreen, ADDR ImageBlue, ADDR& ImageGray)");
rgb3_to_gray= dll.api("rgb3_to_gray","int(ADDR ImageRed, ADDR ImageGreen, ADDR ImageBlue, ADDR& ImageGray)");
T_trans_from_rgb= dll.api("T_trans_from_rgb","int(ADDR ImageRed, ADDR ImageGreen, ADDR ImageBlue, ADDR& ImageResult1, ADDR& ImageResult2, ADDR& ImageResult3, struct ColorSpace)");
trans_from_rgb= dll.api("trans_from_rgb","int(ADDR ImageRed, ADDR ImageGreen, ADDR ImageBlue, ADDR& ImageResult1, ADDR& ImageResult2, ADDR& ImageResult3, string ColorSpace)");
T_trans_to_rgb= dll.api("T_trans_to_rgb","int(ADDR ImageInput1, ADDR ImageInput2, ADDR ImageInput3, ADDR& ImageRed, ADDR& ImageGreen, ADDR& ImageBlue, struct ColorSpace)");
trans_to_rgb= dll.api("trans_to_rgb","int(ADDR ImageInput1, ADDR ImageInput2, ADDR ImageInput3, ADDR& ImageRed, ADDR& ImageGreen, ADDR& ImageBlue, string ColorSpace)");
T_bit_mask= dll.api("T_bit_mask","int(ADDR Image, ADDR& ImageMask, struct BitMask)");
bit_mask= dll.api("bit_mask","int(ADDR Image, ADDR& ImageMask, int BitMask)");
T_bit_slice= dll.api("T_bit_slice","int(ADDR Image, ADDR& ImageSlice, struct Bit)");
bit_slice= dll.api("bit_slice","int(ADDR Image, ADDR& ImageSlice, int Bit)");
T_bit_rshift= dll.api("T_bit_rshift","int(ADDR Image, ADDR& ImageRShift, struct Shift)");
bit_rshift= dll.api("bit_rshift","int(ADDR Image, ADDR& ImageRShift, int Shift)");
T_bit_lshift= dll.api("T_bit_lshift","int(ADDR Image, ADDR& ImageLShift, struct Shift)");
bit_lshift= dll.api("bit_lshift","int(ADDR Image, ADDR& ImageLShift, int Shift)");
T_bit_not= dll.api("T_bit_not","int(ADDR Image, ADDR& ImageNot)");
bit_not= dll.api("bit_not","int(ADDR Image, ADDR& ImageNot)");
T_bit_xor= dll.api("T_bit_xor","int(ADDR Image1, ADDR Image2, ADDR& ImageXor)");
bit_xor= dll.api("bit_xor","int(ADDR Image1, ADDR Image2, ADDR& ImageXor)");
T_bit_or= dll.api("T_bit_or","int(ADDR Image1, ADDR Image2, ADDR& ImageOr)");
bit_or= dll.api("bit_or","int(ADDR Image1, ADDR Image2, ADDR& ImageOr)");
T_bit_and= dll.api("T_bit_and","int(ADDR Image1, ADDR Image2, ADDR& ImageAnd)");
bit_and= dll.api("bit_and","int(ADDR Image1, ADDR Image2, ADDR& ImageAnd)");
T_gamma_image= dll.api("T_gamma_image","int(ADDR Image, ADDR& GammaImage, struct Gamma, struct Offset, struct Threshold, struct MaxGray, struct Encode)");
gamma_image= dll.api("gamma_image","int(ADDR Image, ADDR& GammaImage, double Gamma, double Offset, double Threshold, double MaxGray, string Encode)");
T_pow_image= dll.api("T_pow_image","int(ADDR Image, ADDR& PowImage, struct Exponent)");
pow_image= dll.api("pow_image","int(ADDR Image, ADDR& PowImage, double Exponent)");
T_exp_image= dll.api("T_exp_image","int(ADDR Image, ADDR& ExpImage, struct Base)");
exp_image= dll.api("exp_image","int(ADDR Image, ADDR& ExpImage, string Base)");
T_log_image= dll.api("T_log_image","int(ADDR Image, ADDR& LogImage, struct Base)");
log_image= dll.api("log_image","int(ADDR Image, ADDR& LogImage, string Base)");
T_atan2_image= dll.api("T_atan2_image","int(ADDR ImageY, ADDR ImageX, ADDR& ArctanImage)");
atan2_image= dll.api("atan2_image","int(ADDR ImageY, ADDR ImageX, ADDR& ArctanImage)");
T_atan_image= dll.api("T_atan_image","int(ADDR Image, ADDR& ArctanImage)");
atan_image= dll.api("atan_image","int(ADDR Image, ADDR& ArctanImage)");
T_acos_image= dll.api("T_acos_image","int(ADDR Image, ADDR& ArccosImage)");
acos_image= dll.api("acos_image","int(ADDR Image, ADDR& ArccosImage)");
T_asin_image= dll.api("T_asin_image","int(ADDR Image, ADDR& ArcsinImage)");
asin_image= dll.api("asin_image","int(ADDR Image, ADDR& ArcsinImage)");
T_tan_image= dll.api("T_tan_image","int(ADDR Image, ADDR& TanImage)");
tan_image= dll.api("tan_image","int(ADDR Image, ADDR& TanImage)");
T_cos_image= dll.api("T_cos_image","int(ADDR Image, ADDR& CosImage)");
cos_image= dll.api("cos_image","int(ADDR Image, ADDR& CosImage)");
T_sin_image= dll.api("T_sin_image","int(ADDR Image, ADDR& SinImage)");
sin_image= dll.api("sin_image","int(ADDR Image, ADDR& SinImage)");
T_abs_diff_image= dll.api("T_abs_diff_image","int(ADDR Image1, ADDR Image2, ADDR& ImageAbsDiff, struct Mult)");
abs_diff_image= dll.api("abs_diff_image","int(ADDR Image1, ADDR Image2, ADDR& ImageAbsDiff, double Mult)");
T_sqrt_image= dll.api("T_sqrt_image","int(ADDR Image, ADDR& SqrtImage)");
sqrt_image= dll.api("sqrt_image","int(ADDR Image, ADDR& SqrtImage)");
T_sub_image= dll.api("T_sub_image","int(ADDR ImageMinuend, ADDR ImageSubtrahend, ADDR& ImageSub, struct Mult, struct Add)");
sub_image= dll.api("sub_image","int(ADDR ImageMinuend, ADDR ImageSubtrahend, ADDR& ImageSub, double Mult, double Add)");
T_scale_image= dll.api("T_scale_image","int(ADDR Image, ADDR& ImageScaled, struct Mult, struct Add)");
scale_image= dll.api("scale_image","int(ADDR Image, ADDR& ImageScaled, double Mult, double Add)");
T_div_image= dll.api("T_div_image","int(ADDR Image1, ADDR Image2, ADDR& ImageResult, struct Mult, struct Add)");
div_image= dll.api("div_image","int(ADDR Image1, ADDR Image2, ADDR& ImageResult, double Mult, double Add)");
T_mult_image= dll.api("T_mult_image","int(ADDR Image1, ADDR Image2, ADDR& ImageResult, struct Mult, struct Add)");
mult_image= dll.api("mult_image","int(ADDR Image1, ADDR Image2, ADDR& ImageResult, double Mult, double Add)");
T_add_image= dll.api("T_add_image","int(ADDR Image1, ADDR Image2, ADDR& ImageResult, struct Mult, struct Add)");
add_image= dll.api("add_image","int(ADDR Image1, ADDR Image2, ADDR& ImageResult, double Mult, double Add)");
T_abs_image= dll.api("T_abs_image","int(ADDR Image, ADDR& ImageAbs)");
abs_image= dll.api("abs_image","int(ADDR Image, ADDR& ImageAbs)");
T_min_image= dll.api("T_min_image","int(ADDR Image1, ADDR Image2, ADDR& ImageMin)");
min_image= dll.api("min_image","int(ADDR Image1, ADDR Image2, ADDR& ImageMin)");
T_max_image= dll.api("T_max_image","int(ADDR Image1, ADDR Image2, ADDR& ImageMax)");
max_image= dll.api("max_image","int(ADDR Image1, ADDR Image2, ADDR& ImageMax)");
T_invert_image= dll.api("T_invert_image","int(ADDR Image, ADDR& ImageInvert)");
invert_image= dll.api("invert_image","int(ADDR Image, ADDR& ImageInvert)");
T_adjust_mosaic_images= dll.api("T_adjust_mosaic_images","int(ADDR Images, ADDR& CorrectedImages, struct From, struct To, struct ReferenceImage, struct HomMatrices2D, struct EstimationMethod, struct EstimateParameters, struct OECFModel)");
T_gen_cube_map_mosaic= dll.api("T_gen_cube_map_mosaic","int(ADDR Images, ADDR& Front, ADDR& Rear, ADDR& Left, ADDR& Right, ADDR& Top, ADDR& Bottom, struct CameraMatrices, struct RotationMatrices, struct CubeMapDimension, struct StackingOrder, struct Interpolation)");
T_gen_spherical_mosaic= dll.api("T_gen_spherical_mosaic","int(ADDR Images, ADDR& MosaicImage, struct CameraMatrices, struct RotationMatrices, struct LatMin, struct LatMax, struct LongMin, struct LongMax, struct LatLongStep, struct StackingOrder, struct Interpolation)");
T_gen_bundle_adjusted_mosaic= dll.api("T_gen_bundle_adjusted_mosaic","int(ADDR Images, ADDR& MosaicImage, struct HomMatrices2D, struct StackingOrder, struct TransformDomain, struct& TransMat2D)");
T_gen_projective_mosaic= dll.api("T_gen_projective_mosaic","int(ADDR Images, ADDR& MosaicImage, struct StartImage, struct MappingSource, struct MappingDest, struct HomMatrices2D, struct StackingOrder, struct TransformDomain, struct& MosaicMatrices2D)");
T_projective_trans_image_size= dll.api("T_projective_trans_image_size","int(ADDR Image, ADDR& TransImage, struct HomMat2D, struct Interpolation, struct Width, struct Height, struct TransformDomain)");
T_projective_trans_image= dll.api("T_projective_trans_image","int(ADDR Image, ADDR& TransImage, struct HomMat2D, struct Interpolation, struct AdaptImageSize, struct TransformDomain)");
T_affine_trans_image_size= dll.api("T_affine_trans_image_size","int(ADDR Image, ADDR& ImageAffineTrans, struct HomMat2D, struct Interpolation, struct Width, struct Height)");
T_affine_trans_image= dll.api("T_affine_trans_image","int(ADDR Image, ADDR& ImageAffineTrans, struct HomMat2D, struct Interpolation, struct AdaptImageSize)");
T_zoom_image_factor= dll.api("T_zoom_image_factor","int(ADDR Image, ADDR& ImageZoomed, struct ScaleWidth, struct ScaleHeight, struct Interpolation)");
zoom_image_factor= dll.api("zoom_image_factor","int(ADDR Image, ADDR& ImageZoomed, double ScaleWidth, double ScaleHeight, string Interpolation)");
T_zoom_image_size= dll.api("T_zoom_image_size","int(ADDR Image, ADDR& ImageZoom, struct Width, struct Height, struct Interpolation)");
zoom_image_size= dll.api("zoom_image_size","int(ADDR Image, ADDR& ImageZoom, int Width, int Height, string Interpolation)");
T_mirror_image= dll.api("T_mirror_image","int(ADDR Image, ADDR& ImageMirror, struct Mode)");
mirror_image= dll.api("mirror_image","int(ADDR Image, ADDR& ImageMirror, string Mode)");
T_rotate_image= dll.api("T_rotate_image","int(ADDR Image, ADDR& ImageRotate, struct Phi, struct Interpolation)");
rotate_image= dll.api("rotate_image","int(ADDR Image, ADDR& ImageRotate, double Phi, string Interpolation)");
T_polar_trans_image_inv= dll.api("T_polar_trans_image_inv","int(ADDR PolarImage, ADDR& XYTransImage, struct Row, struct Column, struct AngleStart, struct AngleEnd, struct RadiusStart, struct RadiusEnd, struct Width, struct Height, struct Interpolation)");
polar_trans_image_inv= dll.api("polar_trans_image_inv","int(ADDR PolarImage, ADDR& XYTransImage, double Row, double Column, double AngleStart, double AngleEnd, double RadiusStart, double RadiusEnd, int Width, int Height, string Interpolation)");
T_polar_trans_image_ext= dll.api("T_polar_trans_image_ext","int(ADDR Image, ADDR& PolarTransImage, struct Row, struct Column, struct AngleStart, struct AngleEnd, struct RadiusStart, struct RadiusEnd, struct Width, struct Height, struct Interpolation)");
polar_trans_image_ext= dll.api("polar_trans_image_ext","int(ADDR Image, ADDR& PolarTransImage, double Row, double Column, double AngleStart, double AngleEnd, double RadiusStart, double RadiusEnd, int Width, int Height, string Interpolation)");
T_polar_trans_image= dll.api("T_polar_trans_image","int(ADDR ImageXY, ADDR& ImagePolar, struct Row, struct Column, struct Width, struct Height)");
polar_trans_image= dll.api("polar_trans_image","int(ADDR ImageXY, ADDR& ImagePolar, int Row, int Column, int Width, int Height)");
T_vector_field_to_hom_mat2d= dll.api("T_vector_field_to_hom_mat2d","int(ADDR VectorField, struct& HomMat2D)");
T_deserialize_xld= dll.api("T_deserialize_xld","int(ADDR& XLD, struct SerializedItemHandle)");
deserialize_xld= dll.api("deserialize_xld","int(ADDR& XLD, int SerializedItemHandle)");
T_serialize_xld= dll.api("T_serialize_xld","int(ADDR XLD, struct& SerializedItemHandle)");
serialize_xld= dll.api("serialize_xld","int(ADDR XLD, int& SerializedItemHandle)");
T_read_polygon_xld_dxf= dll.api("T_read_polygon_xld_dxf","int(ADDR& Polygons, struct FileName, struct GenParamName, struct GenParamValue, struct& DxfStatus)");
read_polygon_xld_dxf= dll.api("read_polygon_xld_dxf","int(ADDR& Polygons, string FileName, string GenParamName, double GenParamValue, string& DxfStatus)");
T_write_polygon_xld_dxf= dll.api("T_write_polygon_xld_dxf","int(ADDR Polygons, struct FileName)");
write_polygon_xld_dxf= dll.api("write_polygon_xld_dxf","int(ADDR Polygons, string FileName)");
T_read_contour_xld_dxf= dll.api("T_read_contour_xld_dxf","int(ADDR& Contours, struct FileName, struct GenParamName, struct GenParamValue, struct& DxfStatus)");
read_contour_xld_dxf= dll.api("read_contour_xld_dxf","int(ADDR& Contours, string FileName, string GenParamName, double GenParamValue, string& DxfStatus)");
T_write_contour_xld_dxf= dll.api("T_write_contour_xld_dxf","int(ADDR Contours, struct FileName)");
write_contour_xld_dxf= dll.api("write_contour_xld_dxf","int(ADDR Contours, string FileName)");
T_copy_file= dll.api("T_copy_file","int(struct SourceFile, struct DestinationFile)");
copy_file= dll.api("copy_file","int(string SourceFile, string DestinationFile)");
T_set_current_dir= dll.api("T_set_current_dir","int(struct DirName)");
set_current_dir= dll.api("set_current_dir","int(string DirName)");
T_get_current_dir= dll.api("T_get_current_dir","int(struct& DirName)");
get_current_dir= dll.api("get_current_dir","int(string& DirName)");
T_remove_dir= dll.api("T_remove_dir","int(struct DirName)");
remove_dir= dll.api("remove_dir","int(string DirName)");
T_make_dir= dll.api("T_make_dir","int(struct DirName)");
make_dir= dll.api("make_dir","int(string DirName)");
T_list_files= dll.api("T_list_files","int(struct Directory, struct Options, struct& Files)");
T_delete_file= dll.api("T_delete_file","int(struct FileName)");
delete_file= dll.api("delete_file","int(string FileName)");
T_file_exists= dll.api("T_file_exists","int(struct FileName, struct& FileExists)");
file_exists= dll.api("file_exists","int(string FileName, int& FileExists)");
T_read_object= dll.api("T_read_object","int(ADDR& Object, struct FileName)");
read_object= dll.api("read_object","int(ADDR& Object, string FileName)");
T_write_object= dll.api("T_write_object","int(ADDR Object, struct FileName)");
write_object= dll.api("write_object","int(ADDR Object, string FileName)");
T_deserialize_object= dll.api("T_deserialize_object","int(ADDR& Object, struct SerializedItemHandle)");
deserialize_object= dll.api("deserialize_object","int(ADDR& Object, int SerializedItemHandle)");
T_serialize_object= dll.api("T_serialize_object","int(ADDR Object, struct& SerializedItemHandle)");
serialize_object= dll.api("serialize_object","int(ADDR Object, int& SerializedItemHandle)");
T_deserialize_image= dll.api("T_deserialize_image","int(ADDR& Image, struct SerializedItemHandle)");
deserialize_image= dll.api("deserialize_image","int(ADDR& Image, int SerializedItemHandle)");
T_serialize_image= dll.api("T_serialize_image","int(ADDR Image, struct& SerializedItemHandle)");
serialize_image= dll.api("serialize_image","int(ADDR Image, int& SerializedItemHandle)");
T_deserialize_region= dll.api("T_deserialize_region","int(ADDR& Region, struct SerializedItemHandle)");
deserialize_region= dll.api("deserialize_region","int(ADDR& Region, int SerializedItemHandle)");
T_serialize_region= dll.api("T_serialize_region","int(ADDR Region, struct& SerializedItemHandle)");
serialize_region= dll.api("serialize_region","int(ADDR Region, int& SerializedItemHandle)");
T_write_region= dll.api("T_write_region","int(ADDR Region, struct FileName)");
write_region= dll.api("write_region","int(ADDR Region, string FileName)");
T_write_image= dll.api("T_write_image","int(ADDR Image, struct Format, struct FillColor, struct FileName)");
write_image= dll.api("write_image","int(ADDR Image, string Format, int FillColor, string FileName)");
T_read_sequence= dll.api("T_read_sequence","int(ADDR& Image, struct HeaderSize, struct SourceWidth, struct SourceHeight, struct StartRow, struct StartColumn, struct DestWidth, struct DestHeight, struct PixelType, struct BitOrder, struct ByteOrder, struct Pad, struct Index, struct FileName)");
read_sequence= dll.api("read_sequence","int(ADDR& Image, int HeaderSize, int SourceWidth, int SourceHeight, int StartRow, int StartColumn, int DestWidth, int DestHeight, string PixelType, string BitOrder, string ByteOrder, string Pad, int Index, string FileName)");
T_read_region= dll.api("T_read_region","int(ADDR& Region, struct FileName)");
read_region= dll.api("read_region","int(ADDR& Region, string FileName)");
T_read_image= dll.api("T_read_image","int(ADDR& Image, struct FileName)");
read_image= dll.api("read_image","int(ADDR& Image, string FileName)");
T_open_file= dll.api("T_open_file","int(struct FileName, struct FileType, struct& FileHandle)");
open_file= dll.api("open_file","int(string FileName, string FileType, int& FileHandle)");
T_fwrite_string= dll.api("T_fwrite_string","int(struct FileHandle, struct String)");
fwrite_string= dll.api("fwrite_string","int(int FileHandle, string String)");
T_fread_line= dll.api("T_fread_line","int(struct FileHandle, struct& OutLine, struct& IsEOF)");
fread_line= dll.api("fread_line","int(int FileHandle, string& OutLine, int& IsEOF)");
T_fread_string= dll.api("T_fread_string","int(struct FileHandle, struct& OutString, struct& IsEOF)");
fread_string= dll.api("fread_string","int(int FileHandle, string& OutString, int& IsEOF)");
T_fread_char= dll.api("T_fread_char","int(struct FileHandle, struct& Char)");
fread_char= dll.api("fread_char","int(int FileHandle, string& Char)");
T_fnew_line= dll.api("T_fnew_line","int(struct FileHandle)");
fnew_line= dll.api("fnew_line","int(int FileHandle)");
T_close_file= dll.api("T_close_file","int(struct FileHandle)");
close_file= dll.api("close_file","int(int FileHandle)");
T_close_all_files= dll.api("T_close_all_files","int(void)");
close_all_files= dll.api("close_all_files","int(void)");
T_test_closed_xld= dll.api("T_test_closed_xld","int(ADDR XLD, struct& IsClosed)");
test_closed_xld= dll.api("test_closed_xld","int(ADDR XLD, int& IsClosed)");
T_get_grayval_contour_xld= dll.api("T_get_grayval_contour_xld","int(ADDR Image, ADDR Contour, struct Interpolation, struct& Grayval)");
get_grayval_contour_xld= dll.api("get_grayval_contour_xld","int(ADDR Image, ADDR Contour, string Interpolation, double& Grayval)");
T_moments_any_points_xld= dll.api("T_moments_any_points_xld","int(ADDR XLD, struct Mode, struct Area, struct CenterRow, struct CenterCol, struct P, struct Q, struct& M)");
moments_any_points_xld= dll.api("moments_any_points_xld","int(ADDR XLD, string Mode, double Area, double CenterRow, double CenterCol, int P, int Q, double& M)");
T_eccentricity_points_xld= dll.api("T_eccentricity_points_xld","int(ADDR XLD, struct& Anisometry)");
eccentricity_points_xld= dll.api("eccentricity_points_xld","int(ADDR XLD, double& Anisometry)");
T_elliptic_axis_points_xld= dll.api("T_elliptic_axis_points_xld","int(ADDR XLD, struct& Ra, struct& Rb, struct& Phi)");
elliptic_axis_points_xld= dll.api("elliptic_axis_points_xld","int(ADDR XLD, double& Ra, double& Rb, double& Phi)");
T_orientation_points_xld= dll.api("T_orientation_points_xld","int(ADDR XLD, struct& Phi)");
orientation_points_xld= dll.api("orientation_points_xld","int(ADDR XLD, double& Phi)");
T_moments_points_xld= dll.api("T_moments_points_xld","int(ADDR XLD, struct& M11, struct& M20, struct& M02)");
moments_points_xld= dll.api("moments_points_xld","int(ADDR XLD, double& M11, double& M20, double& M02)");
T_area_center_points_xld= dll.api("T_area_center_points_xld","int(ADDR XLD, struct& Area, struct& Row, struct& Column)");
area_center_points_xld= dll.api("area_center_points_xld","int(ADDR XLD, double& Area, double& Row, double& Column)");
T_test_self_intersection_xld= dll.api("T_test_self_intersection_xld","int(ADDR XLD, struct CloseXLD, struct& DoesIntersect)");
test_self_intersection_xld= dll.api("test_self_intersection_xld","int(ADDR XLD, string CloseXLD, int& DoesIntersect)");
T_select_xld_point= dll.api("T_select_xld_point","int(ADDR XLDs, ADDR& DestXLDs, struct Row, struct Column)");
select_xld_point= dll.api("select_xld_point","int(ADDR XLDs, ADDR& DestXLDs, double Row, double Column)");
T_test_xld_point= dll.api("T_test_xld_point","int(ADDR XLD, struct Row, struct Column, struct& IsInside)");
test_xld_point= dll.api("test_xld_point","int(ADDR XLD, double Row, double Column, int& IsInside)");
T_select_shape_xld= dll.api("T_select_shape_xld","int(ADDR XLD, ADDR& SelectedXLD, struct Features, struct Operation, struct Min, struct Max)");
select_shape_xld= dll.api("select_shape_xld","int(ADDR XLD, ADDR& SelectedXLD, string Features, string Operation, double Min, double Max)");
T_orientation_xld= dll.api("T_orientation_xld","int(ADDR XLD, struct& Phi)");
orientation_xld= dll.api("orientation_xld","int(ADDR XLD, double& Phi)");
T_eccentricity_xld= dll.api("T_eccentricity_xld","int(ADDR XLD, struct& Anisometry, struct& Bulkiness, struct& StructureFactor)");
eccentricity_xld= dll.api("eccentricity_xld","int(ADDR XLD, double& Anisometry, double& Bulkiness, double& StructureFactor)");
T_compactness_xld= dll.api("T_compactness_xld","int(ADDR XLD, struct& Compactness)");
compactness_xld= dll.api("compactness_xld","int(ADDR XLD, double& Compactness)");
T_diameter_xld= dll.api("T_diameter_xld","int(ADDR XLD, struct& Row1, struct& Column1, struct& Row2, struct& Column2, struct& Diameter)");
diameter_xld= dll.api("diameter_xld","int(ADDR XLD, double& Row1, double& Column1, double& Row2, double& Column2, double& Diameter)");
T_convexity_xld= dll.api("T_convexity_xld","int(ADDR XLD, struct& Convexity)");
convexity_xld= dll.api("convexity_xld","int(ADDR XLD, double& Convexity)");
T_circularity_xld= dll.api("T_circularity_xld","int(ADDR XLD, struct& Circularity)");
circularity_xld= dll.api("circularity_xld","int(ADDR XLD, double& Circularity)");
T_elliptic_axis_xld= dll.api("T_elliptic_axis_xld","int(ADDR XLD, struct& Ra, struct& Rb, struct& Phi)");
elliptic_axis_xld= dll.api("elliptic_axis_xld","int(ADDR XLD, double& Ra, double& Rb, double& Phi)");
T_smallest_rectangle2_xld= dll.api("T_smallest_rectangle2_xld","int(ADDR XLD, struct& Row, struct& Column, struct& Phi, struct& Length1, struct& Length2)");
smallest_rectangle2_xld= dll.api("smallest_rectangle2_xld","int(ADDR XLD, double& Row, double& Column, double& Phi, double& Length1, double& Length2)");
T_smallest_rectangle1_xld= dll.api("T_smallest_rectangle1_xld","int(ADDR XLD, struct& Row1, struct& Column1, struct& Row2, struct& Column2)");
smallest_rectangle1_xld= dll.api("smallest_rectangle1_xld","int(ADDR XLD, double& Row1, double& Column1, double& Row2, double& Column2)");
T_smallest_circle_xld= dll.api("T_smallest_circle_xld","int(ADDR XLD, struct& Row, struct& Column, struct& Radius)");
smallest_circle_xld= dll.api("smallest_circle_xld","int(ADDR XLD, double& Row, double& Column, double& Radius)");
T_shape_trans_xld= dll.api("T_shape_trans_xld","int(ADDR XLD, ADDR& XLDTrans, struct Type)");
shape_trans_xld= dll.api("shape_trans_xld","int(ADDR XLD, ADDR& XLDTrans, string Type)");
T_length_xld= dll.api("T_length_xld","int(ADDR XLD, struct& Length)");
length_xld= dll.api("length_xld","int(ADDR XLD, double& Length)");
T_moments_any_xld= dll.api("T_moments_any_xld","int(ADDR XLD, struct Mode, struct PointOrder, struct Area, struct CenterRow, struct CenterCol, struct P, struct Q, struct& M)");
moments_any_xld= dll.api("moments_any_xld","int(ADDR XLD, string Mode, string PointOrder, double Area, double CenterRow, double CenterCol, int P, int Q, double& M)");
T_moments_xld= dll.api("T_moments_xld","int(ADDR XLD, struct& M11, struct& M20, struct& M02)");
moments_xld= dll.api("moments_xld","int(ADDR XLD, double& M11, double& M20, double& M02)");
T_area_center_xld= dll.api("T_area_center_xld","int(ADDR XLD, struct& Area, struct& Row, struct& Column, struct& PointOrder)");
area_center_xld= dll.api("area_center_xld","int(ADDR XLD, double& Area, double& Row, double& Column, string& PointOrder)");
T_moments_region_central_invar= dll.api("T_moments_region_central_invar","int(ADDR Regions, struct& PSI1, struct& PSI2, struct& PSI3, struct& PSI4)");
moments_region_central_invar= dll.api("moments_region_central_invar","int(ADDR Regions, double& PSI1, double& PSI2, double& PSI3, double& PSI4)");
T_moments_region_central= dll.api("T_moments_region_central","int(ADDR Regions, struct& I1, struct& I2, struct& I3, struct& I4)");
moments_region_central= dll.api("moments_region_central","int(ADDR Regions, double& I1, double& I2, double& I3, double& I4)");
T_moments_region_3rd_invar= dll.api("T_moments_region_3rd_invar","int(ADDR Regions, struct& M21, struct& M12, struct& M03, struct& M30)");
moments_region_3rd_invar= dll.api("moments_region_3rd_invar","int(ADDR Regions, double& M21, double& M12, double& M03, double& M30)");
T_moments_region_3rd= dll.api("T_moments_region_3rd","int(ADDR Regions, struct& M21, struct& M12, struct& M03, struct& M30)");
moments_region_3rd= dll.api("moments_region_3rd","int(ADDR Regions, double& M21, double& M12, double& M03, double& M30)");
T_smallest_rectangle2= dll.api("T_smallest_rectangle2","int(ADDR Regions, struct& Row, struct& Column, struct& Phi, struct& Length1, struct& Length2)");
smallest_rectangle2= dll.api("smallest_rectangle2","int(ADDR Regions, double& Row, double& Column, double& Phi, double& Length1, double& Length2)");
T_smallest_rectangle1= dll.api("T_smallest_rectangle1","int(ADDR Regions, struct& Row1, struct& Column1, struct& Row2, struct& Column2)");
smallest_rectangle1= dll.api("smallest_rectangle1","int(ADDR Regions, int& Row1, int& Column1, int& Row2, int& Column2)");
T_smallest_circle= dll.api("T_smallest_circle","int(ADDR Regions, struct& Row, struct& Column, struct& Radius)");
smallest_circle= dll.api("smallest_circle","int(ADDR Regions, double& Row, double& Column, double& Radius)");
T_select_shape_proto= dll.api("T_select_shape_proto","int(ADDR Regions, ADDR Pattern, ADDR& SelectedRegions, struct Feature, struct Min, struct Max)");
select_shape_proto= dll.api("select_shape_proto","int(ADDR Regions, ADDR Pattern, ADDR& SelectedRegions, string Feature, double Min, double Max)");
T_region_features= dll.api("T_region_features","int(ADDR Regions, struct Features, struct& Value)");
region_features= dll.api("region_features","int(ADDR Regions, string Features, double& Value)");
T_select_shape= dll.api("T_select_shape","int(ADDR Regions, ADDR& SelectedRegions, struct Features, struct Operation, struct Min, struct Max)");
select_shape= dll.api("select_shape","int(ADDR Regions, ADDR& SelectedRegions, string Features, string Operation, double Min, double Max)");
T_runlength_features= dll.api("T_runlength_features","int(ADDR Regions, struct& NumRuns, struct& KFactor, struct& LFactor, struct& MeanLength, struct& Bytes)");
runlength_features= dll.api("runlength_features","int(ADDR Regions, int& NumRuns, double& KFactor, double& LFactor, double& MeanLength, int& Bytes)");
T_find_neighbors= dll.api("T_find_neighbors","int(ADDR Regions1, ADDR Regions2, struct MaxDistance, struct& RegionIndex1, struct& RegionIndex2)");
T_moments_region_2nd_rel_invar= dll.api("T_moments_region_2nd_rel_invar","int(ADDR Regions, struct& PHI1, struct& PHI2)");
moments_region_2nd_rel_invar= dll.api("moments_region_2nd_rel_invar","int(ADDR Regions, double& PHI1, double& PHI2)");
T_moments_region_2nd_invar= dll.api("T_moments_region_2nd_invar","int(ADDR Regions, struct& M11, struct& M20, struct& M02)");
moments_region_2nd_invar= dll.api("moments_region_2nd_invar","int(ADDR Regions, double& M11, double& M20, double& M02)");
T_moments_region_2nd= dll.api("T_moments_region_2nd","int(ADDR Regions, struct& M11, struct& M20, struct& M02, struct& Ia, struct& Ib)");
moments_region_2nd= dll.api("moments_region_2nd","int(ADDR Regions, double& M11, double& M20, double& M02, double& Ia, double& Ib)");
T_distance_rr_min= dll.api("T_distance_rr_min","int(ADDR Regions1, ADDR Regions2, struct& MinDistance, struct& Row1, struct& Column1, struct& Row2, struct& Column2)");
distance_rr_min= dll.api("distance_rr_min","int(ADDR Regions1, ADDR Regions2, double& MinDistance, int& Row1, int& Column1, int& Row2, int& Column2)");
T_distance_rr_min_dil= dll.api("T_distance_rr_min_dil","int(ADDR Regions1, ADDR Regions2, struct& MinDistance)");
distance_rr_min_dil= dll.api("distance_rr_min_dil","int(ADDR Regions1, ADDR Regions2, int& MinDistance)");
T_diameter_region= dll.api("T_diameter_region","int(ADDR Regions, struct& Row1, struct& Column1, struct& Row2, struct& Column2, struct& Diameter)");
diameter_region= dll.api("diameter_region","int(ADDR Regions, int& Row1, int& Column1, int& Row2, int& Column2, double& Diameter)");
T_test_region_point= dll.api("T_test_region_point","int(ADDR Regions, struct Row, struct Column, struct& IsInside)");
test_region_point= dll.api("test_region_point","int(ADDR Regions, int Row, int Column, int& IsInside)");
T_get_region_index= dll.api("T_get_region_index","int(ADDR Regions, struct Row, struct Column, struct& Index)");
get_region_index= dll.api("get_region_index","int(ADDR Regions, int Row, int Column, int& Index)");
T_select_region_point= dll.api("T_select_region_point","int(ADDR Regions, ADDR& DestRegions, struct Row, struct Column)");
select_region_point= dll.api("select_region_point","int(ADDR Regions, ADDR& DestRegions, int Row, int Column)");
T_select_shape_std= dll.api("T_select_shape_std","int(ADDR Regions, ADDR& SelectedRegions, struct Shape, struct Percent)");
select_shape_std= dll.api("select_shape_std","int(ADDR Regions, ADDR& SelectedRegions, string Shape, double Percent)");
T_hamming_distance_norm= dll.api("T_hamming_distance_norm","int(ADDR Regions1, ADDR Regions2, struct Norm, struct& Distance, struct& Similarity)");
hamming_distance_norm= dll.api("hamming_distance_norm","int(ADDR Regions1, ADDR Regions2, string Norm, int& Distance, double& Similarity)");
T_hamming_distance= dll.api("T_hamming_distance","int(ADDR Regions1, ADDR Regions2, struct& Distance, struct& Similarity)");
hamming_distance= dll.api("hamming_distance","int(ADDR Regions1, ADDR Regions2, int& Distance, double& Similarity)");
T_eccentricity= dll.api("T_eccentricity","int(ADDR Regions, struct& Anisometry, struct& Bulkiness, struct& StructureFactor)");
eccentricity= dll.api("eccentricity","int(ADDR Regions, double& Anisometry, double& Bulkiness, double& StructureFactor)");
T_euler_number= dll.api("T_euler_number","int(ADDR Regions, struct& EulerNumber)");
euler_number= dll.api("euler_number","int(ADDR Regions, int& EulerNumber)");
T_orientation_region= dll.api("T_orientation_region","int(ADDR Regions, struct& Phi)");
orientation_region= dll.api("orientation_region","int(ADDR Regions, double& Phi)");
T_elliptic_axis= dll.api("T_elliptic_axis","int(ADDR Regions, struct& Ra, struct& Rb, struct& Phi)");
elliptic_axis= dll.api("elliptic_axis","int(ADDR Regions, double& Ra, double& Rb, double& Phi)");
T_select_region_spatial= dll.api("T_select_region_spatial","int(ADDR Regions1, ADDR Regions2, struct Direction, struct& RegionIndex1, struct& RegionIndex2)");
T_spatial_relation= dll.api("T_spatial_relation","int(ADDR Regions1, ADDR Regions2, struct Percent, struct& RegionIndex1, struct& RegionIndex2, struct& Relation1, struct& Relation2)");
T_convexity= dll.api("T_convexity","int(ADDR Regions, struct& Convexity)");
convexity= dll.api("convexity","int(ADDR Regions, double& Convexity)");
T_contlength= dll.api("T_contlength","int(ADDR Regions, struct& ContLength)");
contlength= dll.api("contlength","int(ADDR Regions, double& ContLength)");
T_connect_and_holes= dll.api("T_connect_and_holes","int(ADDR Regions, struct& NumConnected, struct& NumHoles)");
connect_and_holes= dll.api("connect_and_holes","int(ADDR Regions, int& NumConnected, int& NumHoles)");
T_rectangularity= dll.api("T_rectangularity","int(ADDR Regions, struct& Rectangularity)");
rectangularity= dll.api("rectangularity","int(ADDR Regions, double& Rectangularity)");
T_compactness= dll.api("T_compactness","int(ADDR Regions, struct& Compactness)");
compactness= dll.api("compactness","int(ADDR Regions, double& Compactness)");
T_circularity= dll.api("T_circularity","int(ADDR Regions, struct& Circularity)");
circularity= dll.api("circularity","int(ADDR Regions, double& Circularity)");
T_area_holes= dll.api("T_area_holes","int(ADDR Regions, struct& Area)");
area_holes= dll.api("area_holes","int(ADDR Regions, int& Area)");
T_area_center= dll.api("T_area_center","int(ADDR Regions, struct& Area, struct& Row, struct& Column)");
area_center= dll.api("area_center","int(ADDR Regions, int& Area, double& Row, double& Column)");
T_runlength_distribution= dll.api("T_runlength_distribution","int(ADDR Region, struct& Foreground, struct& Background)");
T_roundness= dll.api("T_roundness","int(ADDR Regions, struct& Distance, struct& Sigma, struct& Roundness, struct& Sides)");
roundness= dll.api("roundness","int(ADDR Regions, double& Distance, double& Sigma, double& Roundness, double& Sides)");
T_inner_rectangle1= dll.api("T_inner_rectangle1","int(ADDR Regions, struct& Row1, struct& Column1, struct& Row2, struct& Column2)");
inner_rectangle1= dll.api("inner_rectangle1","int(ADDR Regions, int& Row1, int& Column1, int& Row2, int& Column2)");
T_inner_circle= dll.api("T_inner_circle","int(ADDR Regions, struct& Row, struct& Column, struct& Radius)");
inner_circle= dll.api("inner_circle","int(ADDR Regions, struct Row, struct Column, struct Radius)");
T_select_lines_longest= dll.api("T_select_lines_longest","int(struct RowBeginIn, struct ColBeginIn, struct RowEndIn, struct ColEndIn, struct Num, struct& RowBeginOut, struct& ColBeginOut, struct& RowEndOut, struct& ColEndOut)");
T_partition_lines= dll.api("T_partition_lines","int(struct RowBeginIn, struct ColBeginIn, struct RowEndIn, struct ColEndIn, struct Feature, struct Operation, struct Min, struct Max, struct& RowBeginOut, struct& ColBeginOut, struct& RowEndOut, struct& ColEndOut, struct& FailRowBOut, struct& FailColBOut, struct& FailRowEOut, struct& FailColEOut)");
T_select_lines= dll.api("T_select_lines","int(struct RowBeginIn, struct ColBeginIn, struct RowEndIn, struct ColEndIn, struct Feature, struct Operation, struct Min, struct Max, struct& RowBeginOut, struct& ColBeginOut, struct& RowEndOut, struct& ColEndOut)");
T_line_position= dll.api("T_line_position","int(struct RowBegin, struct ColBegin, struct RowEnd, struct ColEnd, struct& RowCenter, struct& ColCenter, struct& Length, struct& Phi)");
line_position= dll.api("line_position","int(int RowBegin, int ColBegin, int RowEnd, int ColEnd, double& RowCenter, double& ColCenter, double& Length, double& Phi)");
T_line_orientation= dll.api("T_line_orientation","int(struct RowBegin, struct ColBegin, struct RowEnd, struct ColEnd, struct& Phi)");
line_orientation= dll.api("line_orientation","int(double RowBegin, double ColBegin, double RowEnd, double ColEnd, double& Phi)");
T_approx_chain_simple= dll.api("T_approx_chain_simple","int(struct Row, struct Column, struct& ArcCenterRow, struct& ArcCenterCol, struct& ArcAngle, struct& ArcBeginRow, struct& ArcBeginCol, struct& LineBeginRow, struct& LineBeginCol, struct& LineEndRow, struct& LineEndCol, struct& Order)");
T_approx_chain= dll.api("T_approx_chain","int(struct Row, struct Column, struct MinWidthCoord, struct MaxWidthCoord, struct ThreshStart, struct ThreshEnd, struct ThreshStep, struct MinWidthSmooth, struct MaxWidthSmooth, struct MinWidthCurve, struct MaxWidthCurve, struct Weight1, struct Weight2, struct Weight3, struct& ArcCenterRow, struct& ArcCenterCol, struct& ArcAngle, struct& ArcBeginRow, struct& ArcBeginCol, struct& LineBeginRow, struct& LineBeginCol, struct& LineEndRow, struct& LineEndCol, struct& Order)");
T_fit_surface_first_order= dll.api("T_fit_surface_first_order","int(ADDR Regions, ADDR Image, struct Algorithm, struct Iterations, struct ClippingFactor, struct& Alpha, struct& Beta, struct& Gamma)");
fit_surface_first_order= dll.api("fit_surface_first_order","int(ADDR Regions, ADDR Image, string Algorithm, int Iterations, double ClippingFactor, double& Alpha, double& Beta, double& Gamma)");
T_fit_surface_second_order= dll.api("T_fit_surface_second_order","int(ADDR Regions, ADDR Image, struct Algorithm, struct Iterations, struct ClippingFactor, struct& Alpha, struct& Beta, struct& Gamma, struct& Delta, struct& Epsilon, struct& Zeta)");
fit_surface_second_order= dll.api("fit_surface_second_order","int(ADDR Regions, ADDR Image, string Algorithm, int Iterations, double ClippingFactor, double& Alpha, double& Beta, double& Gamma, double& Delta, double& Epsilon, double& Zeta)");
T_gen_image_surface_second_order= dll.api("T_gen_image_surface_second_order","int(ADDR& ImageSurface, struct Type, struct Alpha, struct Beta, struct Gamma, struct Delta, struct Epsilon, struct Zeta, struct Row, struct Column, struct Width, struct Height)");
gen_image_surface_second_order= dll.api("gen_image_surface_second_order","int(ADDR& ImageSurface, string Type, double Alpha, double Beta, double Gamma, double Delta, double Epsilon, double Zeta, double Row, double Column, int Width, int Height)");
T_gen_image_surface_first_order= dll.api("T_gen_image_surface_first_order","int(ADDR& ImageSurface, struct Type, struct Alpha, struct Beta, struct Gamma, struct Row, struct Column, struct Width, struct Height)");
gen_image_surface_first_order= dll.api("gen_image_surface_first_order","int(ADDR& ImageSurface, string Type, double Alpha, double Beta, double Gamma, double Row, double Column, int Width, int Height)");
T_shape_histo_point= dll.api("T_shape_histo_point","int(ADDR Region, ADDR Image, struct Feature, struct Row, struct Column, struct& AbsoluteHisto, struct& RelativeHisto)");
T_shape_histo_all= dll.api("T_shape_histo_all","int(ADDR Region, ADDR Image, struct Feature, struct& AbsoluteHisto, struct& RelativeHisto)");
T_gray_features= dll.api("T_gray_features","int(ADDR Regions, ADDR Image, struct Features, struct& Value)");
gray_features= dll.api("gray_features","int(ADDR Regions, ADDR Image, string Features, double& Value)");
T_select_gray= dll.api("T_select_gray","int(ADDR Regions, ADDR Image, ADDR& SelectedRegions, struct Features, struct Operation, struct Min, struct Max)");
select_gray= dll.api("select_gray","int(ADDR Regions, ADDR Image, ADDR& SelectedRegions, string Features, string Operation, double Min, double Max)");
T_min_max_gray= dll.api("T_min_max_gray","int(ADDR Regions, ADDR Image, struct Percent, struct& Min, struct& Max, struct& Range)");
min_max_gray= dll.api("min_max_gray","int(ADDR Regions, ADDR Image, double Percent, double& Min, double& Max, double& Range)");
T_intensity= dll.api("T_intensity","int(ADDR Regions, ADDR Image, struct& Mean, struct& Deviation)");
intensity= dll.api("intensity","int(ADDR Regions, ADDR Image, double& Mean, double& Deviation)");
T_gray_histo_range= dll.api("T_gray_histo_range","int(ADDR Regions, ADDR Image, struct Min, struct Max, struct NumBins, struct& Histo, struct& BinSize)");
gray_histo_range= dll.api("gray_histo_range","int(ADDR Regions, ADDR Image, double Min, double Max, int NumBins, int& Histo, double& BinSize)");
T_histo_2dim= dll.api("T_histo_2dim","int(ADDR Regions, ADDR ImageCol, ADDR ImageRow, ADDR& Histo2Dim)");
histo_2dim= dll.api("histo_2dim","int(ADDR Regions, ADDR ImageCol, ADDR ImageRow, ADDR& Histo2Dim)");
T_gray_histo_abs= dll.api("T_gray_histo_abs","int(ADDR Regions, ADDR Image, struct Quantization, struct& AbsoluteHisto)");
T_gray_histo= dll.api("T_gray_histo","int(ADDR Regions, ADDR Image, struct& AbsoluteHisto, struct& RelativeHisto)");
T_entropy_gray= dll.api("T_entropy_gray","int(ADDR Regions, ADDR Image, struct& Entropy, struct& Anisotropy)");
entropy_gray= dll.api("entropy_gray","int(ADDR Regions, ADDR Image, double& Entropy, double& Anisotropy)");
T_cooc_feature_matrix= dll.api("T_cooc_feature_matrix","int(ADDR CoocMatrix, struct& Energy, struct& Correlation, struct& Homogeneity, struct& Contrast)");
cooc_feature_matrix= dll.api("cooc_feature_matrix","int(ADDR CoocMatrix, double& Energy, double& Correlation, double& Homogeneity, double& Contrast)");
T_cooc_feature_image= dll.api("T_cooc_feature_image","int(ADDR Regions, ADDR Image, struct LdGray, struct Direction, struct& Energy, struct& Correlation, struct& Homogeneity, struct& Contrast)");
cooc_feature_image= dll.api("cooc_feature_image","int(ADDR Regions, ADDR Image, int LdGray, int Direction, double& Energy, double& Correlation, double& Homogeneity, double& Contrast)");
T_gen_cooc_matrix= dll.api("T_gen_cooc_matrix","int(ADDR Regions, ADDR Image, ADDR& Matrix, struct LdGray, struct Direction)");
gen_cooc_matrix= dll.api("gen_cooc_matrix","int(ADDR Regions, ADDR Image, ADDR& Matrix, int LdGray, int Direction)");
T_moments_gray_plane= dll.api("T_moments_gray_plane","int(ADDR Regions, ADDR Image, struct& MRow, struct& MCol, struct& Alpha, struct& Beta, struct& Mean)");
moments_gray_plane= dll.api("moments_gray_plane","int(ADDR Regions, ADDR Image, double& MRow, double& MCol, double& Alpha, double& Beta, double& Mean)");
T_plane_deviation= dll.api("T_plane_deviation","int(ADDR Regions, ADDR Image, struct& Deviation)");
plane_deviation= dll.api("plane_deviation","int(ADDR Regions, ADDR Image, double& Deviation)");
T_elliptic_axis_gray= dll.api("T_elliptic_axis_gray","int(ADDR Regions, ADDR Image, struct& Ra, struct& Rb, struct& Phi)");
elliptic_axis_gray= dll.api("elliptic_axis_gray","int(ADDR Regions, ADDR Image, double& Ra, double& Rb, double& Phi)");
T_area_center_gray= dll.api("T_area_center_gray","int(ADDR Regions, ADDR Image, struct& Area, struct& Row, struct& Column)");
area_center_gray= dll.api("area_center_gray","int(ADDR Regions, ADDR Image, double& Area, double& Row, double& Column)");
T_gray_projections= dll.api("T_gray_projections","int(ADDR Region, ADDR Image, struct Mode, struct& HorProjection, struct& VertProjection)");
T_get_data_code_2d_objects= dll.api("T_get_data_code_2d_objects","int(ADDR& DataCodeObjects, struct DataCodeHandle, struct CandidateHandle, struct ObjectName)");
get_data_code_2d_objects= dll.api("get_data_code_2d_objects","int(ADDR& DataCodeObjects, int DataCodeHandle, int CandidateHandle, string ObjectName)");
T_get_data_code_2d_results= dll.api("T_get_data_code_2d_results","int(struct DataCodeHandle, struct CandidateHandle, struct ResultNames, struct& ResultValues)");
get_data_code_2d_results= dll.api("get_data_code_2d_results","int(int DataCodeHandle, string CandidateHandle, string ResultNames, string& ResultValues)");
T_find_data_code_2d= dll.api("T_find_data_code_2d","int(ADDR Image, ADDR& SymbolXLDs, struct DataCodeHandle, struct GenParamName, struct GenParamValue, struct& ResultHandles, struct& DecodedDataStrings)");
find_data_code_2d= dll.api("find_data_code_2d","int(ADDR Image, ADDR& SymbolXLDs, int DataCodeHandle, string GenParamName, int GenParamValue, int& ResultHandles, string& DecodedDataStrings)");
T_set_data_code_2d_param= dll.api("T_set_data_code_2d_param","int(struct DataCodeHandle, struct GenParamName, struct GenParamValue)");
set_data_code_2d_param= dll.api("set_data_code_2d_param","int(int DataCodeHandle, string GenParamName, string GenParamValue)");
T_get_data_code_2d_param= dll.api("T_get_data_code_2d_param","int(struct DataCodeHandle, struct GenParamName, struct& GenParamValue)");
get_data_code_2d_param= dll.api("get_data_code_2d_param","int(int DataCodeHandle, string GenParamName, string& GenParamValue)");
T_query_data_code_2d_params= dll.api("T_query_data_code_2d_params","int(struct DataCodeHandle, struct QueryName, struct& GenParamName)");
T_deserialize_data_code_2d_model= dll.api("T_deserialize_data_code_2d_model","int(struct SerializedItemHandle, struct& DataCodeHandle)");
deserialize_data_code_2d_model= dll.api("deserialize_data_code_2d_model","int(int SerializedItemHandle, int& DataCodeHandle)");
T_serialize_data_code_2d_model= dll.api("T_serialize_data_code_2d_model","int(struct DataCodeHandle, struct& SerializedItemHandle)");
serialize_data_code_2d_model= dll.api("serialize_data_code_2d_model","int(int DataCodeHandle, int& SerializedItemHandle)");
T_read_data_code_2d_model= dll.api("T_read_data_code_2d_model","int(struct FileName, struct& DataCodeHandle)");
read_data_code_2d_model= dll.api("read_data_code_2d_model","int(string FileName, int& DataCodeHandle)");
T_write_data_code_2d_model= dll.api("T_write_data_code_2d_model","int(struct DataCodeHandle, struct FileName)");
write_data_code_2d_model= dll.api("write_data_code_2d_model","int(int DataCodeHandle, string FileName)");
T_clear_all_data_code_2d_models= dll.api("T_clear_all_data_code_2d_models","int(void)");
clear_all_data_code_2d_models= dll.api("clear_all_data_code_2d_models","int(void)");
T_clear_data_code_2d_model= dll.api("T_clear_data_code_2d_model","int(struct DataCodeHandle)");
clear_data_code_2d_model= dll.api("clear_data_code_2d_model","int(int DataCodeHandle)");
T_create_data_code_2d_model= dll.api("T_create_data_code_2d_model","int(struct SymbolType, struct GenParamName, struct GenParamValue, struct& DataCodeHandle)");
create_data_code_2d_model= dll.api("create_data_code_2d_model","int(string SymbolType, string GenParamName, string GenParamValue, int& DataCodeHandle)");
T_deserialize_class_train_data= dll.api("T_deserialize_class_train_data","int(struct SerializedItemHandle, struct& ClassTrainDataHandle)");
deserialize_class_train_data= dll.api("deserialize_class_train_data","int(int SerializedItemHandle, int& ClassTrainDataHandle)");
T_serialize_class_train_data= dll.api("T_serialize_class_train_data","int(struct ClassTrainDataHandle, struct& SerializedItemHandle)");
serialize_class_train_data= dll.api("serialize_class_train_data","int(int ClassTrainDataHandle, int& SerializedItemHandle)");
T_read_class_train_data= dll.api("T_read_class_train_data","int(struct FileName, struct& ClassTrainDataHandle)");
read_class_train_data= dll.api("read_class_train_data","int(string FileName, int& ClassTrainDataHandle)");
T_write_class_train_data= dll.api("T_write_class_train_data","int(struct ClassTrainDataHandle, struct FileName)");
write_class_train_data= dll.api("write_class_train_data","int(int ClassTrainDataHandle, string FileName)");
T_select_sub_feature_class_train_data= dll.api("T_select_sub_feature_class_train_data","int(struct ClassTrainDataHandle, struct SubFeatureIndices, struct& SelectedClassTrainDataHandle)");
T_set_feature_lengths_class_train_data= dll.api("T_set_feature_lengths_class_train_data","int(struct ClassTrainDataHandle, struct SubFeatureLength, struct Names)");
T_get_class_train_data_gmm= dll.api("T_get_class_train_data_gmm","int(struct GMMHandle, struct& ClassTrainDataHandle)");
get_class_train_data_gmm= dll.api("get_class_train_data_gmm","int(int GMMHandle, int& ClassTrainDataHandle)");
T_add_class_train_data_gmm= dll.api("T_add_class_train_data_gmm","int(struct GMMHandle, struct ClassTrainDataHandle)");
add_class_train_data_gmm= dll.api("add_class_train_data_gmm","int(int GMMHandle, int ClassTrainDataHandle)");
T_get_class_train_data_mlp= dll.api("T_get_class_train_data_mlp","int(struct MLPHandle, struct& ClassTrainDataHandle)");
get_class_train_data_mlp= dll.api("get_class_train_data_mlp","int(int MLPHandle, int& ClassTrainDataHandle)");
T_add_class_train_data_mlp= dll.api("T_add_class_train_data_mlp","int(struct MLPHandle, struct ClassTrainDataHandle)");
add_class_train_data_mlp= dll.api("add_class_train_data_mlp","int(int MLPHandle, int ClassTrainDataHandle)");
T_get_class_train_data_knn= dll.api("T_get_class_train_data_knn","int(struct KNNHandle, struct& ClassTrainDataHandle)");
get_class_train_data_knn= dll.api("get_class_train_data_knn","int(int KNNHandle, int& ClassTrainDataHandle)");
T_add_class_train_data_knn= dll.api("T_add_class_train_data_knn","int(struct KNNHandle, struct ClassTrainDataHandle)");
add_class_train_data_knn= dll.api("add_class_train_data_knn","int(int KNNHandle, int ClassTrainDataHandle)");
T_get_class_train_data_svm= dll.api("T_get_class_train_data_svm","int(struct SVMHandle, struct& ClassTrainDataHandle)");
get_class_train_data_svm= dll.api("get_class_train_data_svm","int(int SVMHandle, int& ClassTrainDataHandle)");
T_add_class_train_data_svm= dll.api("T_add_class_train_data_svm","int(struct SVMHandle, struct ClassTrainDataHandle)");
add_class_train_data_svm= dll.api("add_class_train_data_svm","int(int SVMHandle, int ClassTrainDataHandle)");
T_get_sample_num_class_train_data= dll.api("T_get_sample_num_class_train_data","int(struct ClassTrainDataHandle, struct& NumSamples)");
get_sample_num_class_train_data= dll.api("get_sample_num_class_train_data","int(int ClassTrainDataHandle, int& NumSamples)");
T_get_sample_class_train_data= dll.api("T_get_sample_class_train_data","int(struct ClassTrainDataHandle, struct IndexSample, struct& Features, struct& ClassID)");
T_clear_all_class_train_data= dll.api("T_clear_all_class_train_data","int(void)");
clear_all_class_train_data= dll.api("clear_all_class_train_data","int(void)");
T_clear_class_train_data= dll.api("T_clear_class_train_data","int(struct ClassTrainDataHandle)");
clear_class_train_data= dll.api("clear_class_train_data","int(int ClassTrainDataHandle)");
T_add_sample_class_train_data= dll.api("T_add_sample_class_train_data","int(struct ClassTrainDataHandle, struct Order, struct Features, struct ClassID)");
T_create_class_train_data= dll.api("T_create_class_train_data","int(struct NumDim, struct& ClassTrainDataHandle)");
create_class_train_data= dll.api("create_class_train_data","int(int NumDim, int& ClassTrainDataHandle)");
T_select_feature_set_mlp= dll.api("T_select_feature_set_mlp","int(struct ClassTrainDataHandle, struct SelectionMethod, struct GenParamName, struct GenParamValue, struct& MLPHandle, struct& SelectedFeatureIndices, struct& Score)");
T_select_feature_set_svm= dll.api("T_select_feature_set_svm","int(struct ClassTrainDataHandle, struct SelectionMethod, struct GenParamName, struct GenParamValue, struct& SVMHandle, struct& SelectedFeatureIndices, struct& Score)");
T_select_feature_set_gmm= dll.api("T_select_feature_set_gmm","int(struct ClassTrainDataHandle, struct SelectionMethod, struct GenParamName, struct GenParamValue, struct& GMMHandle, struct& SelectedFeatureIndices, struct& Score)");
T_select_feature_set_knn= dll.api("T_select_feature_set_knn","int(struct ClassTrainDataHandle, struct SelectionMethod, struct GenParamName, struct GenParamValue, struct& KNNHandle, struct& SelectedFeatureIndices, struct& Score)");
T_clear_all_class_knn= dll.api("T_clear_all_class_knn","int(void)");
clear_all_class_knn= dll.api("clear_all_class_knn","int(void)");
T_clear_class_knn= dll.api("T_clear_class_knn","int(struct KNNHandle)");
clear_class_knn= dll.api("clear_class_knn","int(int KNNHandle)");
T_get_sample_num_class_knn= dll.api("T_get_sample_num_class_knn","int(struct KNNHandle, struct& NumSamples)");
get_sample_num_class_knn= dll.api("get_sample_num_class_knn","int(int KNNHandle, int& NumSamples)");
T_get_sample_class_knn= dll.api("T_get_sample_class_knn","int(struct KNNHandle, struct IndexSample, struct& Features, struct& ClassID)");
T_deserialize_class_knn= dll.api("T_deserialize_class_knn","int(struct SerializedItemHandle, struct& KNNHandle)");
deserialize_class_knn= dll.api("deserialize_class_knn","int(int SerializedItemHandle, int& KNNHandle)");
T_serialize_class_knn= dll.api("T_serialize_class_knn","int(struct KNNHandle, struct& SerializedItemHandle)");
serialize_class_knn= dll.api("serialize_class_knn","int(int KNNHandle, int& SerializedItemHandle)");
T_read_class_knn= dll.api("T_read_class_knn","int(struct FileName, struct& KNNHandle)");
read_class_knn= dll.api("read_class_knn","int(string FileName, int& KNNHandle)");
T_write_class_knn= dll.api("T_write_class_knn","int(struct KNNHandle, struct FileName)");
write_class_knn= dll.api("write_class_knn","int(int KNNHandle, string FileName)");
T_get_params_class_knn= dll.api("T_get_params_class_knn","int(struct KNNHandle, struct GenParamName, struct& GenParamValue)");
T_set_params_class_knn= dll.api("T_set_params_class_knn","int(struct KNNHandle, struct GenParamName, struct GenParamValue)");
T_classify_class_knn= dll.api("T_classify_class_knn","int(struct KNNHandle, struct Features, struct& Result, struct& Rating)");
T_train_class_knn= dll.api("T_train_class_knn","int(struct KNNHandle, struct GenParamName, struct GenParamValue)");
T_add_sample_class_knn= dll.api("T_add_sample_class_knn","int(struct KNNHandle, struct Features, struct ClassID)");
add_sample_class_knn= dll.api("add_sample_class_knn","int(int KNNHandle, double Features, int ClassID)");
T_create_class_knn= dll.api("T_create_class_knn","int(struct NumDim, struct& KNNHandle)");
T_clear_all_class_lut= dll.api("T_clear_all_class_lut","int(void)");
clear_all_class_lut= dll.api("clear_all_class_lut","int(void)");
T_clear_class_lut= dll.api("T_clear_class_lut","int(struct ClassLUTHandle)");
clear_class_lut= dll.api("clear_class_lut","int(int ClassLUTHandle)");
T_create_class_lut_knn= dll.api("T_create_class_lut_knn","int(struct KNNHandle, struct GenParamName, struct GenParamValue, struct& ClassLUTHandle)");
T_create_class_lut_gmm= dll.api("T_create_class_lut_gmm","int(struct GMMHandle, struct GenParamName, struct GenParamValue, struct& ClassLUTHandle)");
T_create_class_lut_svm= dll.api("T_create_class_lut_svm","int(struct SVMHandle, struct GenParamName, struct GenParamValue, struct& ClassLUTHandle)");
T_create_class_lut_mlp= dll.api("T_create_class_lut_mlp","int(struct MLPHandle, struct GenParamName, struct GenParamValue, struct& ClassLUTHandle)");
T_clear_all_class_gmm= dll.api("T_clear_all_class_gmm","int(void)");
clear_all_class_gmm= dll.api("clear_all_class_gmm","int(void)");
T_clear_class_gmm= dll.api("T_clear_class_gmm","int(struct GMMHandle)");
clear_class_gmm= dll.api("clear_class_gmm","int(int GMMHandle)");
T_clear_samples_class_gmm= dll.api("T_clear_samples_class_gmm","int(struct GMMHandle)");
clear_samples_class_gmm= dll.api("clear_samples_class_gmm","int(int GMMHandle)");
T_deserialize_class_gmm= dll.api("T_deserialize_class_gmm","int(struct SerializedItemHandle, struct& GMMHandle)");
deserialize_class_gmm= dll.api("deserialize_class_gmm","int(int SerializedItemHandle, int& GMMHandle)");
T_serialize_class_gmm= dll.api("T_serialize_class_gmm","int(struct GMMHandle, struct& SerializedItemHandle)");
serialize_class_gmm= dll.api("serialize_class_gmm","int(int GMMHandle, int& SerializedItemHandle)");
T_read_class_gmm= dll.api("T_read_class_gmm","int(struct FileName, struct& GMMHandle)");
read_class_gmm= dll.api("read_class_gmm","int(string FileName, int& GMMHandle)");
T_write_class_gmm= dll.api("T_write_class_gmm","int(struct GMMHandle, struct FileName)");
write_class_gmm= dll.api("write_class_gmm","int(int GMMHandle, string FileName)");
T_read_samples_class_gmm= dll.api("T_read_samples_class_gmm","int(struct GMMHandle, struct FileName)");
read_samples_class_gmm= dll.api("read_samples_class_gmm","int(int GMMHandle, string FileName)");
T_write_samples_class_gmm= dll.api("T_write_samples_class_gmm","int(struct GMMHandle, struct FileName)");
write_samples_class_gmm= dll.api("write_samples_class_gmm","int(int GMMHandle, string FileName)");
T_classify_class_gmm= dll.api("T_classify_class_gmm","int(struct GMMHandle, struct Features, struct Num, struct& ClassID, struct& ClassProb, struct& Density, struct& KSigmaProb)");
T_evaluate_class_gmm= dll.api("T_evaluate_class_gmm","int(struct GMMHandle, struct Features, struct& ClassProb, struct& Density, struct& KSigmaProb)");
T_train_class_gmm= dll.api("T_train_class_gmm","int(struct GMMHandle, struct MaxIter, struct Threshold, struct ClassPriors, struct Regularize, struct& Centers, struct& Iter)");
T_get_prep_info_class_gmm= dll.api("T_get_prep_info_class_gmm","int(struct GMMHandle, struct Preprocessing, struct& InformationCont, struct& CumInformationCont)");
T_get_sample_num_class_gmm= dll.api("T_get_sample_num_class_gmm","int(struct GMMHandle, struct& NumSamples)");
get_sample_num_class_gmm= dll.api("get_sample_num_class_gmm","int(int GMMHandle, int& NumSamples)");
T_get_sample_class_gmm= dll.api("T_get_sample_class_gmm","int(struct GMMHandle, struct NumSample, struct& Features, struct& ClassID)");
T_add_sample_class_gmm= dll.api("T_add_sample_class_gmm","int(struct GMMHandle, struct Features, struct ClassID, struct Randomize)");
T_get_params_class_gmm= dll.api("T_get_params_class_gmm","int(struct GMMHandle, struct& NumDim, struct& NumClasses, struct& MinCenters, struct& MaxCenters, struct& CovarType)");
T_create_class_gmm= dll.api("T_create_class_gmm","int(struct NumDim, struct NumClasses, struct NumCenters, struct CovarType, struct Preprocessing, struct NumComponents, struct RandSeed, struct& GMMHandle)");
create_class_gmm= dll.api("create_class_gmm","int(int NumDim, int NumClasses, int NumCenters, string CovarType, string Preprocessing, int NumComponents, int RandSeed, int& GMMHandle)");
T_clear_all_class_svm= dll.api("T_clear_all_class_svm","int(void)");
clear_all_class_svm= dll.api("clear_all_class_svm","int(void)");
T_clear_class_svm= dll.api("T_clear_class_svm","int(struct SVMHandle)");
clear_class_svm= dll.api("clear_class_svm","int(int SVMHandle)");
T_clear_samples_class_svm= dll.api("T_clear_samples_class_svm","int(struct SVMHandle)");
clear_samples_class_svm= dll.api("clear_samples_class_svm","int(int SVMHandle)");
T_deserialize_class_svm= dll.api("T_deserialize_class_svm","int(struct SerializedItemHandle, struct& SVMHandle)");
deserialize_class_svm= dll.api("deserialize_class_svm","int(int SerializedItemHandle, int& SVMHandle)");
T_serialize_class_svm= dll.api("T_serialize_class_svm","int(struct SVMHandle, struct& SerializedItemHandle)");
serialize_class_svm= dll.api("serialize_class_svm","int(int SVMHandle, int& SerializedItemHandle)");
T_read_class_svm= dll.api("T_read_class_svm","int(struct FileName, struct& SVMHandle)");
read_class_svm= dll.api("read_class_svm","int(string FileName, int& SVMHandle)");
T_write_class_svm= dll.api("T_write_class_svm","int(struct SVMHandle, struct FileName)");
write_class_svm= dll.api("write_class_svm","int(int SVMHandle, string FileName)");
T_read_samples_class_svm= dll.api("T_read_samples_class_svm","int(struct SVMHandle, struct FileName)");
read_samples_class_svm= dll.api("read_samples_class_svm","int(int SVMHandle, string FileName)");
T_write_samples_class_svm= dll.api("T_write_samples_class_svm","int(struct SVMHandle, struct FileName)");
write_samples_class_svm= dll.api("write_samples_class_svm","int(int SVMHandle, string FileName)");
T_evaluate_class_svm= dll.api("T_evaluate_class_svm","int(struct SVMHandle, struct Features, struct& Result)");
T_classify_class_svm= dll.api("T_classify_class_svm","int(struct SVMHandle, struct Features, struct Num, struct& Class)");
T_reduce_class_svm= dll.api("T_reduce_class_svm","int(struct SVMHandle, struct Method, struct MinRemainingSV, struct MaxError, struct& SVMHandleReduced)");
reduce_class_svm= dll.api("reduce_class_svm","int(int SVMHandle, string Method, int MinRemainingSV, double MaxError, int& SVMHandleReduced)");
T_train_class_svm= dll.api("T_train_class_svm","int(struct SVMHandle, struct Epsilon, struct TrainMode)");
train_class_svm= dll.api("train_class_svm","int(int SVMHandle, double Epsilon, string TrainMode)");
T_get_prep_info_class_svm= dll.api("T_get_prep_info_class_svm","int(struct SVMHandle, struct Preprocessing, struct& InformationCont, struct& CumInformationCont)");
T_get_support_vector_num_class_svm= dll.api("T_get_support_vector_num_class_svm","int(struct SVMHandle, struct& NumSupportVectors, struct& NumSVPerSVM)");
T_get_support_vector_class_svm= dll.api("T_get_support_vector_class_svm","int(struct SVMHandle, struct IndexSupportVector, struct& Index)");
T_get_sample_num_class_svm= dll.api("T_get_sample_num_class_svm","int(struct SVMHandle, struct& NumSamples)");
get_sample_num_class_svm= dll.api("get_sample_num_class_svm","int(int SVMHandle, int& NumSamples)");
T_get_sample_class_svm= dll.api("T_get_sample_class_svm","int(struct SVMHandle, struct IndexSample, struct& Features, struct& Target)");
T_add_sample_class_svm= dll.api("T_add_sample_class_svm","int(struct SVMHandle, struct Features, struct Class)");
T_get_params_class_svm= dll.api("T_get_params_class_svm","int(struct SVMHandle, struct& NumFeatures, struct& KernelType, struct& KernelParam, struct& Nu, struct& NumClasses, struct& Mode, struct& Preprocessing, struct& NumComponents)");
get_params_class_svm= dll.api("get_params_class_svm","int(int SVMHandle, int& NumFeatures, string& KernelType, double& KernelParam, double& Nu, int& NumClasses, string& Mode, string& Preprocessing, int& NumComponents)");
T_create_class_svm= dll.api("T_create_class_svm","int(struct NumFeatures, struct KernelType, struct KernelParam, struct Nu, struct NumClasses, struct Mode, struct Preprocessing, struct NumComponents, struct& SVMHandle)");
create_class_svm= dll.api("create_class_svm","int(int NumFeatures, string KernelType, double KernelParam, double Nu, int NumClasses, string Mode, string Preprocessing, int NumComponents, int& SVMHandle)");
T_clear_all_class_mlp= dll.api("T_clear_all_class_mlp","int(void)");
clear_all_class_mlp= dll.api("clear_all_class_mlp","int(void)");
T_clear_class_mlp= dll.api("T_clear_class_mlp","int(struct MLPHandle)");
clear_class_mlp= dll.api("clear_class_mlp","int(int MLPHandle)");
T_clear_samples_class_mlp= dll.api("T_clear_samples_class_mlp","int(struct MLPHandle)");
clear_samples_class_mlp= dll.api("clear_samples_class_mlp","int(int MLPHandle)");
T_deserialize_class_mlp= dll.api("T_deserialize_class_mlp","int(struct SerializedItemHandle, struct& MLPHandle)");
deserialize_class_mlp= dll.api("deserialize_class_mlp","int(int SerializedItemHandle, int& MLPHandle)");
T_serialize_class_mlp= dll.api("T_serialize_class_mlp","int(struct MLPHandle, struct& SerializedItemHandle)");
serialize_class_mlp= dll.api("serialize_class_mlp","int(int MLPHandle, int& SerializedItemHandle)");
T_read_class_mlp= dll.api("T_read_class_mlp","int(struct FileName, struct& MLPHandle)");
read_class_mlp= dll.api("read_class_mlp","int(string FileName, int& MLPHandle)");
T_write_class_mlp= dll.api("T_write_class_mlp","int(struct MLPHandle, struct FileName)");
write_class_mlp= dll.api("write_class_mlp","int(int MLPHandle, string FileName)");
T_read_samples_class_mlp= dll.api("T_read_samples_class_mlp","int(struct MLPHandle, struct FileName)");
read_samples_class_mlp= dll.api("read_samples_class_mlp","int(int MLPHandle, string FileName)");
T_write_samples_class_mlp= dll.api("T_write_samples_class_mlp","int(struct MLPHandle, struct FileName)");
write_samples_class_mlp= dll.api("write_samples_class_mlp","int(int MLPHandle, string FileName)");
T_classify_class_mlp= dll.api("T_classify_class_mlp","int(struct MLPHandle, struct Features, struct Num, struct& Class, struct& Confidence)");
T_evaluate_class_mlp= dll.api("T_evaluate_class_mlp","int(struct MLPHandle, struct Features, struct& Result)");
T_train_class_mlp= dll.api("T_train_class_mlp","int(struct MLPHandle, struct MaxIterations, struct WeightTolerance, struct ErrorTolerance, struct& Error, struct& ErrorLog)");
T_get_prep_info_class_mlp= dll.api("T_get_prep_info_class_mlp","int(struct MLPHandle, struct Preprocessing, struct& InformationCont, struct& CumInformationCont)");
T_get_sample_num_class_mlp= dll.api("T_get_sample_num_class_mlp","int(struct MLPHandle, struct& NumSamples)");
get_sample_num_class_mlp= dll.api("get_sample_num_class_mlp","int(int MLPHandle, int& NumSamples)");
T_get_sample_class_mlp= dll.api("T_get_sample_class_mlp","int(struct MLPHandle, struct IndexSample, struct& Features, struct& Target)");
T_get_rejection_params_class_mlp= dll.api("T_get_rejection_params_class_mlp","int(struct MLPHandle, struct GenParamName, struct& GenParamValue)");
get_rejection_params_class_mlp= dll.api("get_rejection_params_class_mlp","int(int MLPHandle, string GenParamName, string& GenParamValue)");
T_set_rejection_params_class_mlp= dll.api("T_set_rejection_params_class_mlp","int(struct MLPHandle, struct GenParamName, struct GenParamValue)");
set_rejection_params_class_mlp= dll.api("set_rejection_params_class_mlp","int(int MLPHandle, string GenParamName, string GenParamValue)");
T_add_sample_class_mlp= dll.api("T_add_sample_class_mlp","int(struct MLPHandle, struct Features, struct Target)");
T_get_regularization_params_class_mlp= dll.api("T_get_regularization_params_class_mlp","int(struct MLPHandle, struct GenParamName, struct& GenParamValue)");
get_regularization_params_class_mlp= dll.api("get_regularization_params_class_mlp","int(int MLPHandle, string GenParamName, double& GenParamValue)");
T_set_regularization_params_class_mlp= dll.api("T_set_regularization_params_class_mlp","int(struct MLPHandle, struct GenParamName, struct GenParamValue)");
set_regularization_params_class_mlp= dll.api("set_regularization_params_class_mlp","int(int MLPHandle, string GenParamName, double GenParamValue)");
T_get_params_class_mlp= dll.api("T_get_params_class_mlp","int(struct MLPHandle, struct& NumInput, struct& NumHidden, struct& NumOutput, struct& OutputFunction, struct& Preprocessing, struct& NumComponents)");
get_params_class_mlp= dll.api("get_params_class_mlp","int(int MLPHandle, int& NumInput, int& NumHidden, int& NumOutput, string& OutputFunction, string& Preprocessing, int& NumComponents)");
T_create_class_mlp= dll.api("T_create_class_mlp","int(struct NumInput, struct NumHidden, struct NumOutput, struct OutputFunction, struct Preprocessing, struct NumComponents, struct RandSeed, struct& MLPHandle)");
create_class_mlp= dll.api("create_class_mlp","int(int NumInput, int NumHidden, int NumOutput, string OutputFunction, string Preprocessing, int NumComponents, int RandSeed, int& MLPHandle)");
T_deserialize_class_box= dll.api("T_deserialize_class_box","int(struct ClassifHandle, struct SerializedItemHandle)");
deserialize_class_box= dll.api("deserialize_class_box","int(int ClassifHandle, int SerializedItemHandle)");
T_serialize_class_box= dll.api("T_serialize_class_box","int(struct ClassifHandle, struct& SerializedItemHandle)");
serialize_class_box= dll.api("serialize_class_box","int(int ClassifHandle, int& SerializedItemHandle)");
T_write_class_box= dll.api("T_write_class_box","int(struct ClassifHandle, struct FileName)");
write_class_box= dll.api("write_class_box","int(int ClassifHandle, string FileName)");
T_set_class_box_param= dll.api("T_set_class_box_param","int(struct ClassifHandle, struct Flag, struct Value)");
set_class_box_param= dll.api("set_class_box_param","int(int ClassifHandle, string Flag, double Value)");
T_read_sampset= dll.api("T_read_sampset","int(struct FileName, struct& SampKey)");
read_sampset= dll.api("read_sampset","int(string FileName, int& SampKey)");
T_read_class_box= dll.api("T_read_class_box","int(struct ClassifHandle, struct FileName)");
read_class_box= dll.api("read_class_box","int(int ClassifHandle, string FileName)");
T_learn_sampset_box= dll.api("T_learn_sampset_box","int(struct ClassifHandle, struct SampKey, struct Outfile, struct NSamples, struct StopError, struct ErrorN)");
learn_sampset_box= dll.api("learn_sampset_box","int(int ClassifHandle, int SampKey, string Outfile, int NSamples, double StopError, int ErrorN)");
T_learn_class_box= dll.api("T_learn_class_box","int(struct ClassifHandle, struct Features, struct Class)");
T_get_class_box_param= dll.api("T_get_class_box_param","int(struct ClassifHandle, struct Flag, struct& Value)");
get_class_box_param= dll.api("get_class_box_param","int(int ClassifHandle, string Flag, double& Value)");
T_clear_sampset= dll.api("T_clear_sampset","int(struct SampKey)");
clear_sampset= dll.api("clear_sampset","int(int SampKey)");
T_close_class_box= dll.api("T_close_class_box","int(struct ClassifHandle)");
close_class_box= dll.api("close_class_box","int(int ClassifHandle)");
T_create_class_box= dll.api("T_create_class_box","int(struct& ClassifHandle)");
create_class_box= dll.api("create_class_box","int(int& ClassifHandle)");
T_descript_class_box= dll.api("T_descript_class_box","int(struct ClassifHandle, struct Dimensions, struct& ClassIdx, struct& BoxIdx, struct& BoxLowerBound, struct& BoxHigherBound, struct& BoxNumSamplesTrain, struct& BoxNumSamplesWrong)");
descript_class_box= dll.api("descript_class_box","int(int ClassifHandle, int Dimensions, int& ClassIdx, int& BoxIdx, int& BoxLowerBound, int& BoxHigherBound, int& BoxNumSamplesTrain, int& BoxNumSamplesWrong)");
T_test_sampset_box= dll.api("T_test_sampset_box","int(struct ClassifHandle, struct SampKey, struct& Error)");
test_sampset_box= dll.api("test_sampset_box","int(int ClassifHandle, int SampKey, double& Error)");
T_enquire_reject_class_box= dll.api("T_enquire_reject_class_box","int(struct ClassifHandle, struct FeatureList, struct& Class)");
T_enquire_class_box= dll.api("T_enquire_class_box","int(struct ClassifHandle, struct FeatureList, struct& Class)");
T_close_all_class_box= dll.api("T_close_all_class_box","int(void)");
close_all_class_box= dll.api("close_all_class_box","int(void)");
T_convert_map_type= dll.api("T_convert_map_type","int(ADDR Map, ADDR& MapConverted, struct NewType, struct ImageWidth)");
convert_map_type= dll.api("convert_map_type","int(ADDR Map, ADDR& MapConverted, string NewType, int ImageWidth)");
T_vector_to_pose= dll.api("T_vector_to_pose","int(struct WorldX, struct WorldY, struct WorldZ, struct ImageRow, struct ImageColumn, struct CameraParam, struct Method, struct QualityType, struct& Pose, struct& Quality)");
T_proj_hom_mat2d_to_pose= dll.api("T_proj_hom_mat2d_to_pose","int(struct Homography, struct CameraMatrix, struct Method, struct& Pose)");
T_radial_distortion_self_calibration= dll.api("T_radial_distortion_self_calibration","int(ADDR Contours, ADDR& SelectedContours, struct Width, struct Height, struct InlierThreshold, struct RandSeed, struct DistortionModel, struct DistortionCenter, struct PrincipalPointVar, struct& CameraParam)");
T_cam_par_to_cam_mat= dll.api("T_cam_par_to_cam_mat","int(struct CameraParam, struct& CameraMatrix, struct& ImageWidth, struct& ImageHeight)");
T_cam_mat_to_cam_par= dll.api("T_cam_mat_to_cam_par","int(struct CameraMatrix, struct Kappa, struct ImageWidth, struct ImageHeight, struct& CameraParam)");
T_stationary_camera_self_calibration= dll.api("T_stationary_camera_self_calibration","int(struct NumImages, struct ImageWidth, struct ImageHeight, struct ReferenceImage, struct MappingSource, struct MappingDest, struct HomMatrices2D, struct Rows1, struct Cols1, struct Rows2, struct Cols2, struct NumCorrespondences, struct EstimationMethod, struct CameraModel, struct FixedCameraParams, struct& CameraMatrices, struct& Kappa, struct& RotationMatrices, struct& X, struct& Y, struct& Z, struct& Error)");
T_get_rectangle_pose= dll.api("T_get_rectangle_pose","int(ADDR Contour, struct CameraParam, struct Width, struct Height, struct WeightingMode, struct ClippingFactor, struct& Pose, struct& CovPose, struct& Error)");
T_get_circle_pose= dll.api("T_get_circle_pose","int(ADDR Contour, struct CameraParam, struct Radius, struct OutputType, struct& Pose1, struct& Pose2)");
T_radiometric_self_calibration= dll.api("T_radiometric_self_calibration","int(ADDR Images, struct ExposureRatios, struct Features, struct FunctionType, struct Smoothness, struct PolynomialDegree, struct& InverseResponse)");
T_map_image= dll.api("T_map_image","int(ADDR Image, ADDR Map, ADDR& ImageMapped)");
map_image= dll.api("map_image","int(ADDR Image, ADDR Map, ADDR& ImageMapped)");
T_gen_radial_distortion_map= dll.api("T_gen_radial_distortion_map","int(ADDR& Map, struct CamParamIn, struct CamParamOut, struct MapType)");
T_gen_image_to_world_plane_map= dll.api("T_gen_image_to_world_plane_map","int(ADDR& Map, struct CameraParam, struct WorldPose, struct WidthIn, struct HeightIn, struct WidthMapped, struct HeightMapped, struct Scale, struct MapType)");
T_image_to_world_plane= dll.api("T_image_to_world_plane","int(ADDR Image, ADDR& ImageWorld, struct CameraParam, struct WorldPose, struct Width, struct Height, struct Scale, struct Interpolation)");
T_contour_to_world_plane_xld= dll.api("T_contour_to_world_plane_xld","int(ADDR Contours, ADDR& ContoursTrans, struct CameraParam, struct WorldPose, struct Scale)");
T_image_points_to_world_plane= dll.api("T_image_points_to_world_plane","int(struct CameraParam, struct WorldPose, struct Rows, struct Cols, struct Scale, struct& X, struct& Y)");
T_set_origin_pose= dll.api("T_set_origin_pose","int(struct PoseIn, struct DX, struct DY, struct DZ, struct& PoseNewOrigin)");
T_hand_eye_calibration= dll.api("T_hand_eye_calibration","int(struct X, struct Y, struct Z, struct Row, struct Col, struct NumPoints, struct RobotPoses, struct CameraParam, struct Method, struct QualityType, struct& CameraPose, struct& CalibrationPose, struct& Quality)");
T_get_pose_type= dll.api("T_get_pose_type","int(struct Pose, struct& OrderOfTransform, struct& OrderOfRotation, struct& ViewOfTransform)");
T_convert_pose_type= dll.api("T_convert_pose_type","int(struct PoseIn, struct OrderOfTransform, struct OrderOfRotation, struct ViewOfTransform, struct& PoseOut)");
T_create_pose= dll.api("T_create_pose","int(struct TransX, struct TransY, struct TransZ, struct RotX, struct RotY, struct RotZ, struct OrderOfTransform, struct OrderOfRotation, struct ViewOfTransform, struct& Pose)");
T_change_radial_distortion_contours_xld= dll.api("T_change_radial_distortion_contours_xld","int(ADDR Contours, ADDR& ContoursRectified, struct CamParamIn, struct CamParamOut)");
T_change_radial_distortion_points= dll.api("T_change_radial_distortion_points","int(struct Row, struct Col, struct CamParamIn, struct CamParamOut, struct& RowChanged, struct& ColChanged)");
T_change_radial_distortion_image= dll.api("T_change_radial_distortion_image","int(ADDR Image, ADDR Region, ADDR& ImageRectified, struct CamParamIn, struct CamParamOut)");
T_change_radial_distortion_cam_par= dll.api("T_change_radial_distortion_cam_par","int(struct Mode, struct CamParamIn, struct DistortionCoeffs, struct& CamParamOut)");
T_gen_caltab= dll.api("T_gen_caltab","int(struct XNum, struct YNum, struct MarkDist, struct DiameterRatio, struct CalPlateDescr, struct CalPlatePSFile)");
gen_caltab= dll.api("gen_caltab","int(int XNum, int YNum, double MarkDist, double DiameterRatio, string CalPlateDescr, string CalPlatePSFile)");
T_create_caltab= dll.api("T_create_caltab","int(struct NumRows, struct MarksPerRow, struct Diameter, struct FinderRow, struct FinderColumn, struct Polarity, struct CalPlateDescr, struct CalPlatePSFile)");
create_caltab= dll.api("create_caltab","int(int NumRows, int MarksPerRow, double Diameter, int FinderRow, int FinderColumn, string Polarity, string CalPlateDescr, string CalPlatePSFile)");
T_caltab_points= dll.api("T_caltab_points","int(struct CalPlateDescr, struct& X, struct& Y, struct& Z)");
T_get_line_of_sight= dll.api("T_get_line_of_sight","int(struct Row, struct Column, struct CameraParam, struct& PX, struct& PY, struct& PZ, struct& QX, struct& QY, struct& QZ)");
T_project_hom_point_hom_mat3d= dll.api("T_project_hom_point_hom_mat3d","int(struct HomMat3D, struct Px, struct Py, struct Pz, struct Pw, struct& Qx, struct& Qy, struct& Qw)");
T_project_point_hom_mat3d= dll.api("T_project_point_hom_mat3d","int(struct HomMat3D, struct Px, struct Py, struct Pz, struct& Qx, struct& Qy)");
T_project_3d_point= dll.api("T_project_3d_point","int(struct X, struct Y, struct Z, struct CameraParam, struct& Row, struct& Column)");
T_cam_par_pose_to_hom_mat3d= dll.api("T_cam_par_pose_to_hom_mat3d","int(struct CameraParam, struct Pose, struct& HomMat3D)");
T_hom_mat3d_to_pose= dll.api("T_hom_mat3d_to_pose","int(struct HomMat3D, struct& Pose)");
T_pose_to_hom_mat3d= dll.api("T_pose_to_hom_mat3d","int(struct Pose, struct& HomMat3D)");
T_deserialize_cam_par= dll.api("T_deserialize_cam_par","int(struct SerializedItemHandle, struct& CameraParam)");
T_serialize_cam_par= dll.api("T_serialize_cam_par","int(struct CameraParam, struct& SerializedItemHandle)");
T_deserialize_pose= dll.api("T_deserialize_pose","int(struct SerializedItemHandle, struct& Pose)");
T_serialize_pose= dll.api("T_serialize_pose","int(struct Pose, struct& SerializedItemHandle)");
T_read_pose= dll.api("T_read_pose","int(struct PoseFile, struct& Pose)");
T_write_pose= dll.api("T_write_pose","int(struct Pose, struct PoseFile)");
T_read_cam_par= dll.api("T_read_cam_par","int(struct CamParFile, struct& CameraParam)");
T_write_cam_par= dll.api("T_write_cam_par","int(struct CameraParam, struct CamParFile)");
T_sim_caltab= dll.api("T_sim_caltab","int(ADDR& SimImage, struct CalPlateDescr, struct CameraParam, struct CalPlatePose, struct GrayBackground, struct GrayPlate, struct GrayMarks, struct ScaleFac)");
T_disp_caltab= dll.api("T_disp_caltab","int(struct WindowHandle, struct CalPlateDescr, struct CameraParam, struct CalPlatePose, struct ScaleFac)");
T_camera_calibration= dll.api("T_camera_calibration","int(struct NX, struct NY, struct NZ, struct NRow, struct NCol, struct StartCamParam, struct NStartPose, struct EstimateParams, struct& CameraParam, struct& NFinalPose, struct& Errors)");
T_find_marks_and_pose= dll.api("T_find_marks_and_pose","int(ADDR Image, ADDR CalPlateRegion, struct CalPlateDescr, struct StartCamParam, struct StartThresh, struct DeltaThresh, struct MinThresh, struct Alpha, struct MinContLength, struct MaxDiamMarks, struct& RCoord, struct& CCoord, struct& StartPose)");
T_find_caltab= dll.api("T_find_caltab","int(ADDR Image, ADDR& CalPlate, struct CalPlateDescr, struct SizeGauss, struct MarkThresh, struct MinDiamMarks)");
find_caltab= dll.api("find_caltab","int(ADDR Image, ADDR& CalPlate, string CalPlateDescr, int SizeGauss, int MarkThresh, int MinDiamMarks)");
T_clear_all_camera_setup_models= dll.api("T_clear_all_camera_setup_models","int(void)");
clear_all_camera_setup_models= dll.api("clear_all_camera_setup_models","int(void)");
T_clear_camera_setup_model= dll.api("T_clear_camera_setup_model","int(struct CameraSetupModelID)");
clear_camera_setup_model= dll.api("clear_camera_setup_model","int(int CameraSetupModelID)");
T_serialize_camera_setup_model= dll.api("T_serialize_camera_setup_model","int(struct CameraSetupModelID, struct& SerializedItemHandle)");
serialize_camera_setup_model= dll.api("serialize_camera_setup_model","int(int CameraSetupModelID, int& SerializedItemHandle)");
T_deserialize_camera_setup_model= dll.api("T_deserialize_camera_setup_model","int(struct SerializedItemHandle, struct& CameraSetupModelID)");
deserialize_camera_setup_model= dll.api("deserialize_camera_setup_model","int(int SerializedItemHandle, int& CameraSetupModelID)");
T_write_camera_setup_model= dll.api("T_write_camera_setup_model","int(struct CameraSetupModelID, struct FileName)");
write_camera_setup_model= dll.api("write_camera_setup_model","int(int CameraSetupModelID, string FileName)");
T_read_camera_setup_model= dll.api("T_read_camera_setup_model","int(struct FileName, struct& CameraSetupModelID)");
read_camera_setup_model= dll.api("read_camera_setup_model","int(string FileName, int& CameraSetupModelID)");
T_get_camera_setup_param= dll.api("T_get_camera_setup_param","int(struct CameraSetupModelID, struct CameraIdx, struct GenParamName, struct& GenParamValue)");
get_camera_setup_param= dll.api("get_camera_setup_param","int(int CameraSetupModelID, int CameraIdx, string GenParamName, double& GenParamValue)");
T_set_camera_setup_param= dll.api("T_set_camera_setup_param","int(struct CameraSetupModelID, struct CameraIdx, struct GenParamName, struct GenParamValue)");
set_camera_setup_param= dll.api("set_camera_setup_param","int(int CameraSetupModelID, int CameraIdx, string GenParamName, double GenParamValue)");
T_set_camera_setup_cam_param= dll.api("T_set_camera_setup_cam_param","int(struct CameraSetupModelID, struct CameraIdx, struct CameraType, struct CameraParam, struct CameraPose)");
T_create_camera_setup_model= dll.api("T_create_camera_setup_model","int(struct NumCameras, struct& CameraSetupModelID)");
create_camera_setup_model= dll.api("create_camera_setup_model","int(int NumCameras, int& CameraSetupModelID)");
T_clear_all_calib_data= dll.api("T_clear_all_calib_data","int(void)");
clear_all_calib_data= dll.api("clear_all_calib_data","int(void)");
T_clear_calib_data= dll.api("T_clear_calib_data","int(struct CalibDataID)");
clear_calib_data= dll.api("clear_calib_data","int(int CalibDataID)");
T_deserialize_calib_data= dll.api("T_deserialize_calib_data","int(struct SerializedItemHandle, struct& CalibDataID)");
deserialize_calib_data= dll.api("deserialize_calib_data","int(int SerializedItemHandle, int& CalibDataID)");
T_serialize_calib_data= dll.api("T_serialize_calib_data","int(struct CalibDataID, struct& SerializedItemHandle)");
serialize_calib_data= dll.api("serialize_calib_data","int(int CalibDataID, int& SerializedItemHandle)");
T_read_calib_data= dll.api("T_read_calib_data","int(struct FileName, struct& CalibDataID)");
read_calib_data= dll.api("read_calib_data","int(string FileName, int& CalibDataID)");
T_write_calib_data= dll.api("T_write_calib_data","int(struct CalibDataID, struct FileName)");
write_calib_data= dll.api("write_calib_data","int(int CalibDataID, string FileName)");
T_calibrate_hand_eye= dll.api("T_calibrate_hand_eye","int(struct CalibDataID, struct& Errors)");
T_calibrate_cameras= dll.api("T_calibrate_cameras","int(struct CalibDataID, struct& Error)");
calibrate_cameras= dll.api("calibrate_cameras","int(int CalibDataID, double& Error)");
T_remove_calib_data= dll.api("T_remove_calib_data","int(struct CalibDataID, struct ItemType, struct ItemIdx)");
remove_calib_data= dll.api("remove_calib_data","int(int CalibDataID, string ItemType, int ItemIdx)");
T_set_calib_data= dll.api("T_set_calib_data","int(struct CalibDataID, struct ItemType, struct ItemIdx, struct DataName, struct DataValue)");
set_calib_data= dll.api("set_calib_data","int(int CalibDataID, string ItemType, int ItemIdx, string DataName, string DataValue)");
T_find_calib_object= dll.api("T_find_calib_object","int(ADDR Image, struct CalibDataID, struct CameraIdx, struct CalibObjIdx, struct CalibObjPoseIdx, struct GenParamName, struct GenParamValue)");
T_remove_calib_data_observ= dll.api("T_remove_calib_data_observ","int(struct CalibDataID, struct CameraIdx, struct CalibObjIdx, struct CalibObjPoseIdx)");
remove_calib_data_observ= dll.api("remove_calib_data_observ","int(int CalibDataID, int CameraIdx, int CalibObjIdx, int CalibObjPoseIdx)");
T_get_calib_data_observ_contours= dll.api("T_get_calib_data_observ_contours","int(ADDR& Contours, struct CalibDataID, struct ContourName, struct CameraIdx, struct CalibObjIdx, struct CalibObjPoseIdx)");
get_calib_data_observ_contours= dll.api("get_calib_data_observ_contours","int(ADDR& Contours, int CalibDataID, string ContourName, int CameraIdx, int CalibObjIdx, int CalibObjPoseIdx)");
T_get_calib_data_observ_pose= dll.api("T_get_calib_data_observ_pose","int(struct CalibDataID, struct CameraIdx, struct CalibObjIdx, struct CalibObjPoseIdx, struct& ObjInCameraPose)");
T_set_calib_data_observ_pose= dll.api("T_set_calib_data_observ_pose","int(struct CalibDataID, struct CameraIdx, struct CalibObjIdx, struct CalibObjPoseIdx, struct ObjInCameraPose)");
T_get_calib_data_observ_points= dll.api("T_get_calib_data_observ_points","int(struct CalibDataID, struct CameraIdx, struct CalibObjIdx, struct CalibObjPoseIdx, struct& Row, struct& Column, struct& Index, struct& Pose)");
T_set_calib_data_observ_points= dll.api("T_set_calib_data_observ_points","int(struct CalibDataID, struct CameraIdx, struct CalibObjIdx, struct CalibObjPoseIdx, struct Row, struct Column, struct Index, struct Pose)");
T_query_calib_data_observ_indices= dll.api("T_query_calib_data_observ_indices","int(struct CalibDataID, struct ItemType, struct ItemIdx, struct& Index1, struct& Index2)");
T_get_calib_data= dll.api("T_get_calib_data","int(struct CalibDataID, struct ItemType, struct ItemIdx, struct DataName, struct& DataValue)");
get_calib_data= dll.api("get_calib_data","int(int CalibDataID, string ItemType, int ItemIdx, string DataName, double& DataValue)");
T_set_calib_data_calib_object= dll.api("T_set_calib_data_calib_object","int(struct CalibDataID, struct CalibObjIdx, struct CalibObjDescr)");
set_calib_data_calib_object= dll.api("set_calib_data_calib_object","int(int CalibDataID, int CalibObjIdx, double CalibObjDescr)");
T_set_calib_data_cam_param= dll.api("T_set_calib_data_cam_param","int(struct CalibDataID, struct CameraIdx, struct CameraType, struct CameraParam)");
T_create_calib_data= dll.api("T_create_calib_data","int(struct CalibSetup, struct NumCameras, struct NumCalibObjects, struct& CalibDataID)");
create_calib_data= dll.api("create_calib_data","int(string CalibSetup, int NumCameras, int NumCalibObjects, int& CalibDataID)");
T_get_bead_inspection_param= dll.api("T_get_bead_inspection_param","int(struct BeadInspectionModel, struct GenParamName, struct& GenParamValue)");
get_bead_inspection_param= dll.api("get_bead_inspection_param","int(int BeadInspectionModel, string GenParamName, int& GenParamValue)");
T_set_bead_inspection_param= dll.api("T_set_bead_inspection_param","int(struct BeadInspectionModel, struct GenParamName, struct GenParamValue)");
set_bead_inspection_param= dll.api("set_bead_inspection_param","int(int BeadInspectionModel, string GenParamName, string GenParamValue)");
T_apply_bead_inspection_model= dll.api("T_apply_bead_inspection_model","int(ADDR Image, ADDR& LeftContour, ADDR& RightContour, ADDR& ErrorSegment, struct BeadInspectionModel, struct& ErrorType)");
T_clear_bead_inspection_model= dll.api("T_clear_bead_inspection_model","int(struct BeadInspectionModel)");
clear_bead_inspection_model= dll.api("clear_bead_inspection_model","int(int BeadInspectionModel)");
T_create_bead_inspection_model= dll.api("T_create_bead_inspection_model","int(ADDR BeadContour, struct TargetThickness, struct ThicknessTolerance, struct PositionTolerance, struct Polarity, struct GenParamName, struct GenParamValue, struct& BeadInspectionModel)");
create_bead_inspection_model= dll.api("create_bead_inspection_model","int(ADDR BeadContour, int TargetThickness, int ThicknessTolerance, int PositionTolerance, string Polarity, string GenParamName, int GenParamValue, int& BeadInspectionModel)");
T_deserialize_bar_code_model= dll.api("T_deserialize_bar_code_model","int(struct SerializedItemHandle, struct& BarCodeHandle)");
deserialize_bar_code_model= dll.api("deserialize_bar_code_model","int(int SerializedItemHandle, int& BarCodeHandle)");
T_serialize_bar_code_model= dll.api("T_serialize_bar_code_model","int(struct BarCodeHandle, struct& SerializedItemHandle)");
serialize_bar_code_model= dll.api("serialize_bar_code_model","int(int BarCodeHandle, int& SerializedItemHandle)");
T_read_bar_code_model= dll.api("T_read_bar_code_model","int(struct FileName, struct& BarCodeHandle)");
read_bar_code_model= dll.api("read_bar_code_model","int(string FileName, int& BarCodeHandle)");
T_write_bar_code_model= dll.api("T_write_bar_code_model","int(struct BarCodeHandle, struct FileName)");
write_bar_code_model= dll.api("write_bar_code_model","int(int BarCodeHandle, string FileName)");
T_get_bar_code_object= dll.api("T_get_bar_code_object","int(ADDR& BarCodeObjects, struct BarCodeHandle, struct CandidateHandle, struct ObjectName)");
get_bar_code_object= dll.api("get_bar_code_object","int(ADDR& BarCodeObjects, int BarCodeHandle, string CandidateHandle, string ObjectName)");
T_get_bar_code_result= dll.api("T_get_bar_code_result","int(struct BarCodeHandle, struct CandidateHandle, struct ResultName, struct& BarCodeResults)");
get_bar_code_result= dll.api("get_bar_code_result","int(int BarCodeHandle, string CandidateHandle, string ResultName, string& BarCodeResults)");
T_decode_bar_code_rectangle2= dll.api("T_decode_bar_code_rectangle2","int(ADDR Image, struct BarCodeHandle, struct CodeType, struct Row, struct Column, struct Phi, struct Length1, struct Length2, struct& DecodedDataStrings)");
decode_bar_code_rectangle2= dll.api("decode_bar_code_rectangle2","int(ADDR Image, int BarCodeHandle, string CodeType, double Row, double Column, double Phi, double Length1, double Length2, string& DecodedDataStrings)");
T_find_bar_code= dll.api("T_find_bar_code","int(ADDR Image, ADDR& SymbolRegions, struct BarCodeHandle, struct CodeType, struct& DecodedDataStrings)");
find_bar_code= dll.api("find_bar_code","int(ADDR Image, ADDR& SymbolRegions, int BarCodeHandle, string CodeType, string& DecodedDataStrings)");
T_query_bar_code_params= dll.api("T_query_bar_code_params","int(struct BarCodeHandle, struct Properties, struct& GenParamName)");
query_bar_code_params= dll.api("query_bar_code_params","int(int BarCodeHandle, string Properties, string& GenParamName)");
T_get_bar_code_param_specific= dll.api("T_get_bar_code_param_specific","int(struct BarCodeHandle, struct CodeTypes, struct GenParamName, struct& GenParamValue)");
get_bar_code_param_specific= dll.api("get_bar_code_param_specific","int(int BarCodeHandle, string CodeTypes, string GenParamName, double& GenParamValue)");
T_get_bar_code_param= dll.api("T_get_bar_code_param","int(struct BarCodeHandle, struct GenParamName, struct& GenParamValue)");
get_bar_code_param= dll.api("get_bar_code_param","int(int BarCodeHandle, string GenParamName, double& GenParamValue)");
T_set_bar_code_param_specific= dll.api("T_set_bar_code_param_specific","int(struct BarCodeHandle, struct CodeTypes, struct GenParamName, struct GenParamValue)");
T_set_bar_code_param= dll.api("T_set_bar_code_param","int(struct BarCodeHandle, struct GenParamName, struct GenParamValue)");
set_bar_code_param= dll.api("set_bar_code_param","int(int BarCodeHandle, string GenParamName, double GenParamValue)");
T_clear_all_bar_code_models= dll.api("T_clear_all_bar_code_models","int(void)");
clear_all_bar_code_models= dll.api("clear_all_bar_code_models","int(void)");
T_clear_bar_code_model= dll.api("T_clear_bar_code_model","int(struct BarCodeHandle)");
clear_bar_code_model= dll.api("clear_bar_code_model","int(int BarCodeHandle)");
T_create_bar_code_model= dll.api("T_create_bar_code_model","int(struct GenParamName, struct GenParamValue, struct& BarCodeHandle)");
create_bar_code_model= dll.api("create_bar_code_model","int(string GenParamName, double GenParamValue, int& BarCodeHandle)");
T_close_bg_esti= dll.api("T_close_bg_esti","int(struct BgEstiHandle)");
close_bg_esti= dll.api("close_bg_esti","int(int BgEstiHandle)");
T_give_bg_esti= dll.api("T_give_bg_esti","int(ADDR& BackgroundImage, struct BgEstiHandle)");
give_bg_esti= dll.api("give_bg_esti","int(ADDR& BackgroundImage, int BgEstiHandle)");
T_update_bg_esti= dll.api("T_update_bg_esti","int(ADDR PresentImage, ADDR UpDateRegion, struct BgEstiHandle)");
update_bg_esti= dll.api("update_bg_esti","int(ADDR PresentImage, ADDR UpDateRegion, int BgEstiHandle)");
T_run_bg_esti= dll.api("T_run_bg_esti","int(ADDR PresentImage, ADDR& ForegroundRegion, struct BgEstiHandle)");
run_bg_esti= dll.api("run_bg_esti","int(ADDR PresentImage, ADDR& ForegroundRegion, int BgEstiHandle)");
T_get_bg_esti_params= dll.api("T_get_bg_esti_params","int(struct BgEstiHandle, struct& Syspar1, struct& Syspar2, struct& GainMode, struct& Gain1, struct& Gain2, struct& AdaptMode, struct& MinDiff, struct& StatNum, struct& ConfidenceC, struct& TimeC)");
get_bg_esti_params= dll.api("get_bg_esti_params","int(int BgEstiHandle, double& Syspar1, double& Syspar2, string& GainMode, double& Gain1, double& Gain2, string& AdaptMode, double& MinDiff, int& StatNum, double& ConfidenceC, double& TimeC)");
T_set_bg_esti_params= dll.api("T_set_bg_esti_params","int(struct BgEstiHandle, struct Syspar1, struct Syspar2, struct GainMode, struct Gain1, struct Gain2, struct AdaptMode, struct MinDiff, struct StatNum, struct ConfidenceC, struct TimeC)");
set_bg_esti_params= dll.api("set_bg_esti_params","int(int BgEstiHandle, double Syspar1, double Syspar2, string GainMode, double Gain1, double Gain2, string AdaptMode, double MinDiff, int StatNum, double ConfidenceC, double TimeC)");
T_create_bg_esti= dll.api("T_create_bg_esti","int(ADDR InitializeImage, struct Syspar1, struct Syspar2, struct GainMode, struct Gain1, struct Gain2, struct AdaptMode, struct MinDiff, struct StatNum, struct ConfidenceC, struct TimeC, struct& BgEstiHandle)");
create_bg_esti= dll.api("create_bg_esti","int(ADDR InitializeImage, double Syspar1, double Syspar2, string GainMode, double Gain1, double Gain2, string AdaptMode, double MinDiff, int StatNum, double ConfidenceC, double TimeC, int& BgEstiHandle)");
T_close_all_bg_esti= dll.api("T_close_all_bg_esti","int(void)");
close_all_bg_esti= dll.api("close_all_bg_esti","int(void)");
T_control_io_channel= dll.api("T_control_io_channel","int(struct IOChannelHandle, struct ParamAction, struct ParamArgument, struct& GenParamValue)");
T_write_io_channel= dll.api("T_write_io_channel","int(struct IOChannelHandle, struct Value, struct& Status)");
T_read_io_channel= dll.api("T_read_io_channel","int(struct IOChannelHandle, struct& Value, struct& Status)");
T_set_io_channel_param= dll.api("T_set_io_channel_param","int(struct IOChannelHandle, struct GenParamName, struct GenParamValue)");
T_get_io_channel_param= dll.api("T_get_io_channel_param","int(struct IOChannelHandle, struct GenParamName, struct& GenParamValue)");
T_close_io_channel= dll.api("T_close_io_channel","int(struct IOChannelHandle)");
close_io_channel= dll.api("close_io_channel","int(int IOChannelHandle)");
T_open_io_channel= dll.api("T_open_io_channel","int(struct IODeviceHandle, struct IOChannelName, struct GenParamName, struct GenParamValue, struct& IOChannelHandle)");
T_query_io_device= dll.api("T_query_io_device","int(struct IODeviceHandle, struct IOChannelName, struct Query, struct& Result)");
T_control_io_device= dll.api("T_control_io_device","int(struct IODeviceHandle, struct Action, struct Argument, struct& Result)");
T_set_io_device_param= dll.api("T_set_io_device_param","int(struct IODeviceHandle, struct GenParamName, struct GenParamValue)");
set_io_device_param= dll.api("set_io_device_param","int(int IODeviceHandle, string GenParamName, string GenParamValue)");
T_get_io_device_param= dll.api("T_get_io_device_param","int(struct IODeviceHandle, struct GenParamName, struct& GenParamValue)");
get_io_device_param= dll.api("get_io_device_param","int(int IODeviceHandle, string GenParamName, string& GenParamValue)");
T_close_io_device= dll.api("T_close_io_device","int(struct IODeviceHandle)");
close_io_device= dll.api("close_io_device","int(int IODeviceHandle)");
T_open_io_device= dll.api("T_open_io_device","int(struct IOInterfaceName, struct IODeviceName, struct GenParamName, struct GenParamValue, struct& IODeviceHandle)");
T_control_io_interface= dll.api("T_control_io_interface","int(struct IOInterfaceName, struct Action, struct Argument, struct& Result)");
T_query_io_interface= dll.api("T_query_io_interface","int(struct IOInterfaceName, struct Query, struct& Result)");
T_get_framegrabber_param= dll.api("T_get_framegrabber_param","int(struct AcqHandle, struct Param, struct& Value)");
get_framegrabber_param= dll.api("get_framegrabber_param","int(int AcqHandle, string Param, string& Value)");
T_set_framegrabber_param= dll.api("T_set_framegrabber_param","int(struct AcqHandle, struct Param, struct Value)");
set_framegrabber_param= dll.api("set_framegrabber_param","int(int AcqHandle, string Param, string Value)");
T_get_framegrabber_callback= dll.api("T_get_framegrabber_callback","int(struct AcqHandle, struct CallbackType, struct& CallbackFunction, struct& UserContext)");
get_framegrabber_callback= dll.api("get_framegrabber_callback","int(int AcqHandle, string CallbackType, int& CallbackFunction, int& UserContext)");
T_set_framegrabber_callback= dll.api("T_set_framegrabber_callback","int(struct AcqHandle, struct CallbackType, struct CallbackFunction, struct UserContext)");
set_framegrabber_callback= dll.api("set_framegrabber_callback","int(int AcqHandle, string CallbackType, int CallbackFunction, int UserContext)");
T_grab_data_async= dll.api("T_grab_data_async","int(ADDR& Image, ADDR& Region, ADDR& Contours, struct AcqHandle, struct MaxDelay, struct& Data)");
grab_data_async= dll.api("grab_data_async","int(ADDR& Image, ADDR& Region, ADDR& Contours, int AcqHandle, double MaxDelay, string& Data)");
T_grab_data= dll.api("T_grab_data","int(ADDR& Image, ADDR& Region, ADDR& Contours, struct AcqHandle, struct& Data)");
grab_data= dll.api("grab_data","int(ADDR& Image, ADDR& Region, ADDR& Contours, int AcqHandle, string& Data)");
T_grab_image_async= dll.api("T_grab_image_async","int(ADDR& Image, struct AcqHandle, struct MaxDelay)");
grab_image_async= dll.api("grab_image_async","int(ADDR& Image, int AcqHandle, double MaxDelay)");
T_grab_image_start= dll.api("T_grab_image_start","int(struct AcqHandle, struct MaxDelay)");
grab_image_start= dll.api("grab_image_start","int(int AcqHandle, double MaxDelay)");
T_grab_image= dll.api("T_grab_image","int(ADDR& Image, struct AcqHandle)");
grab_image= dll.api("grab_image","int(ADDR& Image, int AcqHandle)");
T_info_framegrabber= dll.api("T_info_framegrabber","int(struct Name, struct Query, struct& Information, struct& ValueList)");
T_close_all_framegrabbers= dll.api("T_close_all_framegrabbers","int(void)");
close_all_framegrabbers= dll.api("close_all_framegrabbers","int(void)");
T_close_framegrabber= dll.api("T_close_framegrabber","int(struct AcqHandle)");
close_framegrabber= dll.api("close_framegrabber","int(int AcqHandle)");
T_open_framegrabber= dll.api("T_open_framegrabber","int(struct Name, struct HorizontalResolution, struct VerticalResolution, struct ImageWidth, struct ImageHeight, struct StartRow, struct StartColumn, struct Field, struct BitsPerChannel, struct ColorSpace, struct Generic, struct ExternalTrigger, struct CameraType, struct Device, struct Port, struct LineIn, struct& AcqHandle)");
open_framegrabber= dll.api("open_framegrabber","int(string Name, int HorizontalResolution, int VerticalResolution, int ImageWidth, int ImageHeight, int StartRow, int StartColumn, string Field, int BitsPerChannel, string ColorSpace, double Generic, string ExternalTrigger, string CameraType, string Device, int Port, int LineIn, int& AcqHandle)");
T_get_framegrabber_lut= dll.api("T_get_framegrabber_lut","int(struct AcqHandle, struct& ImageRed, struct& ImageGreen, struct& ImageBlue)");
T_set_framegrabber_lut= dll.api("T_set_framegrabber_lut","int(struct AcqHandle, struct ImageRed, struct ImageGreen, struct ImageBlue)");
T_add_scene_3d_label= dll.api("T_add_scene_3d_label","int(struct Scene3D, struct Text, struct ReferencePoint, struct Position, struct RelatesTo, struct& LabelIndex)");
T_remove_scene_3d_label= dll.api("T_remove_scene_3d_label","int(struct Scene3D, struct LabelIndex)");
remove_scene_3d_label= dll.api("remove_scene_3d_label","int(int Scene3D, int LabelIndex)");
T_set_scene_3d_label_param= dll.api("T_set_scene_3d_label_param","int(struct Scene3D, struct LabelIndex, struct GenParamName, struct GenParamValue)");
T_add_texture_inspection_model_image= dll.api("T_add_texture_inspection_model_image","int(ADDR Image, struct TextureInspectionModel, struct& Indices)");
add_texture_inspection_model_image= dll.api("add_texture_inspection_model_image","int(ADDR Image, int TextureInspectionModel, int& Indices)");
T_apply_texture_inspection_model= dll.api("T_apply_texture_inspection_model","int(ADDR Image, ADDR& NoveltyRegion, struct TextureInspectionModel, struct& TextureInspectionResultID)");
apply_texture_inspection_model= dll.api("apply_texture_inspection_model","int(ADDR Image, ADDR& NoveltyRegion, int TextureInspectionModel, int& TextureInspectionResultID)");
T_bilateral_filter= dll.api("T_bilateral_filter","int(ADDR Image, ADDR ImageJoint, ADDR& ImageBilateral, struct SigmaSpatial, struct SigmaRange, struct GenParamName, struct GenParamValue)");
bilateral_filter= dll.api("bilateral_filter","int(ADDR Image, ADDR ImageJoint, ADDR& ImageBilateral, double SigmaSpatial, double SigmaRange, string GenParamName, double GenParamValue)");
T_clear_ocr_class_cnn= dll.api("T_clear_ocr_class_cnn","int(struct OCRHandle)");
clear_ocr_class_cnn= dll.api("clear_ocr_class_cnn","int(int OCRHandle)");
T_clear_texture_inspection_model= dll.api("T_clear_texture_inspection_model","int(struct TextureInspectionModel)");
clear_texture_inspection_model= dll.api("clear_texture_inspection_model","int(int TextureInspectionModel)");
T_clear_texture_inspection_result= dll.api("T_clear_texture_inspection_result","int(struct TextureInspectionResultID)");
clear_texture_inspection_result= dll.api("clear_texture_inspection_result","int(int TextureInspectionResultID)");
T_convert_coordinates_image_to_window= dll.api("T_convert_coordinates_image_to_window","int(struct WindowHandle, struct RowImage, struct ColumnImage, struct& RowWindow, struct& ColumnWindow)");
convert_coordinates_image_to_window= dll.api("convert_coordinates_image_to_window","int(int WindowHandle, double RowImage, double ColumnImage, double& RowWindow, double& ColumnWindow)");
T_convert_coordinates_window_to_image= dll.api("T_convert_coordinates_window_to_image","int(struct WindowHandle, struct RowWindow, struct ColumnWindow, struct& RowImage, struct& ColumnImage)");
convert_coordinates_window_to_image= dll.api("convert_coordinates_window_to_image","int(int WindowHandle, double RowWindow, double ColumnWindow, double& RowImage, double& ColumnImage)");
T_create_texture_inspection_model= dll.api("T_create_texture_inspection_model","int(struct ModelType, struct& TextureInspectionModel)");
create_texture_inspection_model= dll.api("create_texture_inspection_model","int(string ModelType, int& TextureInspectionModel)");
T_deserialize_dual_quat= dll.api("T_deserialize_dual_quat","int(struct SerializedItemHandle, struct& DualQuaternion)");
T_deserialize_ocr_class_cnn= dll.api("T_deserialize_ocr_class_cnn","int(struct SerializedItemHandle, struct& OCRHandle)");
deserialize_ocr_class_cnn= dll.api("deserialize_ocr_class_cnn","int(int SerializedItemHandle, int& OCRHandle)");
T_deserialize_texture_inspection_model= dll.api("T_deserialize_texture_inspection_model","int(struct SerializedItemHandle, struct& TextureInspectionModel)");
deserialize_texture_inspection_model= dll.api("deserialize_texture_inspection_model","int(int SerializedItemHandle, int& TextureInspectionModel)");
T_disp_text= dll.api("T_disp_text","int(struct WindowHandle, struct String, struct CoordSystem, struct Row, struct Column, struct Color, struct GenParamName, struct GenParamValue)");
T_do_ocr_multi_class_cnn= dll.api("T_do_ocr_multi_class_cnn","int(ADDR Character, ADDR Image, struct OCRHandle, struct& Class, struct& Confidence)");
do_ocr_multi_class_cnn= dll.api("do_ocr_multi_class_cnn","int(ADDR Character, ADDR Image, int OCRHandle, string& Class, double& Confidence)");
T_do_ocr_single_class_cnn= dll.api("T_do_ocr_single_class_cnn","int(ADDR Character, ADDR Image, struct OCRHandle, struct Num, struct& Class, struct& Confidence)");
T_do_ocr_word_cnn= dll.api("T_do_ocr_word_cnn","int(ADDR Character, ADDR Image, struct OCRHandle, struct Expression, struct NumAlternatives, struct NumCorrections, struct& Class, struct& Confidence, struct& Word, struct& Score)");
do_ocr_word_cnn= dll.api("do_ocr_word_cnn","int(ADDR Character, ADDR Image, int OCRHandle, string Expression, int NumAlternatives, int NumCorrections, string& Class, double& Confidence, string& Word, double& Score)");
T_dual_quat_compose= dll.api("T_dual_quat_compose","int(struct DualQuaternionLeft, struct DualQuaternionRight, struct& DualQuaternionComposed)");
T_dual_quat_conjugate= dll.api("T_dual_quat_conjugate","int(struct DualQuaternion, struct& DualQuaternionConjugate)");
T_dual_quat_interpolate= dll.api("T_dual_quat_interpolate","int(struct DualQuaternionStart, struct DualQuaternionEnd, struct InterpPos, struct& DualQuaternionInterpolated)");
T_dual_quat_normalize= dll.api("T_dual_quat_normalize","int(struct DualQuaternion, struct& DualQuaternionNormalized)");
T_dual_quat_to_hom_mat3d= dll.api("T_dual_quat_to_hom_mat3d","int(struct DualQuaternion, struct& HomMat3D)");
T_dual_quat_to_pose= dll.api("T_dual_quat_to_pose","int(struct DualQuaternion, struct& Pose)");
T_dual_quat_to_screw= dll.api("T_dual_quat_to_screw","int(struct DualQuaternion, struct ScrewFormat, struct& AxisDirectionX, struct& AxisDirectionY, struct& AxisDirectionZ, struct& AxisMomentOrPointX, struct& AxisMomentOrPointY, struct& AxisMomentOrPointZ, struct& Rotation, struct& Translation)");
T_dual_quat_trans_line_3d= dll.api("T_dual_quat_trans_line_3d","int(struct DualQuaternion, struct LineFormat, struct LineDirectionX, struct LineDirectionY, struct LineDirectionZ, struct LineMomentOrPointX, struct LineMomentOrPointY, struct LineMomentOrPointZ, struct& TransLineDirectionX, struct& TransLineDirectionY, struct& TransLineDirectionZ, struct& TransLineMomentOrPointX, struct& TransLineMomentOrPointY, struct& TransLineMomentOrPointZ)");
T_edges_object_model_3d= dll.api("T_edges_object_model_3d","int(struct ObjectModel3D, struct MinAmplitude, struct GenParamName, struct GenParamValue, struct& ObjectModel3DEdges)");
edges_object_model_3d= dll.api("edges_object_model_3d","int(int ObjectModel3D, double MinAmplitude, string GenParamName, double GenParamValue, int& ObjectModel3DEdges)");
T_find_ncc_models= dll.api("T_find_ncc_models","int(ADDR Image, struct ModelIDs, struct AngleStart, struct AngleExtent, struct MinScore, struct NumMatches, struct MaxOverlap, struct SubPixel, struct NumLevels, struct& Row, struct& Column, struct& Angle, struct& Score, struct& Model)");
T_find_surface_model_image= dll.api("T_find_surface_model_image","int(ADDR Image, struct SurfaceModelID, struct ObjectModel3D, struct RelSamplingDistance, struct KeyPointFraction, struct MinScore, struct ReturnResultHandle, struct GenParamName, struct GenParamValue, struct& Pose, struct& Score, struct& SurfaceMatchingResultID)");
T_flush_buffer= dll.api("T_flush_buffer","int(struct WindowHandle)");
flush_buffer= dll.api("flush_buffer","int(int WindowHandle)");
T_get_ncc_model_region= dll.api("T_get_ncc_model_region","int(ADDR& ModelRegion, struct ModelID)");
get_ncc_model_region= dll.api("get_ncc_model_region","int(ADDR& ModelRegion, int ModelID)");
T_get_params_ocr_class_cnn= dll.api("T_get_params_ocr_class_cnn","int(struct OCRHandle, struct GenParamNames, struct& GenParamValues)");
get_params_ocr_class_cnn= dll.api("get_params_ocr_class_cnn","int(int OCRHandle, string GenParamNames, int& GenParamValues)");
T_get_rgba= dll.api("T_get_rgba","int(struct WindowHandle, struct& Red, struct& Green, struct& Blue, struct& Alpha)");
T_get_stereo_model_object_model_3d= dll.api("T_get_stereo_model_object_model_3d","int(struct StereoModelID, struct GenParamName, struct& ObjectModel3D)");
get_stereo_model_object_model_3d= dll.api("get_stereo_model_object_model_3d","int(int StereoModelID, string GenParamName, int& ObjectModel3D)");
T_get_texture_inspection_model_image= dll.api("T_get_texture_inspection_model_image","int(ADDR& ImageOut, struct TextureInspectionModel)");
get_texture_inspection_model_image= dll.api("get_texture_inspection_model_image","int(ADDR& ImageOut, int TextureInspectionModel)");
T_get_texture_inspection_model_param= dll.api("T_get_texture_inspection_model_param","int(struct TextureInspectionModel, struct GenParamName, struct& GenParamValue)");
get_texture_inspection_model_param= dll.api("get_texture_inspection_model_param","int(int TextureInspectionModel, string GenParamName, int& GenParamValue)");
T_get_texture_inspection_result_object= dll.api("T_get_texture_inspection_result_object","int(ADDR& Object, struct TextureInspectionResultID, struct ResultName)");
get_texture_inspection_result_object= dll.api("get_texture_inspection_result_object","int(ADDR& Object, int TextureInspectionResultID, string ResultName)");
T_guided_filter= dll.api("T_guided_filter","int(ADDR Image, ADDR ImageGuide, ADDR& ImageGuided, struct Radius, struct Amplitude)");
guided_filter= dll.api("guided_filter","int(ADDR Image, ADDR ImageGuide, ADDR& ImageGuided, int Radius, double Amplitude)");
T_interleave_channels= dll.api("T_interleave_channels","int(ADDR MultichannelImage, ADDR& InterleavedImage, struct PixelFormat, struct RowBytes, struct Alpha)");
interleave_channels= dll.api("interleave_channels","int(ADDR MultichannelImage, ADDR& InterleavedImage, string PixelFormat, string RowBytes, int Alpha)");
T_pose_to_dual_quat= dll.api("T_pose_to_dual_quat","int(struct Pose, struct& DualQuaternion)");
T_query_params_ocr_class_cnn= dll.api("T_query_params_ocr_class_cnn","int(struct OCRHandle, struct& GenParamNames)");
query_params_ocr_class_cnn= dll.api("query_params_ocr_class_cnn","int(int OCRHandle, string& GenParamNames)");
T_read_ocr_class_cnn= dll.api("T_read_ocr_class_cnn","int(struct FileName, struct& OCRHandle)");
read_ocr_class_cnn= dll.api("read_ocr_class_cnn","int(string FileName, int& OCRHandle)");
T_read_texture_inspection_model= dll.api("T_read_texture_inspection_model","int(struct FileName, struct& TextureInspectionModel)");
read_texture_inspection_model= dll.api("read_texture_inspection_model","int(string FileName, int& TextureInspectionModel)");
T_refine_surface_model_pose_image= dll.api("T_refine_surface_model_pose_image","int(ADDR Image, struct SurfaceModelID, struct ObjectModel3D, struct InitialPose, struct MinScore, struct ReturnResultHandle, struct GenParamName, struct GenParamValue, struct& Pose, struct& Score, struct& SurfaceMatchingResultID)");
T_remove_texture_inspection_model_image= dll.api("T_remove_texture_inspection_model_image","int(struct TextureInspectionModel, struct Indices, struct& RemainingIndices)");
T_screw_to_dual_quat= dll.api("T_screw_to_dual_quat","int(struct ScrewFormat, struct AxisDirectionX, struct AxisDirectionY, struct AxisDirectionZ, struct AxisMomentOrPointX, struct AxisMomentOrPointY, struct AxisMomentOrPointZ, struct Rotation, struct Translation, struct& DualQuaternion)");
T_segment_image_mser= dll.api("T_segment_image_mser","int(ADDR Image, ADDR& MSERDark, ADDR& MSERLight, struct Polarity, struct MinArea, struct MaxArea, struct Delta, struct GenParamName, struct GenParamValue)");
T_send_mouse_double_click_event= dll.api("T_send_mouse_double_click_event","int(struct WindowHandle, struct Row, struct Column, struct Button, struct& Processed)");
send_mouse_double_click_event= dll.api("send_mouse_double_click_event","int(int WindowHandle, int Row, int Column, int Button, string& Processed)");
T_send_mouse_down_event= dll.api("T_send_mouse_down_event","int(struct WindowHandle, struct Row, struct Column, struct Button, struct& Processed)");
send_mouse_down_event= dll.api("send_mouse_down_event","int(int WindowHandle, int Row, int Column, int Button, string& Processed)");
T_send_mouse_drag_event= dll.api("T_send_mouse_drag_event","int(struct WindowHandle, struct Row, struct Column, struct Button, struct& Processed)");
send_mouse_drag_event= dll.api("send_mouse_drag_event","int(int WindowHandle, int Row, int Column, int Button, string& Processed)");
T_send_mouse_up_event= dll.api("T_send_mouse_up_event","int(struct WindowHandle, struct Row, struct Column, struct Button, struct& Processed)");
send_mouse_up_event= dll.api("send_mouse_up_event","int(int WindowHandle, int Row, int Column, int Button, string& Processed)");
T_serialize_dual_quat= dll.api("T_serialize_dual_quat","int(struct DualQuaternion, struct& SerializedItemHandle)");
T_serialize_ocr_class_cnn= dll.api("T_serialize_ocr_class_cnn","int(struct OCRHandle, struct& SerializedItemHandle)");
serialize_ocr_class_cnn= dll.api("serialize_ocr_class_cnn","int(int OCRHandle, int& SerializedItemHandle)");
T_serialize_texture_inspection_model= dll.api("T_serialize_texture_inspection_model","int(struct TextureInspectionModel, struct& SerializedItemHandle)");
serialize_texture_inspection_model= dll.api("serialize_texture_inspection_model","int(int TextureInspectionModel, int& SerializedItemHandle)");
T_set_content_update_callback= dll.api("T_set_content_update_callback","int(struct WindowHandle, struct CallbackFunction, struct CallbackContext)");
set_content_update_callback= dll.api("set_content_update_callback","int(int WindowHandle, int CallbackFunction, int CallbackContext)");
T_set_rgba= dll.api("T_set_rgba","int(struct WindowHandle, struct Red, struct Green, struct Blue, struct Alpha)");
set_rgba= dll.api("set_rgba","int(int WindowHandle, int Red, int Green, int Blue, int Alpha)");
T_set_surface_model_param= dll.api("T_set_surface_model_param","int(struct SurfaceModelID, struct GenParamName, struct GenParamValue)");
set_surface_model_param= dll.api("set_surface_model_param","int(int SurfaceModelID, string GenParamName, double GenParamValue)");
T_set_texture_inspection_model_param= dll.api("T_set_texture_inspection_model_param","int(struct TextureInspectionModel, struct GenParamName, struct GenParamValue)");
set_texture_inspection_model_param= dll.api("set_texture_inspection_model_param","int(int TextureInspectionModel, string GenParamName, int GenParamValue)");
T_train_texture_inspection_model= dll.api("T_train_texture_inspection_model","int(struct TextureInspectionModel)");
train_texture_inspection_model= dll.api("train_texture_inspection_model","int(int TextureInspectionModel)");
T_write_texture_inspection_model= dll.api("T_write_texture_inspection_model","int(struct TextureInspectionModel, struct FileName)");
write_texture_inspection_model= dll.api("write_texture_inspection_model","int(int TextureInspectionModel, string FileName)");
