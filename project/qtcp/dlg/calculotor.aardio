//简单计算器
import win.ui;
/*DSG{{*/
var winform = win.form(text="我的计算器";right=299;bottom=207;border="dialog frame";max=false)
winform.add(
button0={cls="button";text="0";left=34;top=158;right=65;bottom=182;z=12};
button1={cls="button";text="1";left=34;top=56;right=65;bottom=80;z=3};
button2={cls="button";text="2";left=79;top=56;right=110;bottom=80;z=5};
button3={cls="button";text="3";left=128;top=56;right=159;bottom=80;z=8};
button4={cls="button";text="4";left=34;top=89;right=65;bottom=113;z=4};
button5={cls="button";text="5";left=79;top=89;right=110;bottom=113;z=7};
button6={cls="button";text="6";left=128;top=89;right=159;bottom=113;z=11};
button7={cls="button";text="7";left=34;top=122;right=65;bottom=146;z=6};
button8={cls="button";text="8";left=79;top=122;right=110;bottom=146;z=10};
button9={cls="button";text="9";left=128;top=122;right=159;bottom=146;z=9};
buttonAdd={cls="button";text="+";left=179;top=56;right=210;bottom=80;z=14};
buttonClear={cls="button";text="C";left=225;top=56;right=256;bottom=80;z=18};
buttonClearError={cls="button";text="CE";left=226;top=88;right=257;bottom=112;z=19};
buttonDiv={cls="button";text="/";left=180;top=156;right=211;bottom=182;z=16};
buttonDot={cls="button";text=".";left=80;top=158;right=110;bottom=182;z=17};
buttonEval={cls="button";text="=";left=128;top=158;right=159;bottom=182;z=1};
buttonMul={cls="button";text="*";left=179;top=122;right=210;bottom=146;z=15};
buttonSub={cls="button";text="-";left=179;top=89;right=210;bottom=113;z=13};
edit={cls="edit";text="0";left=35;top=24;right=256;bottom=49;edge=1;z=2}
)
/*}}*/

import debug;
import time;
import console;

// 字符串转中缀表达式
stringToInfixExpression = function(str/* type.string */){
	//debug.debug();
	var tempString = "";
    var infixExpression = ..table.array();
    for(i=1;#str;1){
    	var tmpChar = ..string.pack(str[i]);
    	
    	// 若 数字 和小数点
    	if( ..string.indexOf(".0123456789",  tmpChar ) != null  ) {
    	    tempString = tempString ++ tmpChar;
    	}
    	
    	if( ..string.indexOf("+-*/()",  tmpChar ) != null  ) {
    	    if(#tempString) {
    	        ..table.push(infixExpression, tempString);
    	    }
    	    tempString = "";
    	     ..table.push(infixExpression, ..string.slice(str , i, i ) );
    	}
    	
    }
    ..table.push(infixExpression, tempString);
    return infixExpression;
}   

// console.dump(stringToInfixExpression("2.2+(66*22)-7"));

// 获取运算符优先级
getPriority = function(op) {
    var priority = 0;
    if(op == "+" or op == "-") {
        priority = 1;
    } elseif(op == "*" or op == "/"){
        priority = 2;
    } else {
        priority = 0;
    }
    return priority;
}

// 中缀表达式转后缀表达式
infixExpressionToPostfixExpression = function(infixExpression /* table.array */){
	var postfixExpression = ..table.array();
	
	var stack = {};
	for(i=1;#infixExpression;1){
		var str = infixExpression[i];
		if( ..string.indexOf("+-*/",  str ) != null  ) {
    	    if(#stack == 0) {
    	        ..table.push(stack, str);
    	    } elseif( getPriority(str) > getPriority(stack[#stack]) ){
    	        ..table.push(stack, str);
    	    } else {
    	        while(true){
    	            if(#stack == 0) {
                         ..table.push(stack, str);
    	                 break;
    	        	} elseif (getPriority(str) > getPriority(stack[#stack])) {
    	        	    ..table.push(stack, str);
    	                 break;
    	        	}
    	        	..table.push(postfixExpression, stack[#stack]);
    	        	..table.pop(stack);
    	        }
    	    }
    	} elseif(str == "(") {
    	    ..table.push(stack, str);
    	} elseif(str == "(") {
    	    while(true){
    	        if(stack[#stack] == "(") {
    	            ..table.pop(stack);
    	            break;
    	        }
    	        ..table.push(postfixExpression, stack[#stack]);
    	        ..table.pop(stack);
    	    }
    	    
    	} else {
    	    ..table.push(postfixExpression, str);
    	
    	}
    	
	}
	
	while (#stack > 0) {
	    ..table.push(postfixExpression, stack[#stack]);
    	..table.pop(stack);
	}
	
	return postfixExpression;
}

 in1 = (stringToInfixExpression("2.2+(66*22)-7"));
console.dump(in1)
 in2 = ( infixExpressionToPostfixExpression(in1)  );
console.dump(in2)


winform.show();
win.loopMessage();
