import win.ui;
/*DSG{{*/
var winform = win.form(text="aardio form";right=99;bottom=149;border="none";max=false;min=false;parent=...)
winform.add(
button={cls="button";text="Button";left=10;top=14;right=90;bottom=46;z=1};
edit={cls="edit";left=5;top=114;right=93;bottom=136;edge=1;z=2}
)
/*}}*/

import fsys.log;
import config;

// hook错误提示并写入日志文件
global.onError = function( err,over ){ 
    if(!over){
        import debug;
        var stack = debug.traceback(,"调用栈",3);
        err =  ..string.concat(err,'\n',stack);
    }
    fsys.log.print( ..string.replace(err,"![\r\n]\n",'\r\n')  ); //CGI级别错误写入日志
    //return err;
}

// 默认配置文件位置 
import fsys.config;
global.winformConfig = fsys.config(
    fsys.getSpecial( 0x1c /*_CSIDL_LOCAL_APPDATA*/ , "ankiplus")
);


// 悬浮窗跟随鼠标拖动
winform.onMouseDown = function(wParam,lParam){
    winform.hitCaption();
}


// 悬浮窗右键菜单
import win.ui.menu;
winform.popmenu=win.ui.popmenu(winform);
winform.popmenu.add('打开',function(id){ //添加了一个打开主界面的菜单
    winform.show();
})
winform.popmenu.add('退出',function(id){ //添加了一个退出程序的菜单
    winform.close()
})

winform.wndproc = function(hwnd, message, wParam, lParam) {
    select(message) {
    case 0x205
        /*_WM_RBUTTONUP*/
        {
            {
                var x, y = win.getMessagePos(); //获得鼠标位置
                winform.popmenu.popup(x, y, true) //popup弹出坐标，第三个参数如上
                //return;
            }
        }
    case 0xACCF 
        {
            if( lParam = 0x205/*_WM_RBUTTONUP*/ ) {
                win.setForeground(winform.hwnd)
 				winform.popmenu.popup(x, y, true);
 				//return;
			}    
        }
    }
}



import winex;
import mouse;
import mouse.hook;
global.hk = mouse.hook();
// 键盘钩子记录最后一次按键位置
global.lastLButtonUpHwnd = 0;
global.hk.proc = function(msg,x,y){
    select(msg) {
        case 0x202/*_WM_LBUTTONUP*/{
            //winform.richedit.print("左键弹起",x,y)
            // http://bbs.aardio.com/forum.php?mod=viewthread&tid=11800
            var hwndTarget = 0;
            hwndTarget = winex.fromPointReal( mouse.getPos() ) : winex.fromPoint( mouse.getPos() );
            global.lastLButtonUpHwnd = hwndTarget;
            fsys.log.print("hwndTarget:" + tostring(hwndTarget, 16));
        }
    }   
}

global.frmChild = winform.loadForm("/dlg/richwin.aardio");
frmChild.show(false);

import key;
winform.button.oncommand = function(id,event){
    // 复制选中文本
    if(global.lastLButtonUpHwnd) {
        if(global.lastLButtonUpHwnd == winform.hwnd) {
            winform.msgBox("请使用热键操作");
            return;
        }
        
        //1. 第一种方式 发送WM_COPY
        //::SendMessageInt( global.lastLButtonUpHwnd, 0x0301/*_WM_COPY*/ , 0, 0);
        //fsys.log.print("SendMessageInt:" + tostring(global.lastLButtonUpHwnd, 16));
        
        //2. 模拟按键 CTRL + C
        key.pressEx( "CTRL", "C" )
        fsys.log.print("模拟复制按键 CTRL + C")
    }
    
    //fsys.log.print("click button");
	//error("haha");    
	//fsys.log.print(config.__appName);
	//var frmChild = winform.loadForm("/dlg/richwin.aardio");
	//frmChild.show();
	//frmChild.richedit.text = "";
	frmChild.richedit.text = ""
	frmChild.show(true);
	
	frmChild.richedit.paste();
	
	// 显示复制内容 连续显示处理
	if(frmChild.timeoutId == -1) {
	    frmChild.timeoutId = frmChild.setTimeout(
    		function(){
        		frmChild.show(false);
        		frmChild.timeoutId = -1;
    		}
    		,1500
        )
	} else {
	    frmChild.clearTimeout(frmChild.timeoutId);
	    frmChild.timeoutId = frmChild.setTimeout(
    		function(){
        		frmChild.show(false);
        		frmChild.timeoutId = -1;
    		}
    		,1500
        )
	}
	
	
	
	
}


var hkid = winform.reghotkey(
    function(id,mod,vk){
        fsys.log.print("ctrl + e");
        winform.button.oncommand();
    } 
,0x2/*_MOD_CONTROL*/,'E'#);


//  调整为左上角
//var screenX,screenY = win.getScreen();
//win.setPos(winform.hwnd, screenX - 200, 0 + 100, winform.width, winform.height);



/**
winform.invoke(
    function() {
        //while(true) 
        {
            
            for(i=1;20 ){
                winform.edit.text = tostring(i);
                //io.print("窗体还是可以响应你的控制,我都不需要考虑什么win.delay()的问题" )
                sleep(1000)
            }
            
            /*
            var tm = time.now();
            tm.format = "%H:%M:%S";
            tm.locale = "chs";
            //console.log("时间格式化为字符串",tostring(tm));
            wm.edit.text = tostring(tm.locale);
            console.log(winform.edit.text)
            // winform.static.hide = false;
            wm.redraw();
            sleep(800);
*/
            
        }
    }
);
**/
import inet.http;
// 耗时操作
var testApiConnect = function() {
    
    var http = inet.http();
    var ankiapi = http.get("http://127.0.0.1:8765/");
    if (ankiapi) and (-1 != string.indexOf(ankiapi, "AnkiConnect")) {
        return true;
    } else {
        return false;
    }
}



/*
import thread;
import time;

thread.invoke(
        function(winform){
            while(true) {
                var tm = time.now();
            	tm.format = "%H:%M:%S";
            	tm.locale = "chs";
                //winform.edit.print( time.tick(),"线程ID:",thread.getId() );
                winform.edit.text = tostring(tm);
                
                sleep(1000);
            }
    },winform
)
*/


import thread;
import time;

thread.invoke(
        function(winform){
            import inet.http;
            var refresh = 0;
            while(true) {
                    var result = false;
                    
                    var http = inet.http();
            		http.setTimeouts (
    					500,//连接超时
    					500,//请求超时
    					500 //接收超时
					)
					http.disableCache();
                    
    				var ankiapi = http.get("http://127.0.0.1:8765/");
    				http.close();
    				
    			    if (ankiapi) and (-1 != string.indexOf(ankiapi, "AnkiConnect")) {
        				result = true;
    				} else {
        				result = false;
    				}
    				
                if(result == true) { 
                    //winform.edit.text = "连接成功" + tostring(refresh);
                    winform.edit.text = "连接成功";
                } else { 
                	//winform.edit.text = "连接断开" + tostring(refresh);
                	winform.edit.text = "连接断开";
                }
                refresh = refresh + 1;
                sleep(100);
            }
    },winform
)

/*
import thread;
import time;

thread.invoke(
        function(winform){
            var i = 0;
            while(true) {
                winform.edit.text = tostring(i);
                i = i + 1;
                sleep(2000);
            }
    },winform
)
*/

import win.util.tray;
winform.tray = win.util.tray(winform);

winform.onDestroy = function(){
    // 清除任务栏图标
	if(winform.tray){
		winform.tray.delete()
		winform.tray = nil;
	}
	
	// 保存悬浮窗位置
	var x, y = win.getPos(winform.hwnd);
	global.winformConfig.winformSetting.winformX = x;
    global.winformConfig.winformSetting.winformY = y;
	global.winformConfig.saveAll();
}

//win.modifyStyle(winform.hwnd, , );
//winform.modifyStyle(,0x800000/*_WS_BORDER*/|0xC00000/*_WS_CAPTION*/);

var newX = global.winformConfig.winformSetting.winformX;
var newY = global.winformConfig.winformSetting.winformY;
if(newX and newY) {
    //调整为左上角
    win.setPos(winform.hwnd, newX, newY);
}  else {
    var screenX,screenY = win.getScreen();
    win.setPos(winform.hwnd, screenX - 200, 0 + 100, winform.width, winform.height);
}

win.setTopmost(winform.hwnd);

// tParam.style |= 0x40000/*_WS_SIZEBOX*/; 
//var preStyle = win.getStyle(mainForm.hwnd);
//win.modifyStyle(winform.hwnd, , 0x40000/*_WS_SIZEBOX*/);
//_WS_THICKFRAME = 0x40000
//win.modifyStyle(winform.hwnd, 0xC00000, 0x40000/*_WS_THICKFRAME*/);
//win.modifyStyle(

/**
var preStyle = win.getStyle(winform.hwnd);
win.msgbox(string.format("0x%x", preStyle))
win.modifyStyle(winform.hwnd, 0x80000, 0x40000/*_WS_THICKFRAME*/);
preStyle = win.getStyle(winform.hwnd);
win.msgbox(string.format("0x%x", preStyle))
**/


winform.show() 
win.loopMessage();