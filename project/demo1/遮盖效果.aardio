import win.ui;
/*DSG{{*/
var winform = win.form(text="aardio form";right=99;bottom=149;border="none";max=false;min=false;parent=...)
winform.add()
/*}}*/

import fsys.log;
import config;

// hook错误提示并写入日志文件
global.onError = function( err,over ){ 
    if(!over){
        import debug;
        var stack = debug.traceback(,"调用栈",3);
        err =  ..string.concat(err,'\n',stack);
    }
    fsys.log.print( ..string.replace(err,"![\r\n]\n",'\r\n')  ); //CGI级别错误写入日志
    //return err;
}

// 默认配置文件位置 
import fsys.config;
global.winformConfig = fsys.config(
    fsys.getSpecial( 0x1c /*_CSIDL_LOCAL_APPDATA*/ , "aardioplus")
);


// 悬浮窗跟随鼠标拖动
winform.onMouseDown = function(wParam,lParam){
    winform.hitCaption();
}

winform.setting = function(){
    var settingFormSource =
/****
		import win.ui;
		/*DSG{{*/
		var winform = win.form(text="设置";right=247;bottom=127;border="thin";exmode="none";max=false;min=false;mode="popup")
		winform.add(
		button={cls="button";text="应用";left=152;top=88;right=216;bottom=112;z=7};
		edit={cls="edit";left=40;top=16;right=96;bottom=40;edge=1;z=1};
		edit2={cls="edit";left=160;top=16;right=216;bottom=40;edge=1;z=2};
		edit3={cls="edit";left=120;top=56;right=216;bottom=80;edge=1;z=3};
		static={cls="static";text="长";left=16;top=16;right=48;bottom=40;center=1;transparent=1;z=4};
		static2={cls="static";text="宽";left=136;top=16;right=168;bottom=40;center=1;transparent=1;z=5};
		static3={cls="static";text="颜色（十进制）";left=16;top=56;right=104;bottom=80;center=1;transparent=1;z=6}
		)
		/*}}*/
		
		var args = {...};//接收全部参数
		var parent = table.shift(args);
		
		/*
		console.log("父窗体",parent);
		console.log("其它参数")
		console.varDump(args)
		*/
		
		if(args[1]) {
    		winform.edit.text = args[1];
		}
		if(args[2]) {
    		winform.edit2.text = args[2];
		}
		if(args[3]) {
    		winform.edit3.text = args[3];
		}
		
		winform.button.oncommand = function(id,event){
			//检查输入合法
			var h = tonumber(winform.edit.text);
			var w = tonumber(winform.edit2.text);
			var color = tonumber(winform.edit3.text);
			var retval = {h, w, color};
			winform.endModal(retval);
		}
		
		winform.show();
		win.loopMessage();
****/
    var x,y,cx,cy  = winform.getPos();
	var settingForm,wb = winform.loadForm(settingFormSource, cx, cy, winform.bgcolor);
	//return child,wb ;
	var retval = settingForm.doModal(winform.hwnd); 
	//winform.msgbox(retval)
	
	if(retval[1] > 0 and retval[2] > 0) {
	    win.setPos(winform.hwnd,x,y,retval[1],retval[2]);
	}
	if(retval[3] > 0) {
	    winform.bgcolor = retval[3];
	}
}


// 悬浮窗右键菜单
import win.ui.menu;
winform.popmenu=win.ui.popmenu(winform);
winform.popmenu.add('打开',function(id){ //添加了一个打开主界面的菜单
win.msgbox(winform.bgcolor);
    winform.show();
})
winform.popmenu.add('设置',function(id){ //添加了一个设置程序的菜单
    winform.setting();
})
winform.popmenu.add('退出',function(id){ //添加了一个退出程序的菜单
    winform.close()
})

winform.wndproc = function(hwnd, message, wParam, lParam) {
    select(message) {
    case 0x205
        /*_WM_RBUTTONUP*/
        {
            {
                var x, y = win.getMessagePos(); //获得鼠标位置
                winform.popmenu.popup(x, y, true) //popup弹出坐标，第三个参数如上
                //return;
            }
        }
    case 0xACCF 
        {
            if( lParam = 0x205/*_WM_RBUTTONUP*/ ) {
                win.setForeground(winform.hwnd)
 				winform.popmenu.popup(x, y, true);
 				//return;
			}    
        }
    }
}


winform.onDestroy = function(){
	// 保存悬浮窗位置
	var x, y, cx, cy = win.getPos(winform.hwnd);
	global.winformConfig.winformSetting.winformX = x;
    global.winformConfig.winformSetting.winformY = y;
    global.winformConfig.winformSetting.winformCX = cx;
    global.winformConfig.winformSetting.winformCY = cy;
	global.winformConfig.saveAll();
}

//win.modifyStyle(winform.hwnd, , );
//winform.modifyStyle(,0x800000/*_WS_BORDER*/|0xC00000/*_WS_CAPTION*/);

// 打开时更新窗口位置
var newX = global.winformConfig.winformSetting.winformX;
var newY = global.winformConfig.winformSetting.winformY;
var newCX = global.winformConfig.winformSetting.winformCX;
var newCY = global.winformConfig.winformSetting.winformCY;
if(newX and newY) {
    //调整为左上角
    win.setPos(winform.hwnd, newX, newY, newCX, newCY);
}  else {
    var screenX,screenY = win.getScreen();
    win.setPos(winform.hwnd, screenX - 200, 0 + 100, winform.width, winform.height);
}

win.setTopmost(winform.hwnd);

// 貌似 _WS_SIZEBOX（支持缩放） 和 

// tParam.style |= 0x40000/*_WS_SIZEBOX*/; 
//var preStyle = win.getStyle(mainForm.hwnd);
//win.modifyStyle(winform.hwnd, , 0x40000/*_WS_SIZEBOX*/);
//_WS_THICKFRAME = 0x40000
//win.modifyStyle(winform.hwnd, 0xC00000, 0x40000/*_WS_THICKFRAME*/);
//win.modifyStyle(

/**
var preStyle = win.getStyle(winform.hwnd);
win.msgbox(string.format("0x%x", preStyle))
win.modifyStyle(winform.hwnd, 0x80000, 0x40000/*_WS_THICKFRAME*/);
preStyle = win.getStyle(winform.hwnd);
win.msgbox(string.format("0x%x", preStyle))
**/


winform.show() 
win.loopMessage();