import win.ui;
/*DSG{{*/
var winform = win.form(text="sunny网络中间件";right=759;bottom=469;exmode="none";mode="popup")
winform.add(
button={cls="button";text="GC";left=648;top=408;right=752;bottom=448;z=2};
edit={cls="edit";left=8;top=8;right=752;bottom=400;autohscroll=false;edge=1;multiline=1;z=1}
)
/*}}*/

import console;
import debug;
import sunny;
import thread.command;

var l = thread.command();
thread.set("_uuid", tostring((l.hwnd)) );
l.log = function(...){
	//import console;
	var t = ..time();
    t.format = "[%Y-%m-%d %H:%M:%S] ";
    str = tostring(t) + " ";
    winform.edit.print(str, ...);
}

//console.open();

global.onError = function( err,over ){ 
    if(!over){
        import debug;
        var stack = debug.traceback(,"调用栈",3);//获取调用栈信息,此函数当前调用级别为1,调用onError的默认错误处理程序调用级别为2,真正发生错误的代码调用级别为3
        debug.log.write(stack,'\n',err)
    }
    
    if( _STUDIO_INVOKED ) return err; //在开发环境中仍然返回错误信息,不返回字符串类型的错误信息则不会显示
}

/*
var httpCallBack = function(MessageId, Type, ptr_mod, ptr_Url, UniqueId, IsPreReport, err){
    var msgId, typeId, mod, url;
    try{
    	msgId = MessageId;
    	typeId = Type;
    }
    //publish("httpCallBack", tostring(msgId));
    console.log( msgId );
}
*/

httpCallBack2 = function(MessageId, Type, ptr_mod, ptr_Url, UniqueId, IsPreReport, err){
	import thread.command;
	var uuid = thread.get("_uuid");
	var l = thread.command.bind(tonumber(uuid));
	
	var msgId, typeId, mod, url;
    try{
    	msgId = MessageId;
    	typeId = Type;
    	mod = raw.buffer(512);
    	url = raw.buffer(512);
    	..raw.copy(mod, ptr_mod, 512);
    	..raw.copy(url, ptr_Url, 512);
    	mod = ..raw.str(mod)
    	url = ..raw.str(url)
    }
	thread.lock("临界区名称");
	l.log("msgId:", msgId, "typeId", typeId, "mod", mod, "url", url);
	thread.unlock("临界区名称");
}


subscribe("httpCallBack", function(...){
	winform.edit.print( ... );
} )

winform.onDestroy = function(){
    
}

httpCallBack_c = ..thread.tocdecl(httpCallBack2,
    "void(int, int, pointer, pointer, int, int, pointer)", 
)

port = 8341;
s = sunny(port, httpCallBack_c);
l.log("sunny snift start","port:", port);

winform.button.oncommand = function(id,event){
	collectgarbage("collect");
}

winform.show();
win.loopMessage();