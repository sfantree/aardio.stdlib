/*
使用import xcgui; 替换原来的 import win.ui;
修改标准库的 win.form 指向 xcgui.window, 并保留 win.form的所有功能。
在窗体设计器上添加自定义控件，类名修改为 "xc" + "炫彩控件类名",
例如 xcgui.ctrl.listview, 类名为 "xclistview"
*/
import xcgui;
/*DSG{{*/
var winform = win.form(text="aardio form";right=759;bottom=469;bgcolor=15245824)
winform.add(
closebutton={cls="xcclosebutton";text="r";left=725;top=2;right=749;bottom=28;dr=1;dt=1;font=LOGFONT(name='Marlett');transparent=1;z=1};
static={cls="xctext";text="   ";left=27;top=12;right=693;bottom=31;dl=1;dr=1;dt=1;z=3};
xcbutton={cls="xcbutton";left=534;top=22;right=648;bottom=58;bkBottom=7;bkImage="\控件使用\image\button_leave.png";bkLeft=11;bkRight=11;bkTop=6;db=1;dl=1;dr=1;dt=1;transparent=1;z=2}
)
/*}}*/

/*
指定各种交互状态下变换的图像，所有可用的状态参考 xcgui.state库源码。
在下面可以指定图像文件，也可以指定背景颜色（RGB数值，最高位为透明度）
*/
winform.xcbutton.skin(
	background = { 
		hover = "\控件使用\image\button_hover.png";
		active = "\控件使用\image\button_down.png";
		leave = "\控件使用\image\button_leave.png"; 
	}
)

/*
直接双击控件，或在编辑器中输入  winform.xcbutton.onClick并回车生成下面的代码。
点击按钮时触发下面的函数：
*/
winform.xcbutton.on("click",function(handled){
	winform.static.text = "点击按钮";
	winform.static.redraw();
})

/*
所有控件消息都会回调下面的函数，可以注册多个消息回调函数,
这个函数相当于传统控件中的 winform.button.wndproc 回调函数（区别是没有hwnd窗口句柄参数,消息ID不是数值而是字符串 ）
*/
winform.xcbutton.on("message",function(message,wParam,lParam){
	if( message == "自定义消息名称" ) return 123; //结束本次事件
})

var ret = winform.xcbutton.send("自定义消息名称",wParam,lParam);
winform.msgbox( ret, "自定义消息名称返回值:" )

winform.show();
win.loopMessage();
