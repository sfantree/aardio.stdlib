/***intellisense()
onMouseEnter = @onMouseEnter = function( scTarget,scOwner,x,y,scMouseParams ) {\n	__\n}
onMouseLeave = @onMouseLeave = function( scTarget,scOwner,x,y,scMouseParams ) {\n	__\n}
onMouseMove = @onMouseMove = function( scTarget,scOwner,x,y,scMouseParams ) {\n	__\n}
onMouseUp = @onMouseUp = function( scTarget,scOwner,x,y,scMouseParams ) {\n	__\n}
onMouseDown = @onMouseDown = function( scTarget,scOwner,x,y,scMouseParams ) {\n	__\n}
onMouseDblClick = @onMouseDblClick = function( scTarget,scOwner,x,y,scMouseParams ) {\n	__\n}
onMouseWheel = @onMouseWheel = function( scTarget,scOwner,x,y,scMouseParams ) {\n	__\n}
onMouseTick = @onMouseTick = function( scTarget,scOwner,x,y,scMouseParams ) {\n	__\n}
onMouseIdle = @onMouseIdle = function( scTarget,scOwner,x,y,scMouseParams ) {\n	__\n}
onDrop = @onDrop = function( scTarget,scOwner,x,y,scMouseParams ) {\n	__\n}
onDragEnter = @onDragEnter = function( scTarget,scOwner,x,y,scMouseParams ) {\n	__\n}
onDragLeave = @onDragLeave = function( scTarget,scOwner,x,y,scMouseParams ) {\n	__\n}
onDragRequest = @onDragRequest = function( scTarget,scOwner,x,y,scMouseParams ) {\n	__\n}
onMouseClick = @onMouseClick = function( scTarget,scOwner,x,y,scMouseParams ) {\n	__\n}
onKeyDown = @onKeyDown = function( scTarget,scOwner,keyCode, altState, scKeyParams ) {\n	__\n}
onKeyUp = @onKeyUp = function( scTarget,scOwner,keyCode, altState, scKeyParams ) {\n	__\n}
onKeyChar = @onKeyChar = function( scTarget,scOwner,keyCode, altState, scKeyParams ) {\n	__\n}
onFocusLost = @onFocusLost = function( scTarget,scOwner,focusParams ) {\n	__\n}
onFocusGot = @onFocusGot = function( scTarget,scOwner,focusParams ) {\n	__\n}  
onGestureRequest = @onGestureRequest = function(scTarget,scOwner,scGestureParams) {\n	scGestureParams.flags = 0xFFFF/*_HL_GESTURE_FLAGS_ALL*/\n	return true;__\n}
onGestureZoom = @onGestureZoom = function(scTarget,scOwner,scGestureParams) {\n	__/*缩放*/\n}
onGesturePan = @onGesturePan = function(scTarget,scOwner,scGestureParams) {\n	__/*平移*/\n}
onGestureRotate = @onGestureRotate = function(scTarget,scOwner,scGestureParams) {\n	__/*旋转*/\n}
onGestureTap1 = @onGestureTap1 = function(scTarget,scOwner,scGestureParams) {\n	__/*单击*/\n}
onGestureTap2 = @onGestureTap2 = function(scTarget,scOwner,scGestureParams) {\n	__/*双击*/\n}
onFrameDocumentComplete = @onFrameDocumentComplete = function(scTarget,scOwner,reason,behaviorParams) {\n	__\n}
onApplicationEvent = @onApplicationEvent = function(scTarget,scOwner,reason,behaviorParams) {\n	__/*postEvent或sendEvent发出一大于0x100的消息*/\n}
onElementControlCreated = @onElementControlCreated = function(scTarget,scOwner,reason,behaviorParams) {\n	var scCtrl = scOwner.getCtrl();__/*自定义控件已创建*/\n}
onButtonClick = @onButtonClick = function(scTarget,scOwner,reason,behaviorParams) {\n	__\n}
onButtonPress = @onButtonPress = function(scTarget,scOwner,reason,behaviorParams) {\n	__\n}
onButtonStateChanged = @onButtonStateChanged = function(scTarget,scOwner,reason,behaviorParams) {\n	__\n}
onEditValueChanging = @onEditValueChanging = function(scTarget,scOwner,reason,behaviorParams) {\n	__\n}
onEditValueChanged = @onEditValueChanged = function(scTarget,scOwner,reason,behaviorParams) {\n	__\n}
onSelectSelectionChanged = @onSelectSelectionChanged = function(scTarget,scOwner,reason,behaviorParams) {\n	__\n}
onSelectStateChanged = @onSelectStateChanged = function(scTarget,scOwner,reason,behaviorParams) {\n	var scOption = ..web.sciter.element( behaviorParams.he )\n	__\n}
onPopupRequest = @onPopupRequest = function(scTarget,scOwner,reason,behaviorParams) {\n	var scPopupOwner = ..web.sciter.element( behaviorParams.he )\n	__\n}
onPopupReady = @onPopupReady = function(scTarget,scOwner,reason,behaviorParams) {\n	var scPopupOwner = ..web.sciter.element( behaviorParams.he )\n	__\n}
onPopupDismissed = @onPopupDismissed = function(scTarget,scOwner,reason,behaviorParams) {\n	var scPopupOwner = ..web.sciter.element( behaviorParams.he )\n	__\n}
onMenuItemActive = @onMenuItemActive = function(scTarget,scOwner,reason,behaviorParams) {\n	var scPopupOwner = ..web.sciter.element( behaviorParams.he )\n	__\n}
onMenuItemClick = @onMenuItemClick = function(scTarget,scOwner,reason,behaviorParams) {\n	var scPopupOwner = ..web.sciter.element( behaviorParams.he )\n	__\n}
onContextMenuSetup = @onContextMenuSetup = function(scTarget,scOwner,reason,behaviorParams) {\n	var scPopupOwner = ..web.sciter.element( behaviorParams.he )\n	__\n}
onContextMenuRequest = @onContextMenuRequest = function(scTarget,scOwner,reason,behaviorParams) {\n	var scPopupOwner = ..web.sciter.element( behaviorParams.he )\n	__\n}
onVisualStateChanged = @onVisualStateChanged = function(scTarget,scOwner,shown,behaviorParams) {\n	__/*可视状态改变触发此事件*/\n}
onDisabledStateChanged = @onDisabledStateChanged = function(scTarget,scOwner,reason,behaviorParams) {\n	__/*禁用状态改变改变触发此事件*/\n}
onPopupDismissing = @onPopupDismissing = function(scTarget,scOwner,reason,behaviorParams) {\n	__/*弹出节点隐藏时触发此事件*/n}
onHyperlinkClick = @onHyperlinkClick = function(scTarget,scOwner,reason,behaviorParams) {\n	__/*点击超链接时触发此事件*/\n}
onTableHeaderClick = @onTableHeaderClick = function(scTarget,scOwner,cellIndex,behaviorParams) {\n	__/*grid控件单击列标题时触发此事件*/\n}
onTableRowClick = @onTableRowClick = function(scTarget,scOwner,rowIndex,behaviorParams) {\n	__/*grid控件单击项目时触发此事件*/\n}
onTableRowDblClick = @onTableRowDblClick = function(scTarget,scOwner,rowIndex,behaviorParams) {\n	__/*grid控件双击项目时触发此事件*/\n}
onElementCollapsed = @onElementCollapsed = function(scTarget,scOwner,reason,behaviorParams) {\n	__/*节点折叠触发此事件*/\n}
onElementExpanded = @onElementExpanded = function(scTarget,scOwner,reason,behaviorParams) {\n	__/*节点展开触发此事件*/\n}
onActiveChild = @onActiveChild = function(scTarget,scOwner,reason,behaviorParams) {\n	__/*激活子节点触发此事件*/n}
onInitDataView = @onInitDataView = function(scTarget,scOwner,reason,behaviorParams) {\n	__\n}
onRowsDataRequest = @onRowsDataRequest = function(scTarget,scOwner,reason,behaviorParams) {\n	__\n}
onUiStateChanged = @onUiStateChanged = function(scTarget,scOwner,reason,behaviorParams) {\n	__/*界面状态变更触发此事件,例如richedit光标移动等*/nn}
onFormSubmit = @onFormSubmit = function(scTarget,scOwner,reason,behaviorParams) {\n	var formData = behaviorParams.data.getValue();__\n}
onFormReset = @onFormReset = function(scTarget,scOwner,reason,behaviorParams) {\n	__\n} 
onVideoInitialized = @onVideoInitialized = function(scTarget,scOwner,reason,behaviorParams) {\n	__\n}
onVideoStarted = @onVideoStarted = function(scTarget,scOwner,reason,behaviorParams) {\n	__\n}
onVideoStopped = @onVideoStopped = function(scTarget,scOwner,reason,behaviorParams) {\n	__\n}
onVideoBindRequest = @onVideoBindRequest = function(scTarget,scOwner,reason,behaviorParams) {\n	__\n}
onPaginationStarts = @onPaginationStarts = function(scTarget,scOwner,reason,behaviorParams) {\n	__\n}
onPaginationEnds = @onPaginationEnds = function(scTarget,scOwner,totalPages,behaviorParams) {\n	__\n}
onPaginationPage = @onPaginationPage = function(scTarget,scOwner,pageNo,behaviorParams) {\n	__\n}
onDocumentParsed = @onDocumentParsed = function(scTarget,scOwner,reason,behaviorParams) {\n	__/*页面已完成DOM解析，在onDocumentReady以前触发*/\n}
onDocumentReady = @onDocumentReady = function(scTarget,scOwner,reason,behaviorParams) {\n	__/*文档脚本等已加载完成并准备就绪*/n\n} 
onFrameDocumentComplete = @onFrameDocumentComplete = function(scTarget,scOwner,reason,behaviorParams) {\n	if( scOwner != scOwner.root() ) return;\n	__/*文档或框架文档已加载\n此事件在onDocumentReady以后触发n} 
onClosePopup = @onClosePopup = function(scTarget,scOwner,reason,behaviorParams) {\n	__\n}
onRequestTooltip = @onRequestTooltip = function(scTarget,scOwner,reason,behaviorParams) {\n	__\n}
onAnimation = @onAnimation = function(scTarget,scOwner,reason,behaviorParams) {\n	__/*节点动画触发此事件*/\n}
onCustomEvent = @onCustomEvent = function(scTarget,scOwner,reason,behaviorParams) {\n	__/*自定义事件触发此回调*/\n} 
onAttributeChange = @.onAttributeChange = function(scTarget,scOwner,name,value) {\n	__/*属性变更*/\n}
onSize = @onSize = function(scOwner) {\n	__/*节点大小改变时触发此事件*/\n}
onExchangeDrag = @onExchangeDrag = function( scTarget,scOwner,x,y,mode,scValueObject,exParams ) {  \n	return true;__/*这里返回true才会显示可拖放鼠标指针*/ \n}
onExchangeDragEnter = @onExchangeDragEnter = function( scTarget,scOwner,x,y,mode,scValueObject,exParams ) {  \n	return true;__/*拖入时触发此事件*/\n}
onExchangeDragLeave = @onExchangeDragLeave = function( scTarget,scOwner,x,y,mode,scValueObject,exParams ) {  \n	return true;__/*拖离时触发此事件*/\n}
onExchangeDrop = @onExchangeDrop = function( scTarget,scOwner,x,y,mode,scValueObject,exParams ) { \n    var data,dataType = fetchData( _HL_EXF__/*可选指定支持的拖放数据类型*/ );\n    if( data ) {\n        return true;\n    }\n}
onExchangeAcceptDrop = @onExchangeAcceptDrop = function( scTarget,scOwner,x,y,mode,scValueObject,exParams ) {  \n	return true;__/*这里返回true表示可接受拖放*/ \n}
onExchangeCancel = @onExchangeCancel = function( scTarget,scOwner,x,y,mode,scValueObject,exParams ) {  \n	return true;__/*取消拖放时触发*/ \n}
onDataArrived = @onDataArrived = function(scTarget,scOwner,data,dataType,status,url){\n    return true;__/*返回true撤消数据不显示内容*/\n}
onTimer = @onTimer = function(scOwner,timerId) {\n	__/*定时器触发此事件*/\n}
onClick = @onClick = function( scOwner ){\n	__/*click函数触发此事件*/\n	return true;\n} 
onIsEmpty = @onIsEmpty = function( scOwner ){\n	__\n	return true,false__/*分别为:是否中止事件传递,是否为空值*/;\n}
onGetValue = @onGetValue = function( scOwner ){\n	\n	return true,__/*返回控件值*/;\n}
onSetValue = @onSetValue = function(  scOwner,value ){\n	__\n	return true\n}
onReplaceSel = @onReplaceSel = function(  scOwner,value ){\n	__\n	return true\n}
onGetCaretPos = @onGetCaretPos = function(  scOwner,value ){\n	__\n	return true,__/*光标位置:left,top,width,height*/\n}
onDetach = @onDetach = function( scOwner ){\n	\n	__/*节点注销behavior时触发此事件*/	\n}
onAttach = @onAttach = function( scOwner ){\n	\n	__/*节点附加behavior时触发此事件*/	\n}
onDrawForeground = @onDrawForeground  = function(scOwner,hdc,rc){ \n	__/*自绘前景*/\n	return true;\n}
onDrawContent = @onDrawContent = function(scOwner,hdc,rc){ \n	__/*自绘内容*/\n	return true;\n}
onDrawBackground = @onDrawBackground= function(scOwner,hdc,rc){ \n	__/*自绘背景*/\n	return true;\n}
end intellisense***/