nmhdr = !nmhdr.
graphics = !gdipgraphics.
winform = !winform.
nmSysLink = !syslinklitem.
ltCtrl = !static.
scCtrl = !static.
scValueObject = !web_sciter_value.
ltValueObject = !web_layout_value.
mainForm = main.aardio中创建的主窗口对象，\n必须设置为全局变量并指向界面线程主窗口,\n\n编写IDE插件时必须将主窗口指向全局变量mainForm,\n否则关闭窗口时无法自动退出界面线程\n!winform.
mainLayout = main.aardio创建的HTMLayout窗口\n!weblayout.
mainSciter = main.aardio创建的HTMLayout窗口\n!websciter.
wbLayout = main.aardio创建的HTMLayout窗口\n!weblayout.
wbSciter = main.aardio创建的HTMLayout窗口\n!websciter.
mainWb = main.aardio中创建的web窗口\n!wb.
logfont = !logfont.
event.srcElement = !ele.
event.cancelBubble = 设置或获取事件是否向上冒泡\n是否允许触发上层父节点事件处理函数
event.button = 鼠标按钮
event.wheelDelta = 鼠标滚轮滚动的距离和方向
event.screenX = 鼠标屏幕 x坐标  
event.screenY = 鼠标屏幕 y坐标 
event.shiftKey = Shift键状态
event.ctrlKey = Ctrl键状态。 
event.altKey = Alt键状态
event.type = 事件名
event.returnValue = 设置事件返回值\n设为false阻止默认行为
event.keyCode = 设置或获取与导致事件的按键关联的 Unicode 按键代码。
findData = !findData.
ltMouseParams = !hl_mouse_params.
ltKeyParams = !hl_key_params.
scMouseParams = !sc_mouse_params.
scKeyParams = !sc_key_params.
drawItem.CtlType = 控件类型
drawItem.CtlID = 控件ID
drawItem.itemID = 项ID
drawItem.itemAction = _ODA_前缀常量表示的绘制行为
drawItem.itemState = _ODS_前缀常量表示的控件状态
drawItem.hwndItem = hwndItem
drawItem.hDC = 绘图设备句柄
drawItem.rcItem = 自绘区块\n!rect.
drawItem.itemData = itemData
measureItem.CtlType = 控件类型 
measureItem.CtlID = 控件ID
measureItem.itemID = 项ID
measureItem.itemWidth = 项目宽度
measureItem.itemHeight = 项目高度
measureItem.itemData = 项目数据
external = 导出到javascript的aardio对象
rectf = !rectf.
ltGestureParams.pos = 节点坐标\n!point.
ltGestureParams.pos_view = 视图坐标\n!point.
ltGestureParams.flags = 状态 _HL_GESTURE_STATE_*** 
ltGestureParams.delta_time = 间隔时间
ltGestureParams.delta_time = 间隔时间
ltGestureParams.delta_xy = 偏移坐标\n!point.
ltGestureParams.delta_v = 偏移值
ltGestureParams.pointer = 结构体指针地址
blendFunction = !blendFunction.
behaviorParams.pointer = 此结构体指针地址
behaviorParams.cmd = 命令代码
behaviorParams.target = 目标节点指针\n使用web.layout.element转换为节点对象
behaviorParams.he = 源节点指针\n使用web.layout.element转换为节点对象
behaviorParams.reason = 原因代码
behaviorParams.data = 附加值\nweb.layout.valueObject类型\n!web_layout_value.
deviceBroadcastData.size = 大小
deviceBroadcastData.devicetype = 设备类型
deviceBroadcastData.reserved = 保留字段
deviceBroadcastData.name = 名称
deviceBroadcastData.flags = 选项
deviceBroadcastData.drive = 分区号/_DBT_DEVTYP_VOLUME
deviceBroadcastData.driveType = 分区类型/_DBT_DEVTYP_VOLUME
deviceBroadcastData.deviceName = 分区设备名/_DBT_DEVTYP_VOLUME
deviceBroadcastData.unitmask = 分区掩码/_DBT_DEVTYP_VOLUME
deviceBroadcastData.classguid = GUID/_DBT_DEVTYP_DEVICEINTERFACE
deviceBroadcastData.handle = 句柄/_DBT_DEVTYP_HANDLE
deviceBroadcastData.hdevnotify = 句柄/_DBT_DEVTYP_HANDLE
deviceBroadcastData.nameoffset = 自定义名偏移值/_DBT_DEVTYP_HANDLE
deviceBroadcastData.identifier = OEM标识/_DBT_DEVTYP_OEM
deviceBroadcastData.suppfunc = 设定值/_DBT_DEVTYP_OEM
hpHttpServer=!hpHttpServer.
hpHttpClient=!hpHttpClient.
hpHttpAgent=!hphpHttpAgent.
hpTcpServer=!hpTcpServer.
hpTcpClient=!hpTcpClient.
hpTcpAgent=!hphpTcpAgent.
hpTcpPackServer=!hpTcpPackServer.
hpTcpPackClient=!hpTcpPackClient.
hpTcpPackAgent=!hphpTcpPackAgent.
hpTcpPullServer=!hpTcpPullServer.
hpTcpPullClient=!hpTcpPullClient.
hpTcpPullAgent=!hphpTcpPullAgent.
hpUdpServer=!hpUdpServer.
hpUdpClient=!hpUdpClient.
hpUdpCast=!hpUdpCast.
accObject = winex.accObject\n!winex_accObject.
accChild = winex.accObject\n!winex_accObject.
accParent = winex.accObject\n!winex_accObject.
rc=RECT结构体\n这是保留变量名,应专用于RECT对象,\n!rect.
rect=RECT结构体\n这是保留变量名,应专用于RECT对象,\n!rect.
rectf=RECTF结构体\n这是保留变量名,应专用于RECTF对象,\n!rectf.
point=POINT/POINTF结构体\n这是保留变量名,应专用于POINT/POINTF对象,\n!point.
pt=POINT/POINTF结构体\n这是保留变量名,应专用于POINT/POINTF对象,\n!point.
::DwmApi = @DwmApi := raw.loadDll("Dwmapi.dll")
details = @/**details(实现原理)\n__/*用于在库文件中添加在库函数文档中默认折叠的附加说明*/\nend details**/
buffer = 原生字节数组,\n由 raw.buffer 函数分配的可读写、固定长度的内存，\n可用于存取各种二进制数据，几乎所有字符串函数中都可以作为字符串使用
Deprecated = @Deprecated__/*注释已废弃并将在后续版本移除功能*/
lvDispInfo = !LV_DISPINFO.